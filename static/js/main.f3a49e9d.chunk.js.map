{"version":3,"sources":["serviceWorker.js","store/actionTypes.js","store/reducers/auth.js","models/createArcs.js","models/polygonOffset.js","dataParsers/parser.js","store/reducers/app.js","models/model.js","models/layer.js","models/layers.js","store/reducers/layers.js","store/reducers/mouse.js","store/reducers/measureShapesTool.js","store/reducers/cloudStorage.js","store/reducers/upload.js","store/reducer.js","middleware/log.js","models/job.js","dataParsers/parseJSON.js","middleware/pasteData.js","middleware/stageController.js","middleware/skeleton_recognition.js","axios-database.js","store/actions/appActions.js","store/actions/layersActions.js","store/actions/cloudStorageActions.js","components/UI/Button/Button.js","components/UI/ButtonSeparator/ButtonSeparator.js","components/MainComponent/ToolbarComponent/ToolbarComponent.js","models/stage.js","store/actions/stageActions.js","components/MainComponent/CanvasComponent/CanvasComponent.js","components/Layout/StatusComponent/StatusComponent.js","components/MainComponent/GraphicsComponent/stageComponent.js","models/graphics.js","models/utils.js","components/MainComponent/GraphicsComponent/graphics/shapeComponent.js","components/MainComponent/GraphicsComponent/graphics/imageComponent.js","components/MainComponent/GraphicsComponent/layerComponent.js","components/MainComponent/GraphicsComponent/domelements/labelComponent.js","components/MainComponent/GraphicsComponent/LabelsLayerComponent/labelsLayerComponent.js","components/MainComponent/GraphicsComponent/domelements/VertexLabel/VertexLabel.js","components/MainComponent/GraphicsComponent/graphics/vertexComponent.js","components/MainComponent/GraphicsComponent/graphics/verticesComponent.js","components/MainComponent/GraphicsComponent/verticesLayerComponent.js","components/MainComponent/GraphicsComponent/layersComponent.js","tools/measurePointsTool.js","tools/measureShapesTool.js","tools/displayCoordsTool.js","components/UI/Modal.js","components/UI/ModalPopup/ModalPopup.js","components/AboutPopup/AboutPopup.js","dataParsers/createXML.js","components/DownloadPopup/DownloadPopup.js","components/UI/SnackbarRoot.js","components/UI/Snackbar/Snackbar.js","dataParsers/parserXML.js","dataParsers/parserODB.js","dataParsers/parsePGM.js","dataParsers/parseCSV.js","dataParsers/parseTXT.js","store/actions/upload.js","components/UploadPopup/UploadPopup.js","components/Constructions/CloudDocument.js","containers/MainComponent/MainComponent.js","components/LayersList/LayerListToolbar/LayerListToolbar.js","components/LayersList/LayerEditForm/LayerEditForm.js","components/LayersList/LayerListElement/LayerListElement.js","containers/LayerList/LayersList.js","components/Layout/AsideComponent/AsideComponent.js","AppBody.js","components/Layout/HeaderComponent/HeaderComponent.js","components/Constructions/Demo.js","components/Constructions/SkeletonRecognition.js","models/collisionDistance.js","components/Constructions/CollisionDemo.js","components/UI/Spinner/Spinner.js","store/actions/auth.js","App.js","index.js","components/UI/Button/Button.module.css","components/UploadPopup/UploadPopup.module.css","components/LayersList/LayerListElement/LayerListElement.module.css","components/UI/ButtonSeparator/ButtonSeparator.module.css","components/MainComponent/ToolbarComponent/ToolbarComponent.module.css","components/UI/ModalPopup/ModalPopup.module.css","containers/LayerList/LayersList.module.css","components/Layout/HeaderComponent/HeaderComponent.module.css","components/UI/Spinner/Spinner.module.css","components/MainComponent/CanvasComponent/CanvasComponent.module.css","components/Layout/StatusComponent/StatusComponent.module.css","components/MainComponent/GraphicsComponent/LabelsLayerComponent/labelsLayer.module.css","components/MainComponent/GraphicsComponent/domelements/VertexLabel/VertexLabel.module.css","components/AboutPopup/AboutPopup.module.css","components/DownloadPopup/DownloadPopup.module.css","components/UI/Snackbar/Snackbar.module.css","containers/MainComponent/MainComponent.module.css","components/LayersList/LayerListToolbar/LayerListToolbar.module.css","components/LayersList/LayerEditForm/LayerEditForm.module.css","components/Layout/AsideComponent/AsideComponent.module.css"],"names":["Boolean","window","location","hostname","match","NEW_STAGE_CREATED","STAGE_RESIZED","STAGE_UNMOUNTED","PAN_BY_DRAG_BUTTON_CLICKED","MEASURE_POINTS_BUTTON_PRESSED","MEASURE_SHAPES_BUTTON_PRESSED","TOGGLE_ABOUT_POPUP_CLICKED","TOGGLE_UNITS_CLICKED","TOGGLE_WIDTH_MODE_CLICKED","TOGGLE_DISPLAY_VERTICES_CLICKED","TOGGLE_DISPLAY_LABELS_CLICKED","TOGGLE_SHOW_LAYER_LIST_CLICKED","TOGGLE_DOWNLOAD_POPUP_CLICKED","TOGGLE_UPLOAD_POPUP_CLICKED","MOUSE_MOVED_ON_STAGE","MOUSE_DOWN_ON_STAGE","MOUSE_UP_ON_STAGE","MOUSE_WHEEL_MOVE_ON_STAGE","MOUSE_ROLL_OVER_SHAPE","MOUSE_ROLL_OUT_SHAPE","MOUSE_CLICKED_ON_SHAPE","PINCH_DOWN_ON_STAGE","PINCH_MOVED_ON_STAGE","PINCH_UP_ON_STAGE","PAN_AND_ZOOM_TO_SHAPE","ADD_LAYER_BUTTON_PRESSED","ADD_NEW_LAYER","DELETE_LAYER_BUTTON_PRESSED","SORT_LAYERS_BUTTON_PRESSED","TOGGLE_DISPLAY_LAYER_PRESSED","TOGGLE_AFFECTED_LAYER_PRESSED","OPEN_LAYER_EDIT_FORM_PRESSED","SUBMIT_LAYER_EDIT_FORM_PRESSED","ESCAPE_LAYER_EDIT_FORM_PRESSED","LAYERS_LIST_ARROW_DOWN_PRESSED","LAYERS_LIST_ARROW_UP_PRESSED","FILES_UPLOAD_COMPLETED","INITIALIZE_UPLOAD_STATE","DATA_FROM_BUFFER_PASTED","AABB_TREE_NEXT_LEVEL","SKELETON_RECOGNITION_URI","SKELETON_RECOGNITION_BUTTON_PRESSED","ASYNC_OPERATION_STARTED","ASYNC_OPERATION_ENDED","REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED","REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED","REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED","REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED","DELETE_DOCUMENT_FROM_DATABASE_SUCCEED","DOCUMENT_SELECTED_FROM_LIST","DOCUMENT_NAME_UPDATED","CLEAR_ALL_BUTTON_CLICKED","AUTHENTICATION_STARTED","AUTHENTICATION_SUCCEED","AUTHENTICATION_FAILED","AUTHENTICATION_LOGOUT","AUTHENTICATION_SET_USERNAME","initialState","token","userId","username","error","loading","auth","state","action","type","actionTypes","arcSE","center","start","end","counterClockwise","startAngle","vector","slope","endAngle","Utils","EQ","Math","PI","r","length","Arc","Flatten","BooleanOperations","BOOLEAN_UNION","unify","subtract","addToIntPoints","getSortedArray","splitByIntersections","removeNotRelevantChains","removeOldFaces","restoreFaces","offsetArc","arc","value","arc_cap1","arc_cap2","w","abs","polygon","Polygon","arc_outer","clone","sweep","arcStartSweep","arcEndSweep","arc_inner","undefined","pc","CW","CCW","Segment","addFace","faces","setArcLength","ips","Face","getSelfIntersections","edges","slice","edge_cap1","edge_cap2","int_points","pt","int_points_sorted","bv","OUTSIDE","int_point","edge_before","edge_after","INSIDE","num","next","prev","orientation","ORIENTATION","reverse","offsetSegment","seg","v_seg_unit","x","y","normalize","v_left","rotate90CCW","multiply","v_right","rotate90CW","seg_left","translate","seg_right","cap1","cap2","Parser","str","arrayOfLines","watchArray","line","push","substring","indexOf","parenth","parseInt","split","isNaN","trim","point","Point","label","termArr","psArr","ps","peArr","pe","pcArr","Circle","pllArr","xmin","ymin","width","height","box","Box","segment","i","search","nedgesStr","nedges","j","this","parseToSegment","parseToArc","points","pointArr","shape","shapes","parseToPoint","parseToCircle","parseToRectangle","parseToODBLine","parseToODBArc","parseToPolygon","size","parseToShapes","parseToPoints","unitsList","name","decimals","divisor","defaultAppState","title","version","process","build","units","parser","widthOn","displayVertices","displayLabels","measurePointsActive","zoomFactor","originX","originY","showAboutPopup","importDataToNewLayer","showSkeletonRecognitionButton","applySkeletonRecognition","stage","showSpinner","showLayerList","showDownloadPopup","showUploadPopup","app","ActionTypes","Object","assign","resolution","origin","curUnitsId","findIndex","newUnits","defaultStyle","strokeStyle","stroke","fill","alpha","Model","geom","style","model","Layer","color","displayed","edited","affected","layer","newShape","add","merge","xmax","ymax","JSON","stringify","colors","Layers","layers","getNewName","defaultName","inc","comparator","find","lay","currentAffectedLayer","getAffected","col","index","l","newLayers","filter","getNextColor","sort","l1","l2","name1","toUpperCase","name2","map","toJSON","newLayer","affectedLayer","affectedLayerId","delete","setAffected","toggleDisplayed","setEdited","setNameAndTitle","nextLayer","newCurLayer","newNextLayer","defaultMouseState","startX","startY","touchPoints","mouse","x1","y1","x2","y2","defaultMeasureShapesTool","measureShapesActive","measureShapesFirstClick","hoveredShape","firstMeasuredShape","secondMeasuredShape","firstMeasuredLayer","secondMeasuredLayer","distance","shortestSegment","is_mobile","mobilecheck","measureShapesTool","shape1","shape2","Distance","documentDefaultState","id","owner","lastUpdated","cloudStorageDefaultState","document","documentsList","isUpToDate","stateDocumentsList","actionDocumentsList","keys","key","hasOwnProperty","cloudStorage","newList","defaultState","uploadStarted","uploadCompleted","uploadedFiles","upload","reducer","combineReducers","log","getState","dispatch","console","Job","filename","profiles","materials","b","parseJSONShape","jsonShape","parseJSON","jsonArray","job","parse","e","Error","Array","faceArray","Image","uri","pasteData","data","items","getAsString","string","shapesArray","message","stageController","resize","panByMouseStart","dx","dy","panByMouseMove","panByMouseStop","panToCoordinate","zoomToLimits","bIn","delta","zoomByMouse","removeAllChildren","removeAllListeners","zoomByPinchStart","distStart","sqrt","ratio","zoomByPinchMove","zoomByPinchStop","Algorithmia","skeleton_recognition","currentLayer","input","nx","ny","client","algo","pipe","then","output","result","row","instance","axios","create","baseURL","setHomeView","asyncOperationStarted","asyncOperationEnded","addNewLayer","toggleDisplayLayer","deleteAllLayers","documents","values","fetchDocumentFromDatabase","layerActions","appActions","firstLayer","docUrl","geomUrl","Promise","all","get","responses","layerData","requestFetchDocumentFromDatabaseSucceed","catch","alert","addDocumentToDatabase","payload","history","post","response","layersJSON","geomPayload","registerDocumentAddedToDatabase","Date","now","updateDocumentInDatabase","put","url","geomId","reponse","button","props","iconStyle","classes","IconTrigger","active","IconModeActive","IconModeNotActive","buttonStyle","mobileOnly","onClick","className","iconName","buttonSeparator","ButtonSeparator","IconSeparator","ToolbarComponent","Button","onShowUploadPopupPressed","onLayerListButtonClicked","onClearAllButtonClicked","onShowDownloadPopupPressed","onHomeButtonPressed","onPanByDragPressed","onMeasurePointsButtonPressed","onMeasureBetweenShapesButtonPressed","onToggleWidthModePressed","onToggleVerticesPressed","onToggleLabelsPressed","onSkeletonRecognitionButtonPressed","onUnitClicked","onShowAboutPopupPressed","Component","Stage","canvas","Touch","enable","mouseMoveOutside","enableMouseOver","clientWidth","clientHeight","oldOrigin","oldZoomFactor","pinchAnchorX","pinchAnchorY","pinchStarted","minX","C2W_X","minY","C2W_Y","maxX","maxY","addChild","scalar","scalingFactor","canvasX","canvasY","worldX","worldY","W2C_X","W2C_Y","newOrigin","deltaX","deltaY","curRatio","min","max","focusX","focusY","zoomIn","zoomOut","newFocusX","newFocusY","panBy","zoom","getContext","clearRect","CreatejsStage","handleMouseWheelMove","CanvasComponent","canvasElement","createRef","handleMouseMove","event","focus","nativeEvent","touches","clientX","target","offsetLeft","clientY","offsetTop","handlePinchMove","stageX","stageY","handleMouseDown","handlePinchDown","handleMouseUp","stopPropagation","preventDefault","handlePinchUp","handleMouseLeave","blur","body","handleMouseWheel","detail","wheelDelta","offsetX","offsetY","handleMouseWheelFox","layerX","layerY","handlePaste","current","on","addEventListener","passive","registerStage","tabIndex","ref","styles","connect","actions","StatusComponent","StageComponent","setTransform","update","onStageUnmounted","children","graphics","graphics_point","graphics_segment","graphics_arc","graphics_circle","graphics_box","graphics_polygon","radius","Graphics","beginFill","command","circle","drawCircle","ignoreScale","setStrokeStyle","beginStroke","moveTo","lineTo","endStroke","drawRect","setGraphicsEdge","edge","setGraphicsEdgeSegment","setGraphicsEdgeArc","setGraphicsFace","face","first","is_equal","obj1","obj2","equal","format","toFixed","ShapeComponent","params","handleMouseOver","onMouseOver","handleMouseOut","onMouseOut","handleClick","Shape","hovered","selected","aperture","isEmpty","redraw","nextProps","nextState","off","removeChild","clear","ImageComponent","bitmap","image","naturalWidth","naturalHeight","scaleX","scaleY","tx","ty","regX","regY","img","onload","Bitmap","onImageLoaded","setAttribute","src","loadImage","LayerComponent","forceUpdate","handleMouseRollOverShape","handleMouseRollOutShape","handleClickOnShape","labelComponent","left","top","position","LabelComponent","VertexLabel","vertex","VertexComponent","shadow","Shadow","setState","mouseEnabled","VerticesComponent","vertices","LayersComponent","MeasurePointsTool","measureCanvas","measureStage","endX","endY","measureStarted","cursor","draw","context","textX","textY","textWidth","backX","backY","pllX","pllY","W2C_Scalar","beginPath","rect","lineWidth","text","measurement","font","measureText","textAlign","fillStyle","globalAlpha","fillRect","textHeight","fillText","dist","removeAllEventListeners","mainCanvas","MeasureShapesTool","labelShape","Text","unscale","redrawLabel","DisplayCoordsTool","coordX","coordY","backgroundColor","opacity","margin","padding","modalRoot","getElementById","Modal","el","createElement","appendChild","ReactDOM","createPortal","ModalPopup","onBackDropClicked","ev","closePopup","handleKeyDown","code","elementDrag","dragX","dragY","element","closeDragElement","onmouseup","onmousemove","dragMouseDown","removeEventListener","showPopup","BackDrop","onMouseDown","header","AboutPopup","toggleAboutPopup","href","pointToXMLString","xw","startElement","writeAttribute","endElement","segmentToXMLString","arcToXMLString","round","circleToXMLString","polygonToXMlString","createXMLString","XMLWriter","startDocument","endDocument","toString","DownloadPopup","downloadData","xmlString","encodeURIComponent","download","snackbarRoot","SnackbarRoot","Snackbar","display","onAnimationEnd","parseEdges","edgesXML","from","getAttribute","parsePolygon","polygonsXML","islands","getElementsByTagName","holes","parseSegment","segmentXML","parseCurve","curveXML","parsePoint","pointXML","parseImage","imageXML","InchToPixels","Number","MilsToPixels","lines","terms","end_of_face","parseLine","apertures","ap_value","parseArc","toPixels","micronToPixels","parseTXT","readAsText","reader","file","files","promise","resolve","reject","theFile","namesplitted","extension","xmlDoc","DOMParser","parseFromString","titles","firstChild","nodeValue","profilesXML","materialXML","segmentsXML","curvesXML","curve","pointsXML","imagesXML","parseXML","px","py","parseCSV","substr","polarity","odbLine","odbArc","ap_key","parseODB","readAsImage","yStr","xStr","sizeX","readAsDataURL","readFile","FileReader","readFiles","promises","filesUploadCompleted","UploadPopup","inputElement","clipboardWindowRef","clipboardWindowWidth","clipboardWindowHeight","dragOver","clipboardData","openFilesButtonClicked","click","pasteHandler","onPaste","dropHandler","dataTransfer","kind","getAsFile","dragOverHandler","dragLeaveHandler","filesSelectedHandler","File","FileList","initUploadState","pX","pY","snackbarMessage","newFilesNum","UploadTarget","UploadTargetDragOver","UploadTargetDragLeave","paddingLeft","paddingRight","paddingTop","paddingBottom","onDrop","onDragOverCapture","onDragLeaveCapture","multiple","onChange","CloudDocument","done","cloudActions","MainComponent","onSaveDocumentButtonClicked","dataURL","toDataURL","toLocaleDateString","toLocaleTimeString","clearCurrentDocument","clearAllLayers","toggleWidthMode","toggleDisplayVertices","onresize","resizeStage","handleKeyUp","displayCoordsTool","measurePointsTool","measuredLayersDisplayed","togglePanByDrag","toggleMeasureBetweenPoints","toggleMeasureBetweenShapes","toggleDisplayLabels","toggleUnits","toggleLayerList","toggleDownloadPopup","toggleUploadPopup","destroyStage","pasteDataFromBuffer","path","component","ownProps","LayerListToolbar","onAddLayerButtonClicked","onEditLayerButtonClicked","onDeleteLayerButtonClicked","onSortLayersButtonClicked","LayerEditForm","onSubmitLayerEditForm","currentTarget","setFocus","onSubmit","onMouseMove","defaultValue","cols","rows","onEscapeLayerEditForm","parent","LayerListElement","activeElement","nodeName","elem","refs","layerName","hex","g","percent","replace","rgba","bgcolor","layerNameOpacity","onLayerClicked","onDoubleClick","onLayerDoubleClicked","LayerSelectionBox","onAffectedBoxClicked","LayerSelectionMark","LayerNameBox","LayersList","parentElement","setAffectedNextLayer","setAffectedPrevLayer","onLayerListClicked","layersComponent","maxHeight","AsideComponent","updateDocumentName","Fragment","onManageCloudStorageButtonClicked","withRouter","pathname","Demo","resp","panAndZoomToShape","SkeletonRecognition","CollisionDistance","polygon1","polygon2","collision_distance","POSITIVE_INFINITY","edge2polygon","edge2","shapeBox","NEGATIVE_INFINITY","resp_edges","edge1","segment2segment","segment2arc","arc2arc","intersections","Line","Vector","intersect","ip","distanceTo","segment1","segment2","point2shape","v_s","v","tangent_point","arc1","arc2","arc_enlarged","translateArc","dist_tmp","EQ_0","GE","arc_reduced","LT","vec","arc_tmp","newPolygon","arc_trans","CollisionDemo","collision","apply","polygon3","applyCollisionDemo","spinner","Loader","authStart","authSucceed","authFailed","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","email","getItem","password","logIn","authData","returnSecureToken","setItem","expirationDate","getTime","expiresIn","idToken","localId","queryParams","authSetUsername","App","authCheckState","isAuthenticated","AppBody","exact","Spinner","timeLeft","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","render","basename","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f3a49e9d.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nexport const NEW_STAGE_CREATED = \"NEW_STAGE_CREATED\";\r\nexport const STAGE_RESIZED = \"STAGE_RESIZED\";\r\nexport const NEW_SHAPE_PASTED = \"NEW_SHAPE_PASTED\";\r\nexport const CLEAR_ALL = \"CLEAR_ALL\";\r\nexport const STAGE_UNMOUNTED = \"STAGE_UNMOUNTED\";\r\n\r\n/** Toolbar buttons **/\r\nexport const PAN_BY_DRAG_BUTTON_CLICKED = \"PAN_BY_DRAG_BUTTON_CLICKED\";\r\n// export const SAVE_DOCUMENT_BUTTON_CLICKED = \"SAVE_DOCUMENT_BUTTON_CLICKED\";\r\nexport const MANAGE_CLOUD_STORAGE_BUTTON_CLICKED = \"MANAGE_CLOUD_STORAGE_BUTTON_CLICKED\";\r\n\r\nexport const MEASURE_POINTS_BUTTON_PRESSED = \"MEASURE_POINTS_BUTTON_PRESSED\";\r\nexport const MEASURE_SHAPES_BUTTON_PRESSED = \"MEASURE_SHAPES_BUTTON_PRESSED\";\r\nexport const TOGGLE_ABOUT_POPUP_CLICKED = \"TOGGLE_ABOUT_POPUP_CLICKED\";\r\n// export const CLOSE_ABOUT_POPUP_BUTTON_PRESSED = \"CLOSE_ABOUT_POPUP_BUTTON_PRESSED\";\r\nexport const TOGGLE_UNITS_CLICKED = \"TOGGLE_UNITS_CLICKED\";\r\nexport const TOGGLE_WIDTH_MODE_CLICKED = \"TOGGLE_WIDTH_MODE_CLICKED\";\r\nexport const TOGGLE_DISPLAY_VERTICES_CLICKED = \"TOGGLE_DISPLAY_VERTICES_CLICKED\";\r\nexport const TOGGLE_DISPLAY_LABELS_CLICKED = \"TOGGLE_DISPLAY_LABELS_CLICKED\";\r\nexport const TOGGLE_SHOW_LAYER_LIST_CLICKED = \"TOGGLE_SHOW_LAYER_LIST_CLICKED\";\r\nexport const TOGGLE_DOWNLOAD_POPUP_CLICKED = \"TOGGLE_DOWNLOAD_POPUP_CLICKED\";\r\nexport const TOGGLE_UPLOAD_POPUP_CLICKED=\"TOGGLE_UPLOAD_POPUP_CLICKED\";\r\n\r\nexport const MOUSE_MOVED_ON_STAGE = \"MOUSE_MOVED_ON_STAGE\";\r\nexport const MOUSE_DOWN_ON_STAGE = \"MOUSE_DOWN_ON_STAGE\";\r\nexport const MOUSE_UP_ON_STAGE = \"MOUSE_UP_ON_STAGE\";\r\nexport const MOUSE_WHEEL_MOVE_ON_STAGE = \"MOUSE_WHEEL_MOVE_ON_STAGE\";\r\n\r\nexport const MOUSE_ROLL_OVER_SHAPE = \"MOUSE_ROLL_OVER_SHAPE\";\r\nexport const MOUSE_ROLL_OUT_SHAPE = \"MOUSE_ROLL_OUT_SHAPE\";\r\nexport const MOUSE_CLICKED_ON_SHAPE = \"MOUSE_CLICKED_ON_SHAPE\";\r\n\r\nexport const PINCH_DOWN_ON_STAGE = \"PINCH_DOWN_ON_STAGE\";\r\nexport const PINCH_MOVED_ON_STAGE = \"PINCH_MOVED_ON_STAGE\";\r\nexport const PINCH_UP_ON_STAGE = \"PINCH_UP_ON_STAGE\";\r\n\r\n// export const HOME_BUTTON_CLICKED = \"HOME_BUTTON_CLICKED\";\r\nexport const PAN_TO_COORDINATE = \"PAN_TO_COORDINATE\";\r\nexport const PAN_AND_ZOOM_TO_SHAPE = \"PAN_AND_ZOOM_TO_SHAPE\";\r\n\r\nexport const LAYER_LIST_PANEL_PRESSED = \"LAYER_LIST_PANEL_PRESSED\";\r\nexport const ADD_LAYER_BUTTON_PRESSED = \"ADD_LAYER_BUTTON_PRESSED\";\r\nexport const ADD_NEW_LAYER = \"ADD_NEW_LAYER\";\r\nexport const DELETE_LAYER_BUTTON_PRESSED = \"DELETE_LAYER_BUTTON_PRESSED\";\r\nexport const SORT_LAYERS_BUTTON_PRESSED = \"SORT_LAYERS_BUTTON_PRESSED\";\r\nexport const CLEAN_AND_UPDATE_LAYERS = \"CLEAN_AND_UPDATE_LAYERS\";\r\n\r\nexport const TOGGLE_DISPLAY_LAYER_PRESSED = \"TOGGLE_DISPLAY_LAYER_PRESSED\";\r\nexport const TOGGLE_AFFECTED_LAYER_PRESSED=\"TOGGLE_AFFECTED_LAYER_PRESSED\";\r\nexport const OPEN_LAYER_EDIT_FORM_PRESSED = \"OPEN_LAYER_EDIT_FORM_PRESSED\";\r\nexport const SUBMIT_LAYER_EDIT_FORM_PRESSED = \"SUBMIT_LAYER_EDIT_FORM_PRESSED\";\r\nexport const ESCAPE_LAYER_EDIT_FORM_PRESSED = \"ESCAPE_LAYER_EDIT_FORM_PRESSED\";\r\n\r\nexport const LAYERS_LIST_ARROW_DOWN_PRESSED = \"LAYERS_LIST_ARROW_DOWN_PRESSED\";\r\nexport const LAYERS_LIST_ARROW_UP_PRESSED = \"LAYERS_LIST_ARROW_UP_PRESSED\";\r\n\r\n// export const TOGGLE_WATCH_EXPAND_CLICKED = \"TOGGLE_WATCH_EXPAND_CLICKED\";\r\n\r\n// export const FILENAME_LIST_SELECTED = \"FILENAME_LIST_SELECTED\";\r\nexport const FILES_UPLOAD_COMPLETED = \"FILES_UPLOAD_COMPLETED\";\r\nexport const INITIALIZE_UPLOAD_STATE = \"INITIALIZE_UPLOAD_STATE\";\r\nexport const DATA_FROM_BUFFER_PASTED = \"DATA_FROM_BUFFER_PASTED\";\r\n\r\n/** AABB Distance Measurement Demo **/\r\nexport const AABB_DEMO_URI = \"AABB_DEMO_URI\";\r\nexport const AABB_DEMO_NEXT_DIST_STEP = \"AABB_DEMO_NEXT_DIST_STEP\";\r\nexport const AABB_TREE_NEXT_LEVEL = \"AABB_TREE_NEXT_LEVEL\";\r\n\r\n/** Collision demo **/\r\nexport const COLLISION_DEMO_URI = \"COLLISION_DEMO_URI\";\r\nexport const COLLISION_DEMO_BUTTON_PRESSED = \"COLLISION_DEMO_BUTTON_PRESSED\";\r\n\r\n/** Skeleton recognition demo **/\r\nexport const SKELETON_RECOGNITION_URI = \"SKELETON_RECOGNITION_URI\";\r\nexport const SKELETON_RECOGNITION_BUTTON_PRESSED=\"SKELETON_RECOGNITION_BUTTON_PRESSED\";\r\n\r\nexport const ASYNC_OPERATION_STARTED = \"ASYNC_OPERATION_STARTED\";\r\nexport const ASYNC_OPERATION_ENDED = \"ASYNC_OPERATION_ENDED\";\r\n\r\n/** Documents list **/\r\nexport const REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED = \"REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED\";\r\nexport const REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED = \"REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED\";\r\nexport const REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED = \"REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED\";\r\nexport const REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED = \"REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED\";\r\nexport const DELETE_DOCUMENT_FROM_DATABASE_SUCCEED = \"DELETE_DOCUMENT_FROM_DATABASE_SUCCEED\";\r\nexport const DOCUMENT_SELECTED_FROM_LIST = \"DOCUMENT_SELECTED_FROM_LIST\";\r\nexport const DOCUMENT_NAME_UPDATED = \"DOCUMENT_NAME_UPDATED\";\r\nexport const CLEAR_ALL_BUTTON_CLICKED = \"CLEAR_ALL_BUTTON_CLICKED\";\r\n\r\n/* Authentication */\r\nexport const AUTHENTICATION_STARTED = \"AUTHENTICATION_STARTED\";\r\nexport const AUTHENTICATION_SUCCEED = \"AUTHENTICATION_SUCCEED\";\r\nexport const AUTHENTICATION_FAILED = \"AUTHENTICATION_FAILED\";\r\nexport const AUTHENTICATION_LOGOUT = \"AUTHENTICATION_LOGOUT\";\r\nexport const AUTHENTICATION_SET_USERNAME = \"AUTENTICATION_SET_USERNAME\";\r\n\r\n","import * as actionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    username: null,\r\n    error: null,\r\n    loading: false\r\n};\r\n\r\nconst auth = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTHENTICATION_STARTED:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                loading: true\r\n            };\r\n        case actionTypes.AUTHENTICATION_SUCCEED:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                token: action.token,\r\n                userId: action.userId,\r\n                username: action.username,\r\n                loading: false\r\n            };\r\n        case actionTypes.AUTHENTICATION_FAILED:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                token: null,\r\n                userId: null,\r\n                username: null,\r\n                loading: false\r\n            };\r\n        case actionTypes.AUTHENTICATION_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userId: null,\r\n                username: null\r\n            };\r\n        case actionTypes.AUTHENTICATION_SET_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.username\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default auth;","import {Utils, Arc, vector} from \"@flatten-js/core\";\r\n\r\nexport function arcSE(center, start, end, counterClockwise) {\r\n    let startAngle = vector(center,start).slope;\r\n    let endAngle = vector(center, end).slope;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, start).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\nexport function arcStartSweep(center, start, sweep, counterClockwise) {\r\n    let startAngle = vector(center,start).slope;\r\n    let endAngle = startAngle + sweep;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, start).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\nexport function arcEndSweep(center, end, sweep, counterClockwise) {\r\n    let endAngle = vector(center,end).slope;\r\n    let startAngle = endAngle - sweep;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, end).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\n","\r\n/**\r\n * Created by Alex Bol on 12/02/2018.\r\n */\r\nimport {Segment, Arc, Polygon, Face} from \"@flatten-js/core\";\r\nimport {CW, CCW, INSIDE, OUTSIDE, ORIENTATION} from \"@flatten-js/core\";\r\nimport {vector} from \"@flatten-js/core\";\r\nimport Flatten from \"@flatten-js/core\";\r\nimport {arcSE, arcStartSweep, arcEndSweep} from \"./createArcs\";\r\n\r\nconst {unify, subtract, BOOLEAN_UNION} = Flatten.BooleanOperations;\r\nconst {addToIntPoints, getSortedArray, splitByIntersections} = Flatten.BooleanOperations;\r\nconst {removeNotRelevantChains, removeOldFaces, restoreFaces} = Flatten.BooleanOperations;\r\n\r\n/**\r\n * Offset polygon by given value\r\n * @param {Polygon} polygon - input polygon\r\n * @param {number} value - offset value, may be positive or negative\r\n * @returns {Polygon} offsetPolygon\r\n */\r\n\r\n/**\r\n *\r\n * @param polygon\r\n * @param value\r\n *\r\n */\r\nexport function offset(polygon, value) {\r\n    let w = value;\r\n\r\n    let edges = [...polygon.edges];\r\n    let offsetPolygon = polygon.clone();\r\n    let offsetEdge;\r\n\r\n    if (w !== 0) {\r\n\r\n        for (let edge of edges) {\r\n            if (edge.isSegment()) {\r\n                offsetEdge = offsetSegment(edge.shape, w);\r\n            }\r\n            else {\r\n                offsetEdge = offsetArc(edge.shape, w);\r\n            }\r\n\r\n            if (w > 0) {\r\n                offsetPolygon = unify(offsetPolygon, offsetEdge);\r\n            }\r\n            else {\r\n                offsetPolygon = subtract(offsetPolygon, offsetEdge);\r\n            }\r\n        }\r\n    }\r\n\r\n    return offsetPolygon;\r\n}\r\n\r\nexport function offsetArc(arc, value) {\r\n\r\n    let w = Math.abs(value);\r\n\r\n    // Define outline polygon\r\n    let polygon = new Polygon();\r\n    let arc_cap1,arc_cap2;\r\n\r\n    let arc_outer = arc.clone();\r\n    arc_outer.r = arc.r + w;\r\n\r\n    arc_cap1 = arcStartSweep(arc.end, arc_outer.end, Math.PI, arc.counterClockwise);\r\n    arc_cap2 = arcEndSweep(arc.start, arc_outer.start, Math.PI, arc.counterClockwise);\r\n\r\n    let arc_inner = undefined;\r\n    if (arc.r > w) {\r\n        arc_inner = new Arc(arc.pc, arc.r - w, arc.endAngle, arc.startAngle,\r\n            arc.counterClockwise === CW ? CCW : CW);\r\n    }\r\n    else {\r\n        // arc_inner = new Arc(arc.pc, w - arc.r, arc.startAngle, arc.endAngle, arc.counterClockwise);\r\n        arc_inner = new Segment(arc_cap1.end, arc_cap2.start);\r\n    }\r\n\r\n    polygon.addFace([arc_outer, arc_cap1, arc_inner, arc_cap2]);\r\n    [...polygon.faces][0].setArcLength();\r\n\r\n    // Create intersection points\r\n    let ips = Face.getSelfIntersections([...polygon.faces][0], polygon.edges, false);\r\n\r\n    // TODO: getSelfIntersections returns points with correspondent edges - avoid duplication\r\n    ips = ips.slice(0,ips.length/2);    // for now slice array to avoid duplication in points\r\n\r\n    let int_points = [];\r\n    let edge_cap1;\r\n    let edge_cap2;\r\n\r\n    edge_cap1 = [...polygon.edges][1];\r\n    edge_cap2 = [...polygon.edges][3];\r\n\r\n    for (let pt of ips) {\r\n        addToIntPoints(edge_cap1, pt, int_points);\r\n        addToIntPoints(edge_cap2, pt, int_points);\r\n    }\r\n\r\n    // Sort intersection points and insert them as new vertices\r\n    let int_points_sorted = getSortedArray(int_points);\r\n    splitByIntersections(polygon, int_points_sorted);\r\n\r\n\r\n    // Set BV flags\r\n    let bv = OUTSIDE;\r\n    for (let int_point of int_points_sorted) {\r\n        int_point.edge_before.bv = bv;\r\n        int_point.edge_after.bv = (bv === OUTSIDE ? INSIDE : OUTSIDE);\r\n        bv = int_point.edge_after.bv;   // invert flag on each iteration\r\n    }\r\n\r\n    // Remove inner \"chains\"\r\n    let op = BOOLEAN_UNION;\r\n    removeNotRelevantChains(polygon, op, int_points_sorted, true);\r\n\r\n    // return int_points_sorted;\r\n    // Swap links\r\n    let num = int_points.length;\r\n    if (num > 0) {\r\n        let edge_before;\r\n        let edge_after;\r\n        // 0 => 3\r\n        edge_before = int_points_sorted[0].edge_before;\r\n        edge_after = int_points_sorted[num-1].edge_after;\r\n        edge_before.next = edge_after;\r\n        edge_after.prev = edge_before;\r\n\r\n        // Fill in missed links in intersection points\r\n        int_points_sorted[0].edge_after = int_points_sorted[num-1].edge_after;\r\n        int_points_sorted[num-1].edge_before = int_points_sorted[0].edge_before;\r\n\r\n        if (num === 4) {\r\n            // 2 => 1\r\n            edge_before = int_points_sorted[2].edge_before;\r\n            edge_after = int_points_sorted[1].edge_after;\r\n            edge_before.next = edge_after;\r\n            edge_after.prev = edge_before;\r\n\r\n            // Fill in missed links in intersection points\r\n            int_points_sorted[2].edge_after = int_points_sorted[1].edge_after;\r\n            int_points_sorted[1].edge_before = int_points_sorted[2].edge_before;\r\n        }\r\n\r\n        // remove old faces\r\n        removeOldFaces(polygon, int_points);\r\n        // restore faces\r\n        restoreFaces(polygon, int_points, int_points);\r\n    }\r\n\r\n    let face0 = [...polygon.faces][0];\r\n    if (face0.orientation() === ORIENTATION.CCW) {\r\n        polygon.reverse();\r\n    }\r\n    return polygon;\r\n}\r\n\r\nexport function offsetSegment(seg, value) {\r\n    let w = Math.abs(value);\r\n\r\n    let polygon = new Polygon();\r\n    let v_seg = vector(seg.end.x-seg.start.x, seg.end.y-seg.start.y);\r\n    let v_seg_unit = v_seg.normalize();\r\n    let v_left = v_seg_unit.rotate90CCW().multiply(w);\r\n    let v_right = v_seg_unit.rotate90CW().multiply(w);\r\n    let seg_left = seg.translate(v_left);\r\n    let seg_right = seg.translate(v_right).reverse();\r\n    let cap1 = arcSE(seg.end, seg_left.end, seg_right.start, CW);\r\n    let cap2 = arcSE(seg.start, seg_right.end, seg_left.start, CW);\r\n\r\n    polygon.addFace([seg_left, cap1, seg_right, cap2]);\r\n    return polygon;\r\n}\r\n","/**\r\n * Created by alexanderbol on 01/05/2017.\r\n */\r\n\r\nimport {Point, Segment, Arc, Circle, Box, Polygon, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\nimport {offsetSegment, offsetArc} from \"../models/polygonOffset\";\r\n\r\n/*\r\nlet debug_str = `\r\n+\t\t[0]\t{nrec=27 nalloc=27 h_ind_id=-1 ...} mat_cont_hdr_struc\tmat_cont_struc\r\n+\t\t[1]\t{pmin=59146400,5973200 pmax=59606001,6438000} mat_cont_lim_struc\tmat_cont_struc\r\n+\t\t[2]\t{nedge=23 nalloc=25 ntop=2 ...} mat_cont_poly_struc\tmat_cont_struc\r\n+\t\t[3]\t{pmin=59146400,5973200 pmax=59606001,6438000} mat_cont_lim_struc\tmat_cont_struc\r\n+\t\t[4]\t{ps=59192738,6363124 pe=59216000,6372800 pc=59216000,6340000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[5]\t{ps=59216000,6372800 pe=59267652,6372800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[6]\t{ps=59267652,6372800 pe=59267652,6307200 pc=59360000,6340000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[7]\t{ps=59267652,6307200 pe=59229586,6307200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[8]\t{ps=59229586,6307200 pe=59212000,6289614} mat_seg_struc\tmat_cont_struc\r\n+\t\t[9]\t{ps=59212000,6289614 pe=59212000,6056386} mat_seg_struc\tmat_cont_struc\r\n+\t\t[10]\t{ps=59212000,6056386 pe=59229586,6038800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[11]\t{ps=59229586,6038800 pe=59469614,6038800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[12]\t{ps=59469614,6038800 pe=59487200,6056386} mat_seg_struc\tmat_cont_struc\r\n+\t\t[13]\t{ps=59487200,6056386 pe=59487200,6100500} mat_seg_struc\tmat_cont_struc\r\n+\t\t[14]\t{ps=59487200,6100500 pe=59434000,6180000 pc=59520000,6180000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[15]\t{ps=59434000,6180000 pe=59552800,6100500 pc=59520000,6180000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[16]\t{ps=59552800,6100500 pe=59552800,6042800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[17]\t{ps=59552800,6042800 pe=59543124,6019538 pc=59520000,6042800 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[18]\t{ps=59543124,6019538 pe=59506462,5982876} mat_seg_struc\tmat_cont_struc\r\n+\t\t[19]\t{ps=59506462,5982876 pe=59483200,5973200 pc=59483200,6006000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[20]\t{ps=59483200,5973200 pe=59216000,5973200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[21]\t{ps=59216000,5973200 pe=59192738,5982876 pc=59216000,6006000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[22]\t{ps=59192738,5982876 pe=59156076,6019538} mat_seg_struc\tmat_cont_struc\r\n+\t\t[23]\t{ps=59156076,6019538 pe=59146400,6042800 pc=59179200,6042800 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[24]\t{ps=59146400,6042800 pe=59146400,6303200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[25]\t{ps=59146400,6303200 pe=59156076,6326462 pc=59179200,6303200 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[26]\t{ps=59156076,6326462 pe=59192738,6363124} mat_seg_struc\tmat_cont_struc\r\n`;\r\n*/\r\n\r\n/*\r\n+\t\tcircle\t{pc=40445880,-10500080 r=41327880}\tmat_circle_struc\r\n+\t\tcircle\t{pc=38215880,-7700040 r=92456}\tmat_circle_struc\r\n+\t\trect\t{pll=38215880,-7700040 w=92456 h=50000}\tmat_rect_struc\r\n+\t\tshape1\t{type=512 s={...} }\t_mat_shape_struc\r\n+\t\tline\t{ps=-18423,529080 pe=1047776,480195 r=60000 cap=0}\tmat_line_struc\r\n+\t\tarc\t{ps=1001217,249728 pe=752127,51853 pc=853697,179712 cw=??? r=60000 cap=0}\tmat_arc_struc\r\n */\r\n\r\nexport class Parser {\r\n    parseToWatchArray(str) {\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n        let watchArray = [];\r\n        for (let line of arrayOfLines) {\r\n            watchArray.push(line.substring(line.indexOf('{')));\r\n        }\r\n        return watchArray;\r\n    }\r\n\r\n    parseToPoint(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let x, y;\r\n        // try to parse format: {p=7496986,-4460045}\r\n        x = parseInt(parenth.split('=')[1].split(',')[0],10);\r\n        y = parseInt(parenth.split('=')[1].split(',')[0],10);\r\n        if (isNaN(x) || isNaN(y)) {\r\n            // try to parse format: {x=7169200 y=3521200 }\r\n            x = parseInt(parenth.trim().split(' ')[0].split('=')[1],10);\r\n            y = parseInt(parenth.trim().split(' ')[1].split('=')[1],10);\r\n        }\r\n        //let pointArr = parenth.split('=')[1].split(',');\r\n        //let point = new Point(parseInt(pointArr[0],10), parseInt(pointArr[1],10));\r\n        let point = new Point(x,y);\r\n        point.label = line.split(/\\s+/)[1];\r\n        return point;\r\n    }\r\n\r\n    parseToSegment(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        return new Segment(ps, pe);\r\n    }\r\n\r\n    parseToArc(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let pcArr = termArr[2].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n\r\n        let cwStr = termArr[3].split('=')[1];\r\n        let counterClockwise = cwStr === '0' ? true : false;\r\n\r\n        let startAngle = vector(pc,ps).slope;\r\n        let endAngle = vector(pc, pe).slope;\r\n\r\n        if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n            // endAngle += 2*Math.PI;\r\n            endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n        }\r\n        let r = vector(pc, ps).length;\r\n\r\n        return new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n    }\r\n\r\n    parseToCircle(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let pcArr = termArr[0].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n        let r = parseInt(termArr[1].split('=')[1],10);\r\n        // let circle = new Circle(pc, r);\r\n        // let polygon = new Polygon();\r\n        // polygon.addFace(circle);\r\n        return new Circle(pc, r);;\r\n    }\r\n\r\n    parseToRectangle(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let pllArr = termArr[0].split('=')[1].split(',');\r\n        let xmin = parseInt(pllArr[0],10);\r\n        let ymin = parseInt(pllArr[1],10);\r\n        let width = parseInt(termArr[1].split('=')[1],10);\r\n        let height = parseInt(termArr[2].split('=')[1],10);\r\n\r\n        let box = new Box(xmin, ymin, xmin + width, ymin + height);\r\n        let polygon = new Polygon();\r\n        polygon.addFace(box);\r\n        return polygon;\r\n        // return new Box(xmin, ymin, xmin + width, ymin + height);\r\n    }\r\n\r\n    parseToODBLine(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let w = parseInt(termArr[2].split('=')[1],10);\r\n\r\n        let segment = new Segment(ps, pe);\r\n        let polygon = w > 0 ? offsetSegment(segment, w) : new Polygon();\r\n\r\n        return polygon;\r\n    }\r\n\r\n    parseToODBArc(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let pcArr = termArr[2].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n\r\n        let cwStr = termArr[3].split('=')[1];\r\n        let counterClockwise = cwStr === '0' ? true : false;\r\n\r\n        let startAngle = vector(pc,ps).slope;\r\n        let endAngle = vector(pc, pe).slope;\r\n\r\n        if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n            // endAngle += 2*Math.PI;\r\n            endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n        }\r\n        let r = vector(pc, ps).length;\r\n\r\n        let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n        let w = parseInt(termArr[4].split('=')[1],10);\r\n\r\n        let polygon = w > 0 ? offsetArc(arc, w) : new Polygon();\r\n\r\n        return polygon;\r\n    }\r\n\r\n    parseToPolygon(str) {\r\n        let polygon = new Polygon();\r\n        // let mulitystr = debug_str;\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n\r\n        for (let i=0; i < arrayOfLines.length; i++) {\r\n            let line = arrayOfLines[i];\r\n            if (line.search('mat_cont_poly_struc') >= 0) {\r\n                let parenth = line.match(/\\{([^)]+)\\}/)[1];       // string inside {..}\r\n                let termArr = parenth.split(' ');                 // array of terms \"attr=value\"\r\n                let nedgesTerm = termArr[0];                      // \"nedge=nn\"\r\n                let nedgesStr = nedgesTerm.split('=')[1];\r\n                let nedges = parseInt(nedgesStr,10);\r\n\r\n                // Create new face from next #nedges of segments and arcs\r\n                let edges = [];\r\n                for (let j=i+2; j < i+2+nedges; j++) {\r\n                    line = arrayOfLines[j];\r\n                    // let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n                    // let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n                    if (line.search('mat_seg_struc') >= 0) {\r\n                        let segment = this.parseToSegment(line);\r\n                        edges.push(segment);\r\n                    }\r\n                    else if (line.search('mat_curve_struc') >= 0) {\r\n                        let arc = this.parseToArc(line);\r\n                        edges.push(arc);\r\n                    }\r\n                }\r\n                polygon.addFace(edges);\r\n            }\r\n        }\r\n        return polygon;\r\n    }\r\n\r\n    parseToPoints(str) {\r\n        let points = [];\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n        for (let line of arrayOfLines) {\r\n            if (line.search('point_struc') >= 0) {\r\n                let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n                let pointArr = parenth.split('=')[1].split(',');\r\n                let point = new Point(parseInt(pointArr[0],10), parseInt(pointArr[1],10));\r\n                point.label = line.split(/\\s+/)[1];\r\n                points.push(point);\r\n            }\r\n        }\r\n        return points;\r\n    }\r\n\r\n    parseToShapes(str) {\r\n        let shapes = [];\r\n        let shape;\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n        for (let line of arrayOfLines) {\r\n            if (line.search('point_struc') >= 0) {\r\n                shape = this.parseToPoint(line);\r\n            }\r\n            else if (line.search('_seg_struc') >= 0) {\r\n                shape = this.parseToSegment(line);\r\n            }\r\n            else if (line.search('_curve_struc') >= 0) {\r\n                shape = this.parseToArc(line);\r\n            }\r\n            else if (line.search('_circle_struc') >= 0) {\r\n                shape = this.parseToCircle(line);\r\n            }\r\n            else if (line.search('_rect_struc') >= 0) {\r\n                shape = this.parseToRectangle(line);\r\n            }\r\n            else if (line.search('_line_struc') >= 0) {\r\n                shape = this.parseToODBLine(line);\r\n            }\r\n            else if (line.search('_arc_struc') >= 0) {\r\n                shape = this.parseToODBArc(line);\r\n            }\r\n            shapes.push(shape);\r\n        }\r\n        return shapes;\r\n    }\r\n\r\n    parse(str) {\r\n        /* try polygon */\r\n        let polygon = this.parseToPolygon(str);\r\n        if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n            return [polygon];\r\n        }\r\n\r\n        /* try array of shapes excluding polygon */\r\n        let shapes = this.parseToShapes(str);\r\n        if (shapes.length > 0) {\r\n            return shapes;\r\n        }\r\n\r\n        /* try array of points */\r\n        let points = this.parseToPoints(str);\r\n        if (points.length > 0) {\r\n            return points;\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","import * as ActionTypes from \"../actionTypes\";\r\nimport {Parser} from \"../../dataParsers/parser\";\r\n\r\nconst unitsList = [\r\n    {\r\n        name: \"pixels\",\r\n        decimals: 0,\r\n        divisor: 1\r\n    },\r\n    {\r\n        name: \"inch\",\r\n        decimals: 7,\r\n        divisor: 10160000\r\n    },\r\n    {\r\n        name: \"mm\",\r\n        decimals: 6,\r\n        divisor: 400000\r\n    }];\r\n\r\nconst defaultAppState = {\r\n    title: \"Debug Viewer\",\r\n    version: process.env.REACT_APP_VERSION,\r\n    build: \"\",\r\n    units: \"pixels\",\r\n    decimals: 0,\r\n    divisor: 1,\r\n    // bg: \"#F1F1F1\",\r\n    parser: new Parser(),\r\n    widthOn: true,\r\n    displayVertices: false,\r\n    displayLabels: true,\r\n    measurePointsActive: false,\r\n    zoomFactor: undefined,\r\n    originX: undefined,\r\n    originY: undefined,\r\n    showAboutPopup: false,\r\n    importDataToNewLayer: true,       // if false, import data to affected layer\r\n    showSkeletonRecognitionButton: false,\r\n    applySkeletonRecognition: false,\r\n    stage: null,\r\n    showSpinner: false,\r\n    showLayerList: false,\r\n    showDownloadPopup: false,\r\n    showUploadPopup: false,\r\n};\r\n\r\nconst app = (state = defaultAppState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.NEW_STAGE_CREATED:\r\n            return Object.assign({}, state, {\r\n                stage: action.stage,\r\n                zoomFactor: action.stage.zoomFactor * action.stage.resolution,\r\n                originX: action.stage.origin.x,\r\n                originY: action.stage.origin.y,\r\n            });\r\n\r\n        case ActionTypes.STAGE_UNMOUNTED:\r\n            return Object.assign({}, state, {\r\n                stage: null,\r\n                zoomFactor: undefined,\r\n                originX: undefined,\r\n                originY: undefined\r\n            });\r\n\r\n        case ActionTypes.MOUSE_WHEEL_MOVE_ON_STAGE:\r\n        case ActionTypes.PAN_AND_ZOOM_TO_SHAPE:\r\n        case ActionTypes.PINCH_MOVED_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                zoomFactor: action.stage.zoomFactor * action.stage.resolution,\r\n                originX: action.stage.origin.x,\r\n                originY: action.stage.origin.y,\r\n            });\r\n        case ActionTypes.MOUSE_MOVED_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                originX: action.stage.origin.x,\r\n                originY: action.stage.origin.y\r\n            });\r\n        case ActionTypes.TOGGLE_UNITS_CLICKED:\r\n            let curUnitsId = unitsList.findIndex(units => state.units === units.name);\r\n            let newUnits = unitsList[(curUnitsId + 1) % 3];\r\n            return Object.assign({}, state, {\r\n                units: newUnits.name,\r\n                decimals: newUnits.decimals,\r\n                divisor: newUnits.divisor\r\n            });\r\n        case ActionTypes.TOGGLE_WIDTH_MODE_CLICKED:\r\n            return Object.assign({}, state, {\r\n                widthOn: !state.widthOn,\r\n                displayVertices: state.widthOn ? state.displayVertices : false\r\n            });\r\n        case ActionTypes.TOGGLE_DISPLAY_VERTICES_CLICKED:\r\n            if (state.displayVertices) {\r\n                return Object.assign({}, state, {\r\n                    displayVertices: false\r\n                });\r\n            }\r\n            else {\r\n                return Object.assign({}, state, {\r\n                    widthOn: false,\r\n                    displayVertices: true\r\n                });\r\n            }\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LABELS_CLICKED:\r\n            return Object.assign({}, state, {\r\n                displayLabels: !state.displayLabels\r\n            });\r\n\r\n        case ActionTypes.TOGGLE_ABOUT_POPUP_CLICKED:\r\n            return Object.assign({}, state, {\r\n                showAboutPopup: !state.showAboutPopup\r\n            });\r\n\r\n        // case ActionTypes.CLOSE_ABOUT_POPUP_BUTTON_PRESSED:\r\n        //     return Object.assign({}, state, {\r\n        //         showAboutPopup: false\r\n        //     });\r\n\r\n        case ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED:\r\n            return Object.assign({}, state, {\r\n                measurePointsActive: false\r\n            });\r\n\r\n        case ActionTypes.MEASURE_POINTS_BUTTON_PRESSED:\r\n            return Object.assign({}, state, {\r\n                measurePointsActive: true\r\n            });\r\n        case ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED:\r\n            return Object.assign({}, state, {\r\n                measurePointsActive: false\r\n            });\r\n        case ActionTypes.SKELETON_RECOGNITION_URI:\r\n            return Object.assign({}, state, {\r\n                showSkeletonRecognitionButton: true\r\n            });\r\n        case ActionTypes.SKELETON_RECOGNITION_BUTTON_PRESSED:\r\n            return Object.assign({}, state, {\r\n                applySkeletonRecognition: true\r\n            });\r\n        case ActionTypes.ASYNC_OPERATION_STARTED:\r\n            return Object.assign({}, state, {\r\n                showSpinner: true\r\n            });\r\n        case ActionTypes.ASYNC_OPERATION_ENDED:\r\n            return Object.assign({}, state, {\r\n                showSpinner: false\r\n            });\r\n        case ActionTypes.AABB_TREE_NEXT_LEVEL:\r\n            return state;\r\n        case ActionTypes.TOGGLE_SHOW_LAYER_LIST_CLICKED:\r\n            return {\r\n                ...state,\r\n                showLayerList: !state.showLayerList\r\n            };\r\n        case ActionTypes.TOGGLE_DOWNLOAD_POPUP_CLICKED:\r\n            return {\r\n                ...state,\r\n                showDownloadPopup: !state.showDownloadPopup\r\n            };\r\n        case ActionTypes.TOGGLE_UPLOAD_POPUP_CLICKED:\r\n            return {\r\n                ...state,\r\n                showUploadPopup: !state.showUploadPopup\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default app;\r\n","\r\nlet defaultStyle = {\r\n    strokeStyle: 1,\r\n    stroke: \"#FF0303\",\r\n    fill: \"#FF0303\",\r\n    alpha: 1.0\r\n};\r\n\r\n/* Class Model represents data model that will be added to layer */\r\nclass Model {\r\n    constructor(geom = undefined, style = undefined, label = \"\") {\r\n        this.geom = geom;\r\n        this.style = style || defaultStyle;\r\n        this.label = label;\r\n    }\r\n\r\n    clone() {\r\n        let model = new Model(this.geom, this.style, this.label);\r\n        return Object.assign(model, this);\r\n    }\r\n\r\n    get box() {\r\n        return this.geom.box;\r\n    }\r\n/*\r\n    static transformPoint(pt, stage) {\r\n        return new Flatten.Point(stage.W2C_X(pt.x), stage.W2C_Y(pt.y));\r\n    }\r\n\r\n    static transformSegment(segment, stage) {\r\n        return new Flatten.Segment(\r\n            Model.transformPoint(segment.ps, stage),\r\n            Model.transformPoint(segment.pe, stage)\r\n        )\r\n    }\r\n\r\n    static transformArc(arc, stage) {\r\n        return new Flatten.Arc(\r\n            Model.transformPoint(arc.pc, stage),\r\n            stage.W2C_Scalar(arc.r),\r\n            arc.startAngle,\r\n            arc.endAngle,\r\n            arc.counterClockwise\r\n        )\r\n    }\r\n\r\n    static transformEdge(shape, stage) {\r\n        if (shape instanceof Flatten.Segment) {\r\n            return Model.transformSegment(shape, stage);\r\n        }\r\n        else if (shape instanceof Flatten.Arc) {\r\n            return Model.transformArc(shape, stage);\r\n        }\r\n    }\r\n\r\n    static transformFace(face, stage) {\r\n        // Get shapes of face as array\r\n        let shapes = [];\r\n        for (let edge of face) {\r\n            shapes.push(edge.shape);\r\n        }\r\n\r\n        // Transform array of edges\r\n        return shapes.map(shape => Model.transformEdge(shape, stage));\r\n    }\r\n\r\n    static transformPolygon(polygon, stage) {\r\n        let newPolygon = new Flatten.Polygon();\r\n        let shapes = [];\r\n        for (let face of polygon.faces) {\r\n            shapes = Model.transformFace(face, stage);\r\n            newPolygon.addFace(shapes);\r\n        }\r\n        return newPolygon;\r\n    }\r\n*/\r\n}\r\n\r\nexport default Model;","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport {Point, Box} from '@flatten-js/core';\r\n// import { Shape } from '../models/shape';\r\nimport Model from './model';\r\n\r\nclass Layer {\r\n    constructor(stage) {\r\n        // super();\r\n        // cannot define Layer as extension of PlanarSet due to bug in compiler ?\r\n        this.stage = stage;\r\n        this.shapes = [];         // new Flatten.PlanarSet();\r\n        this.name = \"\";\r\n        this.color = \"\";\r\n        this.title = \"\";\r\n        this.displayed = false;\r\n        this.edited = false;\r\n        this.affected = false;\r\n    }\r\n\r\n    clone() {\r\n        let layer = new Layer(this.stage);\r\n        return Object.assign(layer, this);\r\n    }\r\n\r\n    add(shape) {\r\n        if (shape instanceof Model) {\r\n            this.shapes.push(shape);       // add(shape)\r\n        }\r\n        else {\r\n            let geom = shape;\r\n            let newShape = new Model(geom, {}, shape.label) // , this.stage);\r\n            this.shapes.push(newShape);     // add(newShape);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    addShapesArray(shapes) {\r\n        for (let shape of shapes) {\r\n            this.add(shape);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get box() {\r\n        let box = new Box();\r\n        for (let shape of this.shapes) {\r\n            box = box.merge(shape.geom instanceof Box ? shape.clone() : shape.box);\r\n        }\r\n        return box;\r\n    }\r\n\r\n    get center() {\r\n        let box = this.box;\r\n        return new Point((box.xmin + box.xmax)/2, (box.ymin + box.ymax)/2);\r\n    }\r\n\r\n    toggleDisplayed(color) {\r\n        let displayed = !this.displayed;\r\n        return Object.assign(this.clone(),\r\n            {\r\n                displayed : displayed,\r\n                color: color\r\n            });\r\n    }\r\n\r\n    setAffected(affected) {\r\n        this.affected = affected;\r\n        return this;\r\n        // return Object.assign(this.clone(),\r\n        //     {\r\n        //         affected : affected\r\n        //     });\r\n    }\r\n\r\n    setEdited(edited) {\r\n        return Object.assign(this.clone(),\r\n            {\r\n                edited : edited\r\n            });\r\n    }\r\n\r\n    setNameAndTitle(name,title) {\r\n        return Object.assign(this.clone(),\r\n            {\r\n                name : name,\r\n                title: title,\r\n                edited: false\r\n            });\r\n    }\r\n\r\n    setAlpha() {\r\n        for(let shape of this.shapes) {\r\n            shape.alpha = this.displayed ? 1 : 0;\r\n        }\r\n        return this.shapes;\r\n    }\r\n\r\n    // toggleExpanded(shapeToggle) {\r\n    //     for(let shape of this.shapes) {\r\n    //         if (shape === shapeToggle) {\r\n    //             shape.expanded = !shape.expanded;\r\n    //         }\r\n    //     }\r\n    //     return this;\r\n    // }\r\n\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            title: this.title,\r\n            shapes: JSON.stringify(this.shapes, null, ' ')\r\n        };\r\n    }\r\n}\r\n\r\nexport default Layer;\r\n","/**\r\n * Created by alexanderbol on 20/04/2017.\r\n */\r\n\r\nimport Layer from '../models/layer';\r\n\r\nconst colors = [\r\n    \"#FF0303\",\r\n    \"#4AA403\",\r\n    \"#540080\",\r\n    \"#FFFF40\",\r\n    \"#FF0080\",\r\n    \"#AED424\",\r\n    \"#545400\",\r\n    \"#FFA980\",\r\n    \"#A95480\",\r\n    \"#A9A9FF\",\r\n    \"#00FF00\",\r\n    \"#FFEE76\",\r\n    \"#A40576\",\r\n    \"#4385C8\",\r\n    \"#1CC826\",\r\n    \"#BDBD00\",\r\n    \"#48316E\",\r\n    \"#14616E\",\r\n    \"#8040BD\",\r\n    \"#DC7676\",\r\n    \"#924845\",\r\n    \"#A90000\",\r\n    \"#FFA900\"\r\n];\r\n\r\nclass Layers {\r\n\r\n    static newLayer(stage, layers) {\r\n        let layer = new Layer(stage);\r\n        layer.name = Layers.getNewName(layers);\r\n        if (layers.length === 0) { // first layer\r\n            // layer.color = Layers.getNextColor(layers);\r\n            layer.displayed = false;\r\n            layer.affected = false;\r\n        }\r\n        return layer;\r\n    }\r\n\r\n    static get defaultName() {\r\n        return \"layer\";\r\n    }\r\n\r\n    static getNewName(layers) {\r\n        let name = Layers.defaultName;\r\n        let inc = 1;\r\n        let comparator = (layer) => layer.name === name;\r\n        while (layers.find(comparator) ) {\r\n            name = Layers.defaultName + inc;\r\n            inc++;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    static getAffected(layers) {\r\n        return layers.find((lay) => lay.affected);\r\n    }\r\n\r\n    static setAffected(layers, layer) {\r\n        let currentAffectedLayer = Layers.getAffected(layers);\r\n        if (currentAffectedLayer) {\r\n            currentAffectedLayer.affected = false;\r\n        }\r\n        layer.affected = true;\r\n    }\r\n\r\n    static getNextColor(layers) {\r\n        let color = \"\";\r\n        for (let col of colors) {\r\n            if (!layers.find((layer) =>\r\n                layer.displayed && layer.color === col)) {\r\n                color = col;\r\n                break;\r\n            }\r\n        }\r\n        return color;\r\n    }\r\n\r\n    static delete(layers, layer) {\r\n        let index = layers.findIndex((l) => l === layer);\r\n        let newLayers = layers.filter(l => l !== layer);\r\n        if (index > 0) {\r\n            newLayers[index-1].affected = true;\r\n            if (newLayers[index-1].color === \"\") {\r\n                newLayers[index - 1].color = Layers.getNextColor(newLayers);\r\n            }\r\n            newLayers[index-1].displayed = true;\r\n        }\r\n        return newLayers;\r\n        // another option to delete from array:\r\n        // const newLayers = [...layers]\r\n        // return newLayers.splice( index, 1);\r\n    }\r\n\r\n    static sort(layers) {\r\n        let newLayers = layers.slice();\r\n        newLayers.sort( function(l1, l2) {\r\n            let name1 = l1.name.toUpperCase();\r\n            let name2 = l2.name.toUpperCase();\r\n            if (name1 < name2) {\r\n                return -1;\r\n            }\r\n            if (name1 > name2) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n        return newLayers;\r\n    }\r\n\r\n    static toJSON(layers) {\r\n        return layers.map( layer => layer.toJSON() );\r\n    }\r\n}\r\n\r\nexport default Layers;","import * as ActionTypes from \"../actionTypes\";\r\nimport Layers from \"../../models/layers\";\r\n\r\nconst layers = (state = [], action) => {\r\n    let affectedLayer = state.find(layer => layer.affected);\r\n    let affectedLayerId = state.findIndex(layer => layer.affected);\r\n    let newLayer;\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LAYER_BUTTON_PRESSED:\r\n            newLayer = Layers.newLayer(action.stage, state);\r\n            return [...state, newLayer];\r\n\r\n        case ActionTypes.ADD_NEW_LAYER:\r\n            return [...state, action.layer];\r\n\r\n        case ActionTypes.DELETE_LAYER_BUTTON_PRESSED:\r\n            if (affectedLayer) {\r\n                return Layers.delete(state, affectedLayer);\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        case ActionTypes.CLEAR_ALL_BUTTON_CLICKED:\r\n            return [];\r\n\r\n        case ActionTypes.SORT_LAYERS_BUTTON_PRESSED:\r\n            return Layers.sort(state);\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED:\r\n            let color = \"\";\r\n            if (!action.layer.displayed) {\r\n                color = Layers.getNextColor(state);\r\n                if (color === \"\") return;  // no free colors\r\n            }\r\n            return state.map((layer) => {\r\n                if (layer !== action.layer) {\r\n                    // if action.layer will be undisplayed,\r\n                    // it cannot become affected, then\r\n                    // keep affected on this layer\r\n                    if (action.layer.displayed) {\r\n                        return layer;\r\n                    }\r\n                    else {\r\n                        return layer.setAffected(false);\r\n                    }\r\n                }\r\n                else {\r\n                    let newLayer = layer.toggleDisplayed(color);\r\n                    newLayer.affected = newLayer.displayed;\r\n                    return newLayer;\r\n                }\r\n                // return layer.toggleDisplayed(color);\r\n            });\r\n\r\n        case ActionTypes.TOGGLE_AFFECTED_LAYER_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer !== action.layer) {\r\n                    return layer.setAffected(false);\r\n                }\r\n                else {\r\n                    return layer.setAffected(!layer.affected);\r\n                }\r\n            });\r\n\r\n        // case ActionTypes.NEW_SHAPE_PASTED:\r\n        //     return state.map((layer) => {\r\n        //         if (layer.affected) {\r\n        //             return layer.addShapesArray(action.shapesArray);\r\n        //         }\r\n        //         else {\r\n        //             return layer;\r\n        //         }\r\n        //     });\r\n\r\n        case ActionTypes.OPEN_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer !== affectedLayer) {\r\n                    return layer;\r\n                }\r\n                else {\r\n                    return layer.setEdited(true);\r\n                }\r\n            });\r\n\r\n        case ActionTypes.SUBMIT_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer.edited) {\r\n                    return layer.setNameAndTitle(action.newLayer.name, action.newLayer.title);\r\n                }\r\n                else {\r\n                    return layer;\r\n                }\r\n            });\r\n\r\n        case ActionTypes.ESCAPE_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer.edited) {             // !== action.layer) {\r\n                    return layer.setEdited(false);\r\n                }\r\n                else {\r\n                    return layer;\r\n                }\r\n            });\r\n\r\n        case ActionTypes.LAYERS_LIST_ARROW_DOWN_PRESSED:\r\n            if (affectedLayerId === state.length - 1) {\r\n                return state;\r\n            }\r\n            else {\r\n\r\n                let nextLayer = state[affectedLayerId + 1];\r\n\r\n                return state.map(layer => {\r\n                    if (layer === affectedLayer) {\r\n                        let newCurLayer = layer.toggleDisplayed(\"\");\r\n                        newCurLayer.affected = false;\r\n                        return newCurLayer;\r\n                    }\r\n                    else if (layer === nextLayer) {\r\n                        let color = affectedLayer.color;\r\n                        let newNextLayer = layer.toggleDisplayed(color);\r\n                        newNextLayer.affected = true;\r\n                        return newNextLayer;\r\n                    }\r\n                    else {\r\n                        return layer;\r\n                    }\r\n                });\r\n            }\r\n\r\n        case ActionTypes.LAYERS_LIST_ARROW_UP_PRESSED:\r\n            if (affectedLayerId === 0) {\r\n                return state;\r\n            }\r\n            else {\r\n                let nextLayer = state[affectedLayerId - 1];\r\n\r\n                return state.map(layer => {\r\n                    if (layer === affectedLayer) {\r\n                        let newCurLayer = layer.toggleDisplayed(\"\");\r\n                        newCurLayer.affected = false;\r\n                        return newCurLayer;\r\n                    }\r\n                    else if (layer === nextLayer) {\r\n                        let newNextLayer = layer.toggleDisplayed(affectedLayer.color);\r\n                        newNextLayer.displayed = true;\r\n                        newNextLayer.affected = true;\r\n                        return newNextLayer;\r\n                    }\r\n                    else {\r\n                        return layer;\r\n                    }\r\n                });\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layers;","import * as ActionTypes from \"../actionTypes\";\r\n\r\nconst defaultMouseState = {\r\n    x: 0,\r\n    y: 0,\r\n    startX: undefined,\r\n    startY: undefined,\r\n    touchPoints: undefined\r\n};\r\n\r\nconst mouse = (state = defaultMouseState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.MOUSE_MOVED_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                x: action.x,\r\n                y: action.y\r\n            });\r\n        case ActionTypes.MOUSE_DOWN_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                startX: action.x,\r\n                startY: action.y\r\n            });\r\n        case ActionTypes.MOUSE_UP_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                startX: undefined,\r\n                startY: undefined\r\n            });\r\n\r\n        case ActionTypes.PINCH_DOWN_ON_STAGE: {\r\n            return {\r\n                ...state,\r\n                touchPoints: [\r\n                    {x: action.x1, y: action.y1},\r\n                    {x: action.x2, y: action.y2}\r\n                ]\r\n            }\r\n        }\r\n        // case ActionTypes.PINCH_MOVED_ON_STAGE: {\r\n        //     return {\r\n        //         ...state,\r\n        //         touchPoints: [\r\n        //             {x: action.x1, y: action.y1},\r\n        //             {x: action.x2, y: action.y2}\r\n        //         ]\r\n        //     }\r\n        // }\r\n        case ActionTypes.PINCH_UP_ON_STAGE: {\r\n            return {\r\n                ...state,\r\n                touchPoints: undefined\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mouse;","import * as ActionTypes from \"../actionTypes\";\r\nimport Flatten from \"@flatten-js/core\";\r\n\r\nconst defaultMeasureShapesTool = {\r\n    measureShapesActive: false,\r\n    measureShapesFirstClick: true,\r\n    hoveredShape: null,\r\n    firstMeasuredShape: null,\r\n    secondMeasuredShape: null,\r\n    firstMeasuredLayer: null,\r\n    secondMeasuredLayer: null,\r\n    distance: undefined,\r\n    shortestSegment: null\r\n};\r\n\r\nconst is_mobile = window.mobilecheck();\r\n\r\nconst measureShapesTool = (state = defaultMeasureShapesTool, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED:\r\n            return Object.assign({}, defaultMeasureShapesTool, {\r\n                measureShapesActive: true\r\n            });\r\n        case ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED:\r\n            return Object.assign({}, defaultMeasureShapesTool);\r\n\r\n        case ActionTypes.MEASURE_POINTS_BUTTON_PRESSED:\r\n            return Object.assign({}, defaultMeasureShapesTool);\r\n\r\n        case ActionTypes.MOUSE_ROLL_OVER_SHAPE:\r\n            return Object.assign({}, state, {\r\n                hoveredShape: state.measureShapesActive ? action.shape : null\r\n            });\r\n        case ActionTypes.MOUSE_ROLL_OUT_SHAPE:\r\n            return Object.assign({}, state, {\r\n                hoveredShape: null\r\n            });\r\n        case ActionTypes.MOUSE_CLICKED_ON_SHAPE:\r\n            if (!state.measureShapesActive) {\r\n                return state;\r\n            }\r\n            // measureShapesActive\r\n\r\n            if (state.measureShapesFirstClick) {\r\n                return Object.assign({}, state, {\r\n                    firstMeasuredShape: action.shape,\r\n                    firstMeasuredLayer: action.layer,\r\n                    secondMeasuredShape: null,\r\n                    secondMeasuredLayer: null,\r\n                    measureShapesFirstClick: false,\r\n                    distance: undefined,\r\n                    shortestSegment: null\r\n                })\r\n            }\r\n            else {    // second click\r\n                if (action.shape === state.firstMeasuredShape) {\r\n                    return state;  // second click on the same shape\r\n                }\r\n\r\n                let shape1 = state.firstMeasuredShape.geom;\r\n                let shape2 = action.shape.geom;\r\n                let distance, shortestSegment;\r\n                // if (shape1 instanceof Flatten.Polygon && shape2 instanceof Flatten.Polygon) {\r\n                //     [distance, shortestSegment] = Flatten.Distance.polygon2polygon(shape1, shape2);\r\n                // }\r\n                // else {\r\n                [distance, shortestSegment] = Flatten.Distance.distance(shape1, shape2);\r\n                // }\r\n\r\n\r\n                return Object.assign({}, state, {\r\n                    secondMeasuredShape: action.shape,\r\n                    secondMeasuredLayer: action.layer,\r\n                    measureShapesFirstClick: true,\r\n                    distance: distance,\r\n                    shortestSegment: shortestSegment\r\n                });\r\n            }\r\n        case ActionTypes.MOUSE_DOWN_ON_STAGE:\r\n            if (state.hoveredShape || is_mobile) {\r\n                return state\r\n            }\r\n            else {\r\n                return Object.assign({}, state, {\r\n                    measureShapesFirstClick: true,\r\n                    firstMeasuredShape: null,\r\n                    firstMeasuredLayer: null,\r\n                    secondMeasuredShape: null,\r\n                    secondMeasuredLayer: null,\r\n                    distance: undefined,\r\n                    shortestSegment: null\r\n                });\r\n            }\r\n\r\n        case ActionTypes.DELETE_LAYER_BUTTON_PRESSED:\r\n            if (action.layer === state.firstMeasuredLayer ||\r\n                action.layer === state.secondMeasuredLayer) {\r\n                return Object.assign({}, defaultMeasureShapesTool);\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED:\r\n            if (action.layer.displayed &&\r\n                (action.layer === state.firstMeasuredLayer ||\r\n                    action.layer === state.secondMeasuredLayer)) {\r\n                return Object.assign({}, defaultMeasureShapesTool);\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default measureShapesTool;","import * as ActionTypes from \"../actionTypes\";\r\n\r\nconst documentDefaultState = {\r\n    id: undefined,\r\n    name: \"\",\r\n    owner: \"Alex Bol\",\r\n    lastUpdated: undefined\r\n};\r\n\r\nconst cloudStorageDefaultState = {\r\n    document: documentDefaultState,\r\n    documentsList: {}\r\n};\r\n\r\nfunction isUpToDate(stateDocumentsList, actionDocumentsList) {\r\n    if (actionDocumentsList === null || actionDocumentsList === undefined)\r\n        return true;\r\n\r\n    if (Object.keys(stateDocumentsList).length !== Object.keys(actionDocumentsList).length)\r\n        return false;\r\n    for (let key in stateDocumentsList) {\r\n        if (!(actionDocumentsList.hasOwnProperty(key) && (stateDocumentsList[key].lastUpdated !== actionDocumentsList[key].lastUpdated))) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst cloudStorage = (state = cloudStorageDefaultState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    id: action.id,\r\n                    name: action.name,\r\n                    owner: action.owner,\r\n                    lastUpdated: action.lastUpdated\r\n                }\r\n            };\r\n\r\n        case ActionTypes.REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    id: action.id,\r\n                    name: action.name,\r\n                    owner: action.owner,\r\n                    lastUpdated: action.lastUpdated\r\n                }\r\n            };\r\n\r\n        case ActionTypes.REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    ...state.document,\r\n                    lastUpdated: action.lastUpdated\r\n                }\r\n            };\r\n\r\n        case ActionTypes.DOCUMENT_NAME_UPDATED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    ...state.document,\r\n                    name: action.name\r\n                }\r\n            };\r\n\r\n        case ActionTypes.DELETE_DOCUMENT_FROM_DATABASE_SUCCEED:\r\n            let { [action.id]: document, ...newList } = state.documentsList;\r\n            return {\r\n                ...state,\r\n                document: state.document.id === action.id ? documentDefaultState : state.document,\r\n                documentsList: newList\r\n            };\r\n\r\n        case ActionTypes.DOCUMENT_SELECTED_FROM_LIST:\r\n            return {\r\n                ...state,\r\n                document: action.document\r\n            };\r\n\r\n        case ActionTypes.CLEAR_ALL_BUTTON_CLICKED:\r\n            return {\r\n                ...state,\r\n                document: documentDefaultState\r\n            };\r\n\r\n        case ActionTypes.REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED:\r\n            return isUpToDate(state.documentsList, action.documentsList) ?\r\n                state :\r\n            {\r\n                ...state,\r\n                documentsList: action.documentsList\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cloudStorage","import * as ActionTypes from \"../actionTypes\";\r\n\r\nconst defaultState = {\r\n    uploadStarted:  false,\r\n    uploadCompleted: false,\r\n    uploadedFiles: []\r\n};\r\n\r\nconst upload = (state=defaultState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.INITIALIZE_UPLOAD_STATE:\r\n            return defaultState;\r\n\r\n        case ActionTypes.FILES_UPLOAD_COMPLETED:\r\n            return {\r\n                ...state,\r\n                uploadCompleted: true,\r\n                uploadedFiles: action.uploadedFiles\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default upload","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\n\r\nimport {combineReducers} from 'redux';\r\n\r\nimport auth from \"./reducers/auth\";\r\nimport app from \"./reducers/app\";\r\nimport layers from \"./reducers/layers\";\r\nimport mouse from \"./reducers/mouse\";\r\nimport measureShapesTool from \"./reducers/measureShapesTool\";\r\nimport cloudStorage from \"./reducers/cloudStorage\";\r\nimport upload from \"./reducers/upload\";\r\n\r\nconst reducer = combineReducers({\r\n    auth,\r\n    app,\r\n    layers,\r\n    upload,\r\n    cloudStorage,\r\n    measureShapesTool,\r\n    mouse\r\n});\r\n\r\nexport default reducer;\r\n","import * as ActionTypes from '../store/actionTypes';\r\n\r\nconst log = ({ getState, dispatch }) => next => action => {\r\n\r\n    if(action.type !== ActionTypes.MOUSE_MOVED_ON_STAGE) {\r\n        console.log('ACTION: ' + action.type, action);\r\n    }\r\n\r\n    next(action);\r\n};\r\n\r\nexport default log;","import {Box} from '@flatten-js/core';\r\n\r\nexport class Job {\r\n    constructor() {\r\n        this.filename = \"\";\r\n        this.title = \"\";\r\n        this.profiles = [];   // array of FlattenJS Polygons\r\n        this.materials = [];  // array of FlattenJS Polygons\r\n        this.shapes = [];     // array of other FlattenJS shapes\r\n    }\r\n\r\n    get box() {\r\n        let b = new Box();\r\n        for (let shape of this.profiles) {\r\n            b.merge(shape.box);\r\n        }\r\n        for (let shape of this.materials) {\r\n            b.merge(shape.box);\r\n        }\r\n        for (let shape of this.shapes) {\r\n            b.merge(shape.box);\r\n        }\r\n        return b;\r\n    }\r\n}","// import { Job } from '../models/job';\r\nimport Flatten from '@flatten-js/core';\r\n\r\n// import Model from '../models/model';\r\nimport {Job} from \"../models/job\";\r\n\r\nFlatten.Image = class Image {\r\n    constructor() {\r\n        this.uri = \"\";\r\n        /**\r\n         * Center in world coordinates\r\n         * @type {Flatten.Point}\r\n         */\r\n        this.center = new Flatten.Point();\r\n        /**\r\n         * Width in world units (inch/mm)\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * Height in world units (inch/mm)\r\n         */\r\n        this.height = 0;\r\n    }\r\n    get box() {\r\n        return new Flatten.Box(\r\n            this.center.x - this.width/2,\r\n            this.center.y - this.height/2,\r\n            this.center.x + this.height/2,\r\n            this.center.y + this.height/2\r\n        );\r\n\r\n    }\r\n};\r\n\r\n// export function parseJSON(shapes) {\r\n//     let models = [];\r\n//     let geom;\r\n//     let model;\r\n//     for (let shape of JSON.parse(shapes)) {\r\n//         if (shape.geom instanceof Array) {      // TODO: add \"name\" to polygon stringified\r\n//             geom = new Flatten.Polygon();\r\n//             for (let faceArray of shape.geom) {\r\n//                 geom.addFace(faceArray);\r\n//             }\r\n//         }\r\n//         else if (shape.geom.uri) {\r\n//             geom = new Flatten.Image();\r\n//             geom.uri = shape.geom.uri;\r\n//             geom.center = shape.geom.center;\r\n//             geom.width = shape.geom.width;\r\n//             geom.height = shape.geom.height;\r\n//         }\r\n//         else {\r\n//             geom = Flatten[shape.geom.name](shape.geom);\r\n//         }\r\n//         model = new Model(geom, shape.style, shape.label);\r\n//         models.push(model);\r\n//     }\r\n//\r\n//     return models;\r\n// }\r\n\r\nfunction parseJSONShape(jsonShape) {\r\n    if (jsonShape.name === \"segment\") {\r\n        return new Flatten.Segment(jsonShape);\r\n    }\r\n\r\n    if (jsonShape.name === \"arc\") {\r\n        return new Flatten.Arc(jsonShape);\r\n    }\r\n\r\n    if (jsonShape.name === \"point\") {\r\n        return new Flatten.Point(jsonShape);\r\n    }\r\n}\r\n\r\nexport function parseJSON(filename=\"\", str) {\r\n    let job = new Job();\r\n\r\n    job.filename = filename;\r\n\r\n    let jsonArray;\r\n\r\n    try {\r\n        jsonArray = JSON.parse(str);\r\n    } catch (e) {\r\n        throw new Error(\"Illegal JSON string\")\r\n    }\r\n\r\n    if (jsonArray instanceof Array) {\r\n        try {\r\n            let polygon = new Flatten.Polygon();\r\n            for (let faceArray of jsonArray) {\r\n                polygon.addFace(faceArray);\r\n            }\r\n            job.shapes.push(polygon);\r\n        }\r\n        catch (e) {\r\n            for (let jsonShape of jsonArray) {\r\n                job.shapes.push( parseJSONShape(jsonShape) );\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        job.shapes.push( parseJSONShape(jsonArray) );\r\n    }\r\n\r\n    return job;\r\n}\r\n","import * as ActionTypes from \"../store/actionTypes\";\r\nimport Layers from \"../models/layers\";\r\nimport {parseJSON} from \"../dataParsers/parseJSON\";\r\n\r\nconst pasteData = ({ dispatch, getState }) => next => action => {\r\n\r\n    if (action.type !== ActionTypes.DATA_FROM_BUFFER_PASTED) {\r\n        return next(action);\r\n    }\r\n\r\n    let state = getState();\r\n    let stage = state.app.stage;\r\n    let layers = state.layers;\r\n    let parser = state.app.parser;\r\n\r\n    let layer = undefined;\r\n    if (state.app.importDataToNewLayer) {   // import data to new layer\r\n        layer = Layers.newLayer(stage, layers);\r\n        layers.push(layer);\r\n    }\r\n    else {                                  // import data to affected layer\r\n        layer = layers.find((lay) => lay.affected);\r\n        if (!layer) {                       // if no layer affected, add new\r\n            layer = Layers.newLayer(stage, layers);\r\n            layers.push(layer);\r\n        }\r\n    }\r\n\r\n    // Paste data from ClipBoard\r\n    for (let item of action.data.items) {\r\n        item.getAsString((string) => {\r\n            let shapesArray;\r\n\r\n            try {\r\n                let job = parseJSON(\"\",string);\r\n                shapesArray = job.shapes\r\n            } catch (e) {\r\n                console.log(e.message)\r\n                shapesArray = parser.parse(string);\r\n            }\r\n\r\n            // TODO: add something like poly.valid()\r\n\r\n            if (shapesArray.length > 0) {\r\n                for (let shape of shapesArray) {\r\n                    layer.add(shape);\r\n                }\r\n            }\r\n\r\n            if (layer.shapes.length > 0) {\r\n                dispatch({\r\n                    type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                    shape: layer,\r\n                    stage: stage\r\n                });\r\n                dispatch({\r\n                    type: ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED,\r\n                    layer: layer\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n        break;\r\n    }\r\n\r\n};\r\n\r\nexport default pasteData;\r\n","import * as ActionTypes from '../store/actionTypes';\r\n\r\nconst stageController = ({getState, dispatch}) => next => action => {\r\n\r\n    const mouse = getState().mouse;\r\n    let stage = action.stage;\r\n\r\n\r\n    if (stage) {\r\n        switch (action.type) {\r\n            case ActionTypes.STAGE_RESIZED:\r\n                stage.resize();\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_DOWN_ON_STAGE:\r\n                stage.panByMouseStart();\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_MOVED_ON_STAGE:\r\n                if (action.dx !== undefined && action.dy !== undefined) {\r\n                    stage.panByMouseMove(action.dx, action.dy);\r\n                }\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_UP_ON_STAGE:\r\n                stage.panByMouseStop();\r\n                break;\r\n\r\n            case ActionTypes.PAN_AND_ZOOM_TO_SHAPE:\r\n                let center = action.shape.center;\r\n                let box = action.shape.box;\r\n                if (isNaN(center.x) || isNaN(center.y)) return;\r\n                stage.panToCoordinate(center.x, center.y);\r\n                stage.zoomToLimits(box.xmax - box.xmin, box.ymax - box.ymin);\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_WHEEL_MOVE_ON_STAGE:\r\n                let bIn = action.delta > 0;\r\n                // stage.zoomByMouse(action.x, action.y, bIn, 1 + Math.abs(action.delta)/100.);\r\n                stage.zoomByMouse(action.x, action.y, bIn, 1.2);\r\n                break;\r\n\r\n            case ActionTypes.CLEAR_ALL:\r\n                stage.removeAllChildren();\r\n                stage.removeAllListeners();\r\n                break;\r\n\r\n            case ActionTypes.PINCH_DOWN_ON_STAGE:\r\n                stage.zoomByPinchStart(action.x1, action.y1);\r\n                break;\r\n\r\n            case ActionTypes.PINCH_MOVED_ON_STAGE:\r\n                if (mouse.touchPoints) {\r\n                    let dx = mouse.touchPoints[0].x - mouse.touchPoints[1].x;\r\n                    let dy = mouse.touchPoints[0].y - mouse.touchPoints[1].y;\r\n                    let distStart = Math.sqrt(dx*dx + dy*dy);\r\n\r\n                    dx = action.x2 - action.x1;\r\n                    dy = action.y2 - action.y1;\r\n                    let distCurrent = Math.sqrt(dx*dx + dy*dy);\r\n                    let ratio = distCurrent / distStart;\r\n                    stage.zoomByPinchMove(action.x1, action.y1, ratio);\r\n                }\r\n                break;\r\n\r\n            case ActionTypes.PINCH_UP_ON_STAGE:\r\n                stage.zoomByPinchStop();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n\r\nexport default stageController;","import * as ActionTypes from '../store/actionTypes';\r\nimport Layers from \"../models/layers\";\r\nimport {point, arc, segment} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\nlet Algorithmia = window.Algorithmia;\r\n\r\n// function zoomHome(shape, stage) {\r\n//     let box = shape.box;\r\n//     let x = (box.xmin + box.xmax)/2;\r\n//     let y = (box.ymin + box.ymax)/2;\r\n//     stage.panToCoordinate(x, y);\r\n//     stage.zoomToLimits(box.xmax - box.xmin, box.ymax - box.ymin);\r\n// }\r\n\r\nconst skeleton_recognition = ({dispatch, getState}) => next => action => {\r\n\r\n    if (action.type === ActionTypes.SKELETON_RECOGNITION_BUTTON_PRESSED) {\r\n\r\n        let state = getState();\r\n        let stage = state.app.stage;\r\n\r\n        let layers = state.layers;\r\n        let currentLayer = Layers.getAffected(layers);\r\n        let shapes = currentLayer.shapes;\r\n        let input = shapes.map(shape =>\r\n            [shape.geom.x / 400., shape.geom.y / 400., shape.geom.nx, shape.geom.ny]\r\n        );\r\n\r\n        let client = Algorithmia.client(\"simby4RUwqQmtMDaHAPj5wsQwlD1\");\r\n        let algorithm = \"alexbol99/SeketonRecognition\";\r\n\r\n        client.algo(algorithm)\r\n            .pipe(input)\r\n            .then(function (output) {\r\n                if (output.error) return console.error(\"error: \" + output.error);\r\n\r\n                let newLayer = Layers.newLayer(stage, layers);\r\n                newLayer.name = \"recognized\";\r\n                newLayer.title = \"recognized\";\r\n                // newLayer.displayed = true;\r\n\r\n                for (let row of output.result) {\r\n                    let shape;\r\n                    if (row[0] instanceof Array && row[0].length === 2) {\r\n                        let pc = point(row[0][0] * 400, row[0][1] * 400);\r\n                        let r = row[1] * 400;\r\n                        /********center radius startAng endAng **********/\r\n                        shape = arc(pc, r, row[2], row[3], Flatten.CCW)\r\n                    }\r\n                    else {\r\n                        shape = segment(\r\n                            point(row[0] * 400, row[1] * 400),\r\n                            point(row[2] * 400, row[3] * 400))\r\n                    }\r\n                    if (row[4]) {\r\n                        shape.label = row[4]\r\n                    }\r\n                    newLayer.add(shape)\r\n                }\r\n                layers.push(newLayer);\r\n\r\n                dispatch({\r\n                    type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                    stage: stage,\r\n                    shape: currentLayer\r\n                })\r\n            });\r\n    }\r\n\r\n    return next(action);\r\n};\r\n\r\n\r\nexport default skeleton_recognition;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://debug-viewer.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const resizeStage = () => {\r\n    return {\r\n        type: ActionTypes.STAGE_RESIZED\r\n    }\r\n};\r\n\r\nexport const destroyStage = () => {\r\n    return {\r\n        type: ActionTypes.STAGE_UNMOUNTED\r\n    }\r\n};\r\n\r\nexport const toggleUnits = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_UNITS_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleWidthMode = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_WIDTH_MODE_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleDisplayVertices = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_VERTICES_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleDisplayLabels = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_LABELS_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleAboutPopup = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_ABOUT_POPUP_CLICKED\r\n    }\r\n};\r\n\r\n// export const closeAboutPopup = () => {\r\n//     return {\r\n//         type: ActionTypes.CLOSE_ABOUT_POPUP_BUTTON_PRESSED\r\n//     }\r\n// };\r\n\r\nexport const toggleMeasureBetweenPoints = () => {\r\n    return {\r\n        type: ActionTypes.MEASURE_POINTS_BUTTON_PRESSED\r\n    }\r\n};\r\n\r\nexport const toggleMeasureBetweenShapes = () => {\r\n    return {\r\n        type: ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED\r\n    }\r\n};\r\n\r\nexport const applySkeletonRecognition = () => {\r\n    return {\r\n        type: ActionTypes.SKELETON_RECOGNITION_BUTTON_PRESSED\r\n    }\r\n};\r\n\r\n// export const handleFileSelect = (files, stage, layers) => {\r\n//     return {\r\n//         type: ActionTypes.FILENAME_LIST_SELECTED,\r\n//         files,\r\n//         stage,\r\n//         layers\r\n//     }\r\n// };\r\n\r\nexport const setHomeView = (stage, shape) => {\r\n    return {\r\n        type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n        stage,\r\n        shape\r\n    }\r\n};\r\n\r\nexport const togglePanByDrag = () => {\r\n    return {\r\n        type: ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED\r\n    }\r\n};\r\n\r\nexport const handleMouseRollOverShape = (shape) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_ROLL_OVER_SHAPE,\r\n        shape\r\n    }\r\n};\r\n\r\nexport const handleMouseRollOutShape = () => {\r\n    return {\r\n        type: ActionTypes.MOUSE_ROLL_OUT_SHAPE\r\n    }\r\n};\r\n\r\nexport const handleClickOnShape = (shape, layer) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_CLICKED_ON_SHAPE,\r\n        shape,\r\n        layer\r\n    }\r\n};\r\n\r\nexport const asyncOperationStarted = () => {\r\n    return {\r\n        type: ActionTypes.ASYNC_OPERATION_STARTED\r\n    }\r\n};\r\n\r\nexport const asyncOperationEnded = () => {\r\n    return {\r\n        type: ActionTypes.ASYNC_OPERATION_ENDED\r\n    }\r\n};\r\n\r\nexport const openDocumentOnCloud = () => {\r\n    return {\r\n        type: ActionTypes.MANAGE_CLOUD_STORAGE_BUTTON_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleLayerList = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_SHOW_LAYER_LIST_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleDownloadPopup = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DOWNLOAD_POPUP_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleUploadPopup = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_UPLOAD_POPUP_CLICKED\r\n    }\r\n};\r\n\r\nexport const pasteDataFromBuffer = (clipboardData) => {\r\n    return {\r\n        type: ActionTypes.DATA_FROM_BUFFER_PASTED,\r\n        data: clipboardData\r\n    }\r\n};\r\n\r\n\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const addEmptyLayer = (stage) => {\r\n    return {\r\n        type: ActionTypes.ADD_LAYER_BUTTON_PRESSED,\r\n        stage: stage\r\n    }\r\n};\r\n\r\nexport const addNewLayer = (layer) => {\r\n    return {\r\n        type: ActionTypes.ADD_NEW_LAYER,\r\n        layer\r\n    }\r\n};\r\n\r\nexport const deleteAffectedLayer = () => {\r\n    return {\r\n        type: ActionTypes.DELETE_LAYER_BUTTON_PRESSED\r\n    };\r\n};\r\n\r\nexport const sortLayers = () => {\r\n    return {\r\n        type: ActionTypes.SORT_LAYERS_BUTTON_PRESSED\r\n    };\r\n};\r\n\r\nexport const toggleDisplayLayer = (layer) => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED,\r\n        layer\r\n    }\r\n};\r\n\r\nexport const toggleAffectedLayer = (event, layer) => {\r\n    event.stopPropagation();\r\n    return {\r\n        type: ActionTypes.TOGGLE_AFFECTED_LAYER_PRESSED,\r\n        layer: layer\r\n    };\r\n};\r\n\r\nexport const updateLayer = (newLayer) => {\r\n    return {\r\n        type: ActionTypes.SUBMIT_LAYER_EDIT_FORM_PRESSED,\r\n        newLayer: newLayer\r\n    };\r\n};\r\n\r\nexport const closeEditLayerForm = () => {\r\n    return {\r\n        type: ActionTypes.ESCAPE_LAYER_EDIT_FORM_PRESSED\r\n    };\r\n};\r\n\r\nexport const openAffectedLayerEditForm = () => {\r\n    return {\r\n        type: ActionTypes.OPEN_LAYER_EDIT_FORM_PRESSED,\r\n    }\r\n};\r\n\r\nexport const setAffectedNextLayer = () => {\r\n    return {\r\n        type: ActionTypes.LAYERS_LIST_ARROW_DOWN_PRESSED\r\n    }\r\n};\r\n\r\nexport const setAffectedPrevLayer = () => {\r\n    return {\r\n        type: ActionTypes.LAYERS_LIST_ARROW_UP_PRESSED\r\n    }\r\n};\r\n\r\nexport const deleteAllLayers = () => {\r\n    return {\r\n        type: ActionTypes.CLEAR_ALL_BUTTON_CLICKED,\r\n    }\r\n}\r\n\r\n\r\n\r\n","import * as ActionTypes from \"../actionTypes\";\r\nimport axios from \"../../axios-database\";\r\nimport * as appActions from \"../actions/appActions\";\r\nimport * as layerActions from '../../store/actions/layersActions';\r\nimport Layer from \"../../models/layer\";\r\nimport {parseJSON} from \"../../dataParsers/parseJSON\";\r\nimport Layers from \"../../models/layers\";\r\n\r\nconst defaultName = \"document\";\r\n\r\nexport const getNewName = (documents) => {\r\n    let name = defaultName;\r\n    let inc = 1;\r\n    let comparator = (document) => document.name === name;\r\n    while (Object.values(documents).find(comparator)) {\r\n        name = defaultName + inc;\r\n        inc++;\r\n    }\r\n    return name;\r\n};\r\n\r\nexport const registerDocumentAddedToDatabase = (id, lastUpdated) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED,\r\n        id: id,\r\n        lastUpdated: lastUpdated\r\n    }\r\n};\r\n\r\nexport const updateDocumentTimeStamp = (lastUpdated) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED,\r\n        lastUpdated: lastUpdated\r\n    }\r\n};\r\n\r\nexport const updateDocumentName = (name) => {\r\n    return {\r\n        type: ActionTypes.DOCUMENT_NAME_UPDATED,\r\n        name\r\n    }\r\n};\r\n\r\nexport const clearCurrentDocument = () => {\r\n    return {\r\n        type: ActionTypes.CLEAR_ALL_BUTTON_CLICKED,\r\n    }\r\n};\r\n\r\nexport const updateCurrentDocument = (document) => {\r\n    return {\r\n        type: ActionTypes.DOCUMENT_SELECTED_FROM_LIST,\r\n        document\r\n    }\r\n};\r\n\r\nexport const requestFetchDocumentFromDatabaseSucceed = (id, name, owner, lastUpdated) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED,\r\n        id,\r\n        name,\r\n        owner,\r\n        lastUpdated\r\n    }\r\n};\r\n\r\nexport const deleteDocumentFromDatabaseSucceed = (id) => {\r\n    return {\r\n        type: ActionTypes.DELETE_DOCUMENT_FROM_DATABASE_SUCCEED,\r\n        id\r\n    }\r\n};\r\n\r\nexport const requestFetchDocumentsFromDatabaseSucceed = (documentsList) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED,\r\n        documentsList\r\n    }\r\n};\r\n\r\nexport const fetchDocumentsFromDatabase = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        const url = '/documents.json' + queryParams;\r\n        axios.get(url)\r\n            .then(response => {\r\n                dispatch(requestFetchDocumentsFromDatabaseSucceed(response.data));\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const deleteDocumentFromDatabase = (id) => {\r\n    return dispatch => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n        const url = '/documents/' + id + '.json';\r\n        axios.delete(url)\r\n            .then (response => {\r\n                // query geom by \"id\"\r\n                const queryParams = '?orderBy=\"id\"&equalTo=\"' + id + '\"';\r\n                const url = '/geom.json' + queryParams;\r\n                return axios.get(url)\r\n            })\r\n            .then (response => {\r\n                const geomId = Object.keys(response.data)[0];\r\n                return axios.delete(`/geom/${geomId}.json`)\r\n            })\r\n            .then(response => {\r\n                dispatch(deleteDocumentFromDatabaseSucceed(id));\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const fetchDocumentFromDatabase = (stage, id) => {\r\n    return dispatch => {\r\n        dispatch(layerActions.deleteAllLayers());\r\n        dispatch(appActions.asyncOperationStarted());\r\n        let name = \"\";\r\n        let lastUpdated = undefined;\r\n        let owner = \"Alex Bol\";\r\n        let firstLayer = undefined;\r\n\r\n        const docUrl = '/documents/' + id + '.json';\r\n        const queryParams = '?orderBy=\"id\"&equalTo=\"' + id + '\"';\r\n        const geomUrl = '/geom.json' + queryParams;\r\n        Promise.all([axios.get(docUrl),axios.get(geomUrl)])\r\n            .then( responses => {\r\n                name = responses[0].data.name;\r\n                lastUpdated = responses[0].data.lastUpdated;\r\n\r\n                for (let layerData of Object.values(responses[1].data)[0].layers) {\r\n                    let layer = new Layer();\r\n                    layer.shapes = parseJSON(layerData.shapes);\r\n                    layer.name = layerData.name;\r\n\r\n                    if (!firstLayer) firstLayer = layer;\r\n                    dispatch(layerActions.addNewLayer(layer));\r\n                    dispatch(layerActions.toggleDisplayLayer(layer));\r\n                }\r\n                dispatch(requestFetchDocumentFromDatabaseSucceed(id, name, owner, lastUpdated));\r\n                dispatch(appActions.setHomeView(stage, firstLayer));\r\n                // dispatch(layerActions.toggleDisplayLayer(firstLayer));\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const addDocumentToDatabase = (payload, layers, history) => {\r\n    return dispatch => {\r\n        let id = undefined;\r\n        dispatch(appActions.asyncOperationStarted());\r\n        axios.post('/documents.json', payload)\r\n            .then(response => {\r\n                id = response.data.name;\r\n                let layersJSON = Layers.toJSON(layers);\r\n                let geomPayload = {\r\n                    id: id,\r\n                    layers: layersJSON\r\n                };\r\n                return axios.post('/geom.json', geomPayload)\r\n            })\r\n            .then(response => {\r\n                dispatch(registerDocumentAddedToDatabase(id, Date.now()));\r\n                dispatch(appActions.asyncOperationEnded());\r\n\r\n                // update url\r\n                history.push('/documents/' + id);\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const updateDocumentInDatabase = (id, payload, layers) => {\r\n    return dispatch => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n        // update documents header\r\n        axios.put(`/documents/${id}.json`, payload)\r\n            .then(response => {\r\n                dispatch(updateDocumentTimeStamp(Date.now()));\r\n                // dispatch(appActions.asyncOperationEnded());\r\n\r\n                // query geom by \"id\"\r\n                const queryParams = '?orderBy=\"id\"&equalTo=\"' + id + '\"';\r\n                const url = '/geom.json' + queryParams;\r\n                return axios.get(url)\r\n            })\r\n            .then( response => {\r\n                let layersJSON = Layers.toJSON(layers);\r\n                let geomPayload = {\r\n                    id: id,\r\n                    layers: layersJSON\r\n                };\r\n                let geomId = Object.keys(response.data)[0];  // response.data.name;\r\n                return axios.put(`/geom/${geomId}.json`, geomPayload)\r\n            })\r\n            .then( reponse => {\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\n\r\n\r\n","import FontAwesome from \"react-fontawesome\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst button = (props) => {\r\n    let iconStyle;\r\n    switch (props.type) {\r\n        case \"trigger\":\r\n            iconStyle = classes.IconTrigger;\r\n            break;\r\n        case \"mode\":\r\n            iconStyle = props.active ? classes.IconModeActive : classes.IconModeNotActive;\r\n            break;\r\n        default:\r\n            iconStyle = classes.IconTrigger;\r\n            break;\r\n    }\r\n    // eslint-disable-next-line\r\n    let buttonStyle = props.mobileOnly ? classes[\"Button\",\"DrawerButton\"] : classes[\"Button\"];\r\n    return (\r\n        <button title={props.title} onClick={props.onClick} className={buttonStyle}>\r\n            <FontAwesome\r\n                name={props.iconName}\r\n                size='2x'\r\n                className={iconStyle}\r\n            />\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default button;","import FontAwesome from \"react-fontawesome\";\r\nimport classes from \"./ButtonSeparator.module.css\";\r\n\r\nconst buttonSeparator = () => {\r\n    return (\r\n        <div className={classes.ButtonSeparator}>\r\n            <FontAwesome\r\n                name='ellipsis-v'\r\n                size='2x'\r\n                className={classes.IconSeparator}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default buttonSeparator;","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Separator from '../../../components/UI/ButtonSeparator/ButtonSeparator';\r\n\r\nimport classes from './ToolbarComponent.module.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\nclass ToolbarComponent extends Component {\r\n    // openJobButtonClicked = () => this.refs.browseFiles.click();\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes[\"App-toolbar\"]}>\r\n                {/*<h4>Toolbar</h4>*/}\r\n                <Button type=\"trigger\" title=\"Upload files\" iconName='folder-open'\r\n                        onClick={this.props.onShowUploadPopupPressed}\r\n                />\r\n\r\n                {/*<input style={{fontSize: 16, marginTop: 5, marginBottom: 5, display: \"none\"}}*/}\r\n                       {/*type=\"file\" id=\"browseFiles\" ref=\"browseFiles\" name=\"files[]\" multiple*/}\r\n                       {/*onChange={this.props.onFileSelected}*/}\r\n                {/*/>*/}\r\n\r\n                <Button type=\"trigger\" title=\"Show/hide layers\" iconName='layer-group' onClick={this.props.onLayerListButtonClicked} />\r\n\r\n                    {/*<Button type=\"trigger\" title=\"Save document on cloud\" iconName='save'*/}\r\n                        {/*onClick={this.props.onSaveDocumentButtonClicked}*/}\r\n                {/*/>*/}\r\n\r\n                <Button type=\"trigger\" title=\"Delete all layers\" iconName='broom'\r\n                        onClick={this.props.onClearAllButtonClicked}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Download layers\" iconName='file-download'\r\n                        onClick={this.props.onShowDownloadPopupPressed}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"trigger\" title=\"Zoom and pan to home view\" iconName='home'\r\n                        onClick={this.props.onHomeButtonPressed}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"mode\" title=\"Pan by drag\" iconName='arrows-alt'\r\n                        active={!this.props.measurePointsActive}\r\n                        onClick={this.props.onPanByDragPressed}\r\n                />\r\n\r\n                <Button type=\"mode\" title=\"Measure distance between points\" iconName='drafting-compass'\r\n                        active={this.props.measurePointsActive}\r\n                        onClick={this.props.onMeasurePointsButtonPressed}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"trigger\" title=\"Measure distance between selected shapes\" iconName='ruler'\r\n                        onClick={this.props.onMeasureBetweenShapesButtonPressed}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Display solid or wire\" iconName='fill-drip'\r\n                        onClick={this.props.onToggleWidthModePressed}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Display vertices on/off\" iconName='draw-polygon'\r\n                        onClick={this.props.onToggleVerticesPressed}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Display labels on/off\" iconName='tag'\r\n                        onClick={this.props.onToggleLabelsPressed}\r\n                />\r\n\r\n                {this.props.showSkeletonRecognitionButton ? (\r\n                    <Button type=\"trigger\" title=\"Skeleton Recognition Demo\" iconName='tree'\r\n                            onClick={this.props.onSkeletonRecognitionButtonPressed}\r\n                    />\r\n                ) : null}\r\n\r\n                <Separator/>\r\n\r\n                <button className={classes[\"App-toolbar-units\"]}\r\n                        onClick={this.props.onUnitClicked}\r\n                >\r\n                    {this.props.units}\r\n                </button>\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"trigger\" title=\"About\" iconName='info'\r\n                        onClick={this.props.onShowAboutPopupPressed}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolbarComponent;\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\nimport {Box} from '@flatten-js/core';\r\nimport { Stage as CreatejsStage, Touch } from \"@createjs/easeljs\";\r\n\r\nclass Stage extends CreatejsStage {\r\n    constructor(canvas) {\r\n        super(canvas);\r\n\r\n        Touch.enable(this);\r\n        this.mouseMoveOutside = false;   // true;\r\n        // this.enableDOMEvents(false);\r\n        this.enableMouseOver(20);\r\n\r\n        if (this.canvas.clientWidth > 0 && this.canvas.clientHeight > 0) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n            // this.updateViewport(this.canvas.width, this.canvas.height);\r\n        }\r\n        this.origin = {x: this.canvas.width / 2, y: this.canvas.height / 2};\r\n        this.resolution = 0.00001;          // MM 2 Pixels when zoomFactor = 1;\r\n        this.zoomFactor = 1.0;\r\n\r\n        this.oldOrigin = {x: undefined, y: undefined};   // used by pan\r\n        // used by zoom by pinch\r\n        this.oldZoomFactor = undefined;\r\n        this.pinchAnchorX = undefined;\r\n        this.pinchAnchorY = undefined;\r\n        this.pinchStarted = false;\r\n    }\r\n\r\n    get box() {\r\n        let minX = this.C2W_X(0);\r\n        let minY = this.C2W_Y(this.canvas.height);\r\n        let maxX = this.C2W_X(this.canvas.width);\r\n        let maxY = this.C2W_Y(0);\r\n\r\n        return ( new Box(minX, minY, maxX, maxY) );\r\n    }\r\n\r\n    clone() {\r\n        let stage = new Stage(this.canvas);\r\n        return Object.assign(stage, this);\r\n    }\r\n\r\n    add(shape) {\r\n        this.addChild(shape);\r\n        return this;\r\n    }\r\n\r\n    scalingFactor() {\r\n        return this.resolution * this.zoomFactor;\r\n    }\r\n\r\n    C2W_Scalar(scalar) {\r\n        return (scalar / this.scalingFactor());\r\n    }\r\n\r\n    W2C_Scalar(scalar) {\r\n        return (this.scalingFactor() * scalar);\r\n    }\r\n\r\n    C2W_X(canvasX) {\r\n        return ((canvasX - this.origin.x) / this.scalingFactor());\r\n    }\r\n\r\n    C2W_Y(canvasY) {\r\n        return ((this.origin.y - canvasY) / this.scalingFactor());\r\n    }\r\n\r\n    W2C_X(worldX) {\r\n        return (this.scalingFactor() * worldX + this.origin.x);\r\n    }\r\n\r\n    W2C_Y(worldY) {\r\n        return (this.origin.y - this.scalingFactor() * worldY);\r\n    }\r\n\r\n    W2C(point) {\r\n        return {x: this.W2C_X(point.x), y: this.W2C_Y(point.y)}\r\n    }\r\n\r\n    panTo(newOrigin) {\r\n        this.origin = {x: newOrigin.x, y: newOrigin.y}\r\n    }\r\n\r\n    panBy(deltaX, deltaY) {\r\n        this.origin = {\r\n            x: this.origin.x + deltaX,\r\n            y: this.origin.y + deltaY\r\n        }\r\n    }\r\n\r\n    // zoom by 10% each time\r\n    zoomIn(ratio) {\r\n        let curRatio = ratio || 1.1;\r\n        this.zoomFactor = Math.min(10000000, curRatio * this.zoomFactor);\r\n    }\r\n\r\n    zoomOut(ratio) {\r\n        let curRatio = ratio || 1.1;\r\n        this.zoomFactor = Math.max(0.001, this.zoomFactor / curRatio);\r\n    }\r\n\r\n    // ZoomIn/Out + \"Focus follows mouse\"\r\n    zoom(focusX, focusY, bIn, ratio) {\r\n        let worldX = this.C2W_X(focusX);    // world coordinate of mouse focus before zoom\r\n        let worldY = this.C2W_Y(focusY);\r\n\r\n        bIn ? this.zoomIn(ratio) : this.zoomOut(ratio);\r\n\r\n        let newFocusX = this.W2C_X(worldX); // canvas coordinate after zoom\r\n        let newFocusY = this.W2C_Y(worldY);\r\n\r\n        this.panBy(focusX - newFocusX, focusY - newFocusY);\r\n\r\n        return [newFocusX, newFocusY];\r\n    }\r\n\r\n    zoomByMouse(focusX, focusY, bIn, ratio) {\r\n        this.zoom(focusX, focusY, bIn, ratio);\r\n    }\r\n\r\n    zoomToLimits(width, height) {\r\n        // prevent zero division in case of single point box\r\n        if (width === 0) width = 400000;\r\n        if (height === 0) height = 400000;\r\n        let resolution = Math.min(this.canvas.width / (1.1*width), this.canvas.height / (1.1*height));\r\n        let zoomFactor = resolution / this.resolution;\r\n        let ratio = zoomFactor / this.zoomFactor;\r\n        let bIn = true; //ratio > 1;\r\n\r\n        let focusX = this.canvas.width/2;\r\n        let focusY = this.canvas.height/2;\r\n        this.zoom(focusX, focusY, bIn, ratio);\r\n    }\r\n\r\n    resize() {\r\n        // this.origin.x = this.canvas.width / 2;\r\n        // this.origin.y = this.canvas.height / 2;\r\n        if (this.canvas.clientWidth > 0 && this.canvas.clientHeight > 0) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n        }\r\n    }\r\n\r\n    // drawSomething() {\r\n    //     let shape = new Shape();\r\n    //     shape.graphics.beginFill('red').drawRect(0, 0, 20, 20);\r\n    //     this.addChild(shape);\r\n    //     this.update();\r\n    // }\r\n\r\n    panByMouseStart() {\r\n        this.oldOrigin.x = this.origin.x;\r\n        this.oldOrigin.y = this.origin.y;\r\n        this.zoomByPinchStop();\r\n    }\r\n\r\n    panByMouseMove(dx, dy) {\r\n        if (this.pinchStarted) return;\r\n        if (dx !== undefined && dy !== undefined &&\r\n            this.oldOrigin.x !== undefined && this.oldOrigin.y !== undefined) {\r\n            this.origin = {\r\n                    x: this.oldOrigin.x + dx,\r\n                    y: this.oldOrigin.y + dy\r\n                };\r\n        }\r\n    }\r\n\r\n    panByMouseStop() {\r\n        this.oldOrigin.x = undefined;\r\n        this.oldOrigin.y = undefined;\r\n    }\r\n\r\n    panToCoordinate(x, y) {\r\n        let canvasX = this.W2C_X(x);\r\n        let canvasY = this.W2C_Y(y);\r\n\r\n        let dx = this.canvas.width / 2 - canvasX;\r\n        let dy = this.canvas.height / 2 - canvasY;\r\n        this.panBy(dx, dy);\r\n    }\r\n\r\n    zoomByPinchStart(canvasX, canvasY) {\r\n        this.oldZoomFactor = this.zoomFactor;\r\n        this.pinchAnchorX = this.C2W_X(canvasX);\r\n        this.pinchAnchorY = this.C2W_Y(canvasY);\r\n        this.pinchStarted = true;\r\n        this.panByMouseStop();\r\n    }\r\n\r\n    zoomByPinchMove(canvasX, canvasY, ratio) {\r\n        this.zoomFactor = ratio * this.oldZoomFactor;\r\n        this.origin = {\r\n            x: canvasX - this.scalingFactor() * this.pinchAnchorX,\r\n            y: canvasY + this.scalingFactor() * this.pinchAnchorY\r\n        }\r\n    }\r\n\r\n    zoomByPinchStop() {\r\n        this.oldZoomFactor = undefined;\r\n        this.pinchAnchorX = undefined;\r\n        this.pinchAnchorY = undefined;\r\n        this.pinchStarted = false;\r\n    }\r\n\r\n    clear() {\r\n        this.canvas.getContext('2d').clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n}\r\n\r\nexport default Stage;\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const registerStage = (stage) => {\r\n    return {\r\n        type: ActionTypes.NEW_STAGE_CREATED,\r\n        stage: stage\r\n    }\r\n};\r\n\r\nexport const handleMouseDown = (stage, x, y) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_DOWN_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y\r\n    }\r\n};\r\n\r\nexport const handleMouseUp = (stage, x, y) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_UP_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y\r\n    }\r\n};\r\n\r\nexport const handleMouseMove = (stage, x, y, dx, dy) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_MOVED_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y,\r\n        dx: dx,\r\n        dy: dy\r\n    }\r\n};\r\n\r\nexport const handleMouseWheelMove = (stage, x, y, delta) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_WHEEL_MOVE_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y,\r\n        delta: delta\r\n    }\r\n};\r\n\r\nexport const handlePinchDown = (stage, touchPoints) => {\r\n    return {\r\n        type: ActionTypes.PINCH_DOWN_ON_STAGE,\r\n        stage: stage,\r\n        x1: touchPoints[0].x,\r\n        y1: touchPoints[0].y,\r\n        x2: touchPoints[1].x,\r\n        y2: touchPoints[1].y\r\n    }\r\n};\r\n\r\nexport const handlePinchMove = (stage, touchPoints) => {\r\n    return {\r\n        type: ActionTypes.PINCH_MOVED_ON_STAGE,\r\n        stage: stage,\r\n        x1: touchPoints[0].x,\r\n        y1: touchPoints[0].y,\r\n        x2: touchPoints[1].x,\r\n        y2: touchPoints[1].y\r\n    }\r\n};\r\n\r\nexport const handlePinchUp = (stage) => {\r\n    return {\r\n        type: ActionTypes.PINCH_UP_ON_STAGE,\r\n        stage\r\n    }\r\n};\r\n\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\n\r\nimport {Component, createRef} from 'react';\r\nimport styles from \"./CanvasComponent.module.css\";\r\nimport Stage from '../../../models/stage';\r\nimport { connect } from \"react-redux\";\r\n// import * as ActionTypes from \"../../../store/actionTypes\";\r\nimport * as actions from '../../../store/actions/stageActions';\r\n\r\nclass CanvasComponent extends Component {\r\n    canvasElement = createRef();\r\n\r\n    handleMouseMove = (event) => {\r\n        this.props.stage.canvas.focus();\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n            this.props.handleMouseMove(\r\n                this.props.stage,\r\n                event.stageX,\r\n                event.stageY,\r\n                this.props.mouse.startX ? event.stageX - this.props.mouse.startX : undefined,\r\n                this.props.mouse.startY ? event.stageY - this.props.mouse.startY : undefined\r\n            );\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            let touchPoints = [\r\n                {\r\n                    x: event.nativeEvent.touches[0].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[0].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n                {\r\n                    x: event.nativeEvent.touches[1].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[1].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n            ];\r\n            this.props.handlePinchMove(this.props.stage, touchPoints);\r\n        }\r\n\r\n        // if (this.props.stage.pinchStarted) {\r\n        //     this.props.handleSecondTouchMove(this.props.stage, event.stageX, event.stageY);\r\n        // }\r\n        // else {\r\n        //     this.props.handleMouseMove(\r\n        //         this.props.stage,\r\n        //         event.stageX,\r\n        //         event.stageY,\r\n        //         this.props.mouse.startX ? event.stageX - this.props.mouse.startX : undefined,\r\n        //         this.props.mouse.startY ? event.stageY - this.props.mouse.startY : undefined\r\n        //     );\r\n        // }\r\n    };\r\n\r\n    handleMouseDown = (event) => {\r\n        // if (event.pointerID === -1 || event.pointerID === 0) {\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n            this.props.handleMouseDown(this.props.stage, event.stageX, event.stageY);\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            let touchPoints = [\r\n                {\r\n                    x: event.nativeEvent.touches[0].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[0].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n                {\r\n                    x: event.nativeEvent.touches[1].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[1].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n            ];\r\n            this.props.handlePinchDown(this.props.stage, touchPoints);\r\n        }\r\n    };\r\n\r\n    handleMouseUp = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n            this.props.handleMouseUp(this.props.stage);\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            this.props.handlePinchUp(this.props.stage);\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = (event) => {   // nothing works except click\r\n        this.props.stage.canvas.blur();\r\n        document.body.focus();\r\n    };\r\n\r\n    handleMouseWheel = (event) => {\r\n        /*event.preventDefault();*/\r\n\r\n        let delta = event.detail || event.wheelDelta;\r\n        if (delta !== 0) {\r\n            this.props.handleMouseWheelMove(this.props.stage, event.offsetX, event.offsetY, delta);\r\n        }\r\n    };\r\n\r\n    handleMouseWheelFox = (event) => {\r\n        /*event.preventDefault();*/\r\n        if (event.detail !== 0) {\r\n            this.props.handleMouseWheelMove(this.props.stage, event.layerX, event.layerY, -event.detail);\r\n        }\r\n    };\r\n\r\n    handlePaste = (event) => {\r\n        let a = event;\r\n    }\r\n\r\n    componentDidMount() {\r\n        let stage = new Stage(this.canvasElement.current);\r\n\r\n        // stage.setClearColor(\"#FFFFFF\");\r\n        // stage.update();\r\n\r\n        stage.on(\"stagemousedown\", this.handleMouseDown);\r\n        stage.on(\"stagemousemove\", this.handleMouseMove);\r\n        // stage.on(\"click\", this.handleMouseDown);\r\n        stage.on(\"stagemouseup\", this.handleMouseUp);\r\n        stage.on(\"mouseleave\", this.handleMouseLeave);\r\n        stage.canvas.addEventListener(\"mousewheel\", this.handleMouseWheel, {passive: true});\r\n        stage.canvas.addEventListener(\"DOMMouseScroll\", this.handleMouseWheelFox, {passive: true});\r\n        stage.canvas.addEventListener(\"paste\", this.handlePaste);\r\n\r\n        this.props.registerStage(stage);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <canvas\r\n                tabIndex=\"1\"\r\n                ref={this.canvasElement}\r\n                id=\"mainCanvas\"\r\n                className={styles[\"App-canvas\"]}\r\n                width=\"100\"\r\n                height=\"100\"\r\n            >\r\n            </canvas>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        stage: state.app.stage,\r\n        mouse: state.mouse\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        registerStage: (stage) => dispatch(actions.registerStage(stage)),\r\n        handleMouseDown: (stage, x, y) => dispatch(actions.handleMouseDown(stage, x, y)),\r\n        handleMouseUp: (stage, x, y) => dispatch(actions.handleMouseUp(stage, x, y)),\r\n        handleMouseMove: (stage, x, y, dx, dy) => dispatch(actions.handleMouseMove(stage, x, y, dx, dy)),\r\n        handleMouseWheelMove: (stage, x, y, delta) => dispatch(actions.handleMouseWheelMove(stage, x, y, delta)),\r\n        handlePinchDown: (stage, touchPoints) => dispatch(actions.handlePinchDown(stage, touchPoints)),\r\n        handlePinchMove: (stage, touchPoints) => dispatch(actions.handlePinchMove(stage, touchPoints)),\r\n        handlePinchUp: (stage) => dispatch(actions.handlePinchUp(stage))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CanvasComponent);\r\n","/**\r\n * Created by alexanderbol on 17/06/2017.\r\n */\r\nimport styles from './StatusComponent.module.css';\r\n\r\nconst StatusComponent = () => {\r\n    return (\r\n        <div className={styles[\"App-status-bar\"]}>\r\n            <div>\r\n                <h5>\r\n                    &nbsp;\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusComponent;","import {Component, Fragment} from 'react';\r\n// import Utils from \"../utils\";\r\n\r\nclass StageComponent extends Component {\r\n    // shouldComponentUpdate useless because always returns \"true\",\r\n    // Don't know why, maybe because of children?\r\n    // ----------------------------------------------------------\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     if (Utils.is_equal(this.props, nextProps)) {\r\n    //         return false;\r\n    //     }\r\n    //     return true;\r\n    // }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.stage.canvas && this.props.stage.canvas.getContext('2d')) {\r\n\r\n            let origin = this.props.stage.origin;\r\n            let zoomFactor = this.props.stage.zoomFactor*this.props.stage.resolution;\r\n            this.props.stage.setTransform(origin.x, origin.y, zoomFactor, -zoomFactor);\r\n\r\n            this.props.stage.update();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onStageUnmounted();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {this.props.children}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StageComponent;","import {Point, Segment, Circle, Arc, Polygon, Box} from '@flatten-js/core';\r\nimport {Graphics} from '@createjs/easeljs';\r\n\r\n/* Provide conversion methods from FlattenJS objects to CreateJS Graphics */\r\nexport function graphics(shape, style = undefined) {\r\n    if (shape instanceof Point) {\r\n        return graphics_point(shape, style);\r\n    }\r\n    if (shape instanceof Segment) {\r\n        return graphics_segment(shape, style);\r\n    }\r\n    if (shape instanceof Arc) {\r\n        return graphics_arc(shape, style);\r\n    }\r\n    if (shape instanceof Circle) {\r\n        return graphics_circle(shape, style);\r\n    }\r\n    if (shape instanceof Box) {\r\n        return graphics_box(shape, style);\r\n    }\r\n    if (shape instanceof Polygon) {\r\n        return graphics_polygon(shape, style);\r\n    }\r\n    return null;\r\n}\r\n\r\n// Point.prototype.graphics = function(style) {\r\nfunction graphics_point(point, style) {\r\n    let radius = (style && style.radius) ? style.radius : 3;\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    let graphics = new Graphics();\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n    graphics.circle = graphics.drawCircle(point.x, point.y, radius).command;\r\n    return graphics;\r\n};\r\n\r\n// Segment.prototype.graphics = function(style) {\r\nfunction graphics_segment(segment, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle !== undefined ? style.strokeStyle : 2;\r\n    let ignoreScale = style && style.ignoreScale !== undefined ? style.ignoreScale : true;\r\n    let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    return graphics\r\n        .setStrokeStyle(strokeStyle,1,0,10,ignoreScale)\r\n        .beginStroke(stroke)\r\n        .moveTo(segment.ps.x, segment.ps.y)\r\n        .lineTo(segment.pe.x, segment.pe.y)\r\n        .endStroke();\r\n};\r\n\r\n// Arc.prototype.graphics = function(style) {\r\nfunction graphics_arc(arc, style) {\r\n    // let startAngle = 2 * Math.PI - this.startAngle;\r\n    // let endAngle =  2 * Math.PI - this.endAngle;\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 2;\r\n    let ignoreScale = style && style.ignoreScale !== undefined ? style.ignoreScale : true;\r\n    let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    return graphics\r\n        .setStrokeStyle(strokeStyle,1,0,10,ignoreScale)\r\n        .beginStroke(stroke)\r\n        .arc(arc.pc.x, arc.pc.y, arc.r, arc.startAngle, arc.endAngle, !arc.counterClockwise)\r\n        .endStroke();\r\n};\r\n\r\n// Circle.prototype.graphics = function(style) {\r\nfunction graphics_circle(circle, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    // let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    let stroke = style && style.stroke ? style.stroke : \"#FF0303\";\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    graphics.setStrokeStyle(strokeStyle,0,0,10,true);\r\n    graphics.stroke = graphics.beginStroke(stroke).command;\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n    graphics.drawCircle(circle.pc.x, circle.pc.y, circle.r);\r\n    return graphics;\r\n};\r\n\r\n\r\nfunction graphics_box(box, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    let stroke = style && style.stroke ? style.stroke : \"#FF0303\";\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    graphics.setStrokeStyle(strokeStyle,0,0,10,true);\r\n    graphics.stroke = graphics.beginStroke(stroke).command;\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n    graphics.drawRect(box.xmin, box.ymin, box.xmax-box.xmin, box.ymax-box.ymin);\r\n    return graphics;\r\n};\r\n\r\nfunction setGraphicsEdgeSegment(graphics, segment) {\r\n    graphics.lineTo(segment.pe.x, segment.pe.y);\r\n}\r\n\r\nfunction setGraphicsEdgeArc(graphics, arc) {\r\n    // let startAngle = 2 * Math.PI - arc.startAngle;\r\n    // let endAngle = 2 * Math.PI - arc.endAngle;\r\n    graphics.arc(arc.pc.x, arc.pc.y, arc.r, arc.startAngle, arc.endAngle, !arc.counterClockwise);\r\n}\r\n\r\nfunction setGraphicsEdge(graphics, edge) {\r\n    if (edge.shape instanceof Segment) {\r\n        setGraphicsEdgeSegment(graphics, edge.shape);\r\n    }\r\n    else if (edge.shape instanceof Arc) {\r\n        setGraphicsEdgeArc(graphics, edge.shape);\r\n    }\r\n}\r\n\r\nfunction setGraphicsFace(graphics, face) {\r\n    let ps = face.first.start;\r\n    graphics.moveTo(ps.x, ps.y);\r\n\r\n    for (let edge of face) {\r\n        setGraphicsEdge(graphics, edge);\r\n    }\r\n}\r\n\r\n// Polygon.prototype.graphics = function(style) {\r\nfunction graphics_polygon(polygon, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    let stroke = style && style.stroke ? style.stroke : \"#FF0303\";\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    graphics.setStrokeStyle(strokeStyle,0,0,10,true);\r\n    graphics.stroke = graphics.beginStroke(stroke).command;\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n\r\n    for (let face of polygon.faces) {\r\n        setGraphicsFace(graphics, face);\r\n    }\r\n\r\n    graphics.endStroke();\r\n    return graphics;\r\n};\r\n\r\n","export const is_equal = (obj1, obj2) => {\r\n    let equal = true;\r\n    for (let key of Object.keys(obj2)) {\r\n        if (obj2[key] !== obj1[key]) {\r\n            equal = false;\r\n            break;\r\n        }\r\n    }\r\n    return equal;\r\n};\r\n\r\nexport const format = (num, divisor, decimals) => {\r\n    return (num/divisor).toFixed(decimals);\r\n};\r\n","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Shape} from '@createjs/easeljs';\r\nimport {graphics} from '../../../../models/graphics';\r\nimport {is_equal} from '../../../../models/utils';\r\n\r\nexport class ShapeComponent extends Component {\r\n    constructor(params) {\r\n        super();\r\n        this.shape = new Shape();\r\n        params.stage.addChild(this.shape);\r\n    }\r\n\r\n    handleMouseOver = (event) => {\r\n        this.props.onMouseOver(this.props.model);\r\n    };\r\n\r\n    handleMouseOut = (event) => {\r\n        this.props.onMouseOut();\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        this.props.onClick(this.props.model, this.props.layer);\r\n    };\r\n\r\n    redraw() {\r\n        // Draw shape\r\n        let stage = this.props.stage;\r\n        let color = (this.props.hovered || this.props.selected) ? \"black\" : this.props.color;\r\n        let alpha = (this.props.hovered || this.props.selected) ? 1.0 : 0.6;\r\n        let widthOn = this.props.widthOn;\r\n\r\n        let strokeStyle = this.props.model.geom.aperture ? this.props.model.geom.aperture : undefined;\r\n        let fill = widthOn ? this.props.color : \"white\";\r\n\r\n        if (this.shape.graphics.isEmpty()) {\r\n            this.shape.graphics = graphics(this.props.model.geom,{\r\n                strokeStyle: strokeStyle,\r\n                ignoreScale: true,\r\n                stroke: color,\r\n                fill: fill,\r\n                radius: 3. / (stage.zoomFactor * stage.resolution)\r\n            });\r\n\r\n            // this.skeletonShape = new Shape();\r\n            // this.skeletonShape.graphics = this.props.model.geom.graphics({\r\n            //     strokeStyle: 1,\r\n            //     ignoreScale: true,\r\n            //     stroke: color,\r\n            //     fill: fill,\r\n            //     radius: 3. / (stage.zoomFactor * stage.resolution)\r\n            // });\r\n            // this.skeletonShape.alpha = 1;\r\n            // this.props.stage.addChild(this.skeletonShape);\r\n        }\r\n        else {\r\n            if (this.shape.graphics.stroke) this.shape.graphics.stroke.style = color;\r\n            if (this.shape.graphics.fill) this.shape.graphics.fill.style = fill;\r\n            if (this.shape.graphics.circle) this.shape.graphics.circle.radius =\r\n                3. / (stage.zoomFactor * stage.resolution);\r\n        }\r\n        this.shape.alpha = this.props.displayed ? alpha : 0.0;\r\n\r\n        // let box = this.props.model.geom.box;\r\n        // this.shape.cache(box.xmin, box.ymin, box.xmax - box.xmin, box.ymax - box.ymin);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.shape.on(\"mouseover\", this.handleMouseOver);\r\n        this.shape.on(\"mouseout\", this.handleMouseOut);\r\n        this.shape.on(\"click\", this.handleClick);\r\n\r\n        // this.shape.mouseEnabled = false;\r\n\r\n        this.redraw();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (is_equal(this.props, nextProps)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.redraw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.shape.off(\"mouseover\", this.handleMouseOver);\r\n        this.shape.off(\"mouseout\", this.handleMouseOut);\r\n        this.shape.off(\"click\", this.handleClick);\r\n        this.props.stage.removeChild(this.shape);\r\n        this.shape.graphics.clear();\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Bitmap} from '@createjs/easeljs';\r\nimport '../../../../models/graphics';\r\nimport {is_equal} from '../../../../models/utils';\r\n// import storage from '../../../../firebase-storage';\r\n\r\nexport class ImageComponent extends Component {\r\n    handleMouseOver = (event) => {\r\n        this.props.onMouseOver(this.props.model);\r\n    };\r\n\r\n    handleMouseOut = (event) => {\r\n        this.props.onMouseOut();\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        this.props.onClick(this.props.model, this.props.layer);\r\n    };\r\n\r\n    redraw() {\r\n        if (!this.bitmap) return;\r\n        // Draw shape\r\n        let alpha = 1; // (this.props.hovered || this.props.selected) ? 1.0 : 0.6;\r\n        this.bitmap.alpha = this.props.displayed ? alpha : 0.0;\r\n\r\n        let width = this.props.model.geom.width;\r\n        let ratio = this.bitmap.image.naturalWidth/this.bitmap.image.naturalHeight;\r\n        this.props.model.geom.height = this.props.model.geom.width / ratio;\r\n        let scaleX = width/this.bitmap.image.naturalWidth; // 1. / (stage.zoomFactor * stage.resolution);\r\n        let scaleY = width/(this.bitmap.image.naturalHeight*ratio);\r\n        let tx = this.props.model.geom.center.x; // stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n        let ty = this.props.model.geom.center.y; // -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n\r\n        this.bitmap.setTransform(tx, ty, scaleX, -scaleY);\r\n\r\n        this.bitmap.regX = this.bitmap.image.naturalWidth/2;\r\n        this.bitmap.regY = this.bitmap.image.naturalHeight/2;\r\n\r\n        // let box = this.state.polygon.geom.box;\r\n        // this.shape.cache(box.xmin, box.ymin, box.xmax - box.xmin, box.ymax - box.ymin);\r\n    }\r\n\r\n    loadImage() {\r\n        const img = new Image();\r\n\r\n        img.onload = () => {\r\n            // img.crossOrigin=\"Anonymous\";\r\n            this.bitmap = new Bitmap(img);\r\n            this.props.stage.addChild(this.bitmap);\r\n\r\n            // this.bitmap.on(\"mouseover\", this.handleMouseOver);\r\n            // this.bitmap.on(\"mouseout\", this.handleMouseOut);\r\n            // this.bitmap.on(\"click\", this.handleClick);\r\n\r\n            // this.shape.mouseEnabled = false;\r\n            this.redraw();\r\n\r\n            this.props.onImageLoaded(this.props.model, this.props.layer, img);\r\n        };\r\n        img.setAttribute('crossOrigin', 'anonymous'); // works for me\r\n\r\n        // Create a reference from a Google Cloud Storage URI\r\n        //const ref = storage.refFromURL(this.props.model.geom.uri);\r\n\r\n        // ref.getDownloadURL()\r\n        //    .then( url => {\r\n        //\r\n        //         img.src = url;\r\n        //     })\r\n        //     .catch( error => console.log(error))\r\n\r\n        img.src = this.props.model.geom.uri;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadImage()\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (is_equal(this.props, nextProps)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.redraw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // this.bitmap.off(\"mouseover\", this.handleMouseOver);\r\n        // this.bitmap.off(\"mouseout\", this.handleMouseOut);\r\n        // this.bitmap.off(\"click\", this.handleClick);\r\n\r\n        this.props.stage.removeChild(this.bitmap);\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n","import {Component} from 'react';\r\nimport {ShapeComponent} from './graphics/shapeComponent';\r\nimport {ImageComponent} from \"./graphics/imageComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/appActions\";\r\n\r\nclass LayerComponent extends Component {\r\n    onImageLoaded = (model, layer, image) => {\r\n        this.props.setHomeView(this.props.stage, this.props.layer);\r\n        this.forceUpdate();       // ??? unclear why on Home button click not updated\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.layer.shapes.map((shape, index) => {\r\n                return shape.geom.uri ? (\r\n                    <ImageComponent\r\n                        key={index}\r\n                        stage={this.props.stage}\r\n                        layer={this.props.layer}\r\n                        model={shape}\r\n                        displayed={this.props.layer.displayed}\r\n                        hovered={shape === this.props.hoveredShape}\r\n                        selected={\r\n                            shape === this.props.firstMeasuredShape ||\r\n                            shape === this.props.secondMeasuredShape\r\n                        }\r\n                        color={this.props.layer.color}\r\n                        widthOn={this.props.widthOn}\r\n                        displayLabels={this.props.displayLabels}\r\n                        zoomFactor={this.props.zoomFactor}\r\n                        onMouseOver={this.props.onMouseOver}\r\n                        onMouseOut={this.props.onMouseOut}\r\n                        onClick={this.props.onClick}\r\n                        onImageLoaded={this.onImageLoaded}\r\n                    />\r\n                    ) : (\r\n                    <ShapeComponent\r\n                        key={index}\r\n                        stage={this.props.stage}\r\n                        layer={this.props.layer}\r\n                        model={shape}\r\n                        displayed={this.props.layer.displayed}\r\n                        hovered={shape === this.props.hoveredShape}\r\n                        selected={\r\n                            shape === this.props.firstMeasuredShape ||\r\n                            shape === this.props.secondMeasuredShape\r\n                        }\r\n                        color={this.props.layer.color}\r\n                        widthOn={this.props.widthOn}\r\n                        displayVertices={this.props.displayVertices}\r\n                        zoomFactor={this.props.zoomFactor}\r\n                        onMouseOver={this.props.handleMouseRollOverShape}\r\n                        onMouseOut={this.props.handleMouseRollOutShape}\r\n                        onClick={this.props.handleClickOnShape}\r\n                    /> )\r\n                }\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stage: state.app.stage,\r\n        layers: state.layers,\r\n        displayVertices: state.app.displayVertices,\r\n        displayLabels: state.app.displayLabels,\r\n        widthOn: state.app.widthOn,\r\n        zoomFactor: state.app.zoomFactor,\r\n        units: state.app.units,\r\n        divisor: state.app.divisor,\r\n        decimals: state.app.decimals,\r\n        measurePointsActive: state.app.measurePointsActive,\r\n        showAboutPopup: state.app.showAboutPopup,\r\n        showDownloadPopup: state.app.showDownloadPopup,\r\n        showUploadPopup: state.app.showUploadPopup,\r\n        measureShapesTool: state.measureShapesTool,\r\n        hoveredShape: state.measureShapesTool.hoveredShape,\r\n        firstMeasuredShape: state.measureShapesTool.firstMeasuredShape,\r\n        secondMeasuredShape: state.measureShapesTool.secondMeasuredShape\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setHomeView: (stage, shape) => dispatch(actions.setHomeView(stage, shape)),\r\n        handleMouseRollOverShape: (shape) => dispatch(actions.handleMouseRollOverShape(shape)),\r\n        handleMouseRollOutShape: () => dispatch(actions.handleMouseRollOutShape()),\r\n        handleClickOnShape: (shape, layer) => dispatch(actions.handleClickOnShape(shape, layer)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LayerComponent);\r\n","import classes from '../LabelsLayerComponent/labelsLayer.module.css';\r\n\r\nconst labelComponent = ( {stage, shape} ) => {\r\n    let center = shape.geom.center || shape.geom;  // Point has no method center\r\n    let left = stage.canvas.offsetLeft + stage.W2C_X(center.x) + 6;\r\n    let top = stage.canvas.offsetTop + stage.W2C_Y(center.y) - 4;\r\n    let inside = left > stage.canvas.offsetLeft && left < stage.canvas.offsetLeft + stage.canvas.width &&\r\n        top > stage.canvas.offsetTop && top < stage.canvas.offsetTop + stage.canvas.height;\r\n\r\n    return inside ? (\r\n        <div style={{position:\"absolute\", left:left+\"px\", top: top+\"px\"}} className={classes.LabelComponent}>\r\n            <h5>{shape.label}</h5>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default labelComponent;","import LabelComponent from '../domelements/labelComponent';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst labelsLayerComponent = (props) => {\r\n\r\n    return (props.layer.displayed && props.displayLabels) ? (\r\n        props.layer.shapes.map((shape, index) => {\r\n                return (shape.label && shape.label.trim() !== \"\") ? (\r\n                    <LabelComponent\r\n                        key={index}\r\n                        stage={props.stage}\r\n                        shape={shape}\r\n                        zoomFactor={props.zoomFactor}\r\n                        originX={props.originX}\r\n                        originY={props.originY}\r\n                    />) : null;\r\n            }\r\n        )\r\n    ) : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stage: state.app.stage,\r\n        displayLabels: state.app.displayLabels,\r\n        zoomFactor: state.app.zoomFactor,\r\n        originX: state.app.originX,\r\n        originY: state.app.originY\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {return {}};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(labelsLayerComponent);\r\n","import {format} from \"../../../../../models/utils\";\r\nimport classes from './VertexLabel.module.css';\r\n\r\nconst VertexLabel = (props) => {\r\n    let stage = props.stage;\r\n    let left = stage.canvas.offsetLeft + stage.W2C_X(props.vertex.x) + 6;\r\n    let top = stage.canvas.offsetTop + stage.W2C_Y(props.vertex.y) - 10;\r\n    // let inside = left > stage.canvas.offsetLeft && left < stage.canvas.offsetLeft + stage.canvas.width &&\r\n    //     top > stage.canvas.offsetTop && top < stage.canvas.offsetTop + stage.canvas.height;\r\n    let x = format(props.vertex.x, props.divisor, props.decimals);\r\n    let y = format(props.vertex.y, props.divisor, props.decimals);\r\n\r\n    return (\r\n        <div className={classes.VertexLabel} style={{left:left, top:top}}>\r\n            <h5>\r\n                x={x} y={y}\r\n            </h5>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default VertexLabel;","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Shape, Shadow} from '@createjs/easeljs';\r\nimport {graphics} from '../../../../models/graphics';\r\nimport {is_equal} from '../../../../models/utils';\r\nimport VertexLabel from '../domelements/VertexLabel/VertexLabel';\r\n\r\nclass VertexComponent extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.shape = new Shape();\r\n        props.stage.addChild(this.shape);\r\n\r\n        this.state = {\r\n            hovered: false\r\n        }\r\n    }\r\n\r\n    handleMouseOver = (event) => {\r\n        // this.props.onMouseOver(this.props.model);\r\n        this.shape.shadow = new Shadow(this.props.color, 0, 0, 10);\r\n        this.setState({hovered:true})\r\n    };\r\n\r\n    handleMouseOut = (event) => {\r\n        // this.props.onMouseOut();\r\n        this.shape.shadow = null;\r\n        this.setState({hovered:false})\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        // this.props.onClick(this.props.model, this.props.layer);\r\n        console.log(this.props.vertex);\r\n    };\r\n\r\n    redraw() {\r\n        let stage = this.props.stage;\r\n        let stroke = this.props.color;\r\n        let fill = this.props.color;\r\n        let alpha = 1.0;\r\n\r\n\r\n        if (this.shape.graphics.isEmpty()) {\r\n            this.shape.graphics = graphics(this.props.vertex,\r\n                {\r\n                    stroke: stroke,     // this.props.color,\r\n                    fill: fill,\r\n                    radius: 3. / (stage.zoomFactor * stage.resolution)\r\n                });\r\n        }\r\n        else {\r\n            this.shape.graphics.circle.radius = 3. / (stage.zoomFactor * stage.resolution);\r\n            this.shape.graphics.fill.style = fill;\r\n        }\r\n        this.shape.alpha = alpha;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.shape.on(\"mouseover\", this.handleMouseOver);\r\n        this.shape.on(\"mouseout\", this.handleMouseOut);\r\n        this.shape.on(\"click\", this.handleClick);\r\n\r\n        this.shape.mouseEnabled = true;\r\n\r\n        this.redraw();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (is_equal(this.props, nextProps) && is_equal(this.state, nextState)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.redraw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.shape.off(\"mouseover\", this.handleMouseOver);\r\n        this.shape.off(\"mouseout\", this.handleMouseOut);\r\n        this.shape.off(\"click\", this.handleClick);\r\n\r\n        this.props.stage.removeChild(this.shape);\r\n        this.shape.graphics.clear();\r\n    }\r\n\r\n    render() {\r\n        return this.state.hovered ? (\r\n            <VertexLabel\r\n                stage={this.props.stage}\r\n                vertex={this.props.vertex}\r\n                divisor={this.props.divisor}\r\n                decimals={this.props.decimals}\r\n            />\r\n            ) : null;\r\n    }\r\n}\r\n\r\nexport default VertexComponent;","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\nimport VertexComponent from './vertexComponent';\r\n\r\nconst VerticesComponent = (props) => {\r\n\r\n    return props.model.geom.vertices ?\r\n        props.model.geom.vertices.map((vertex, index) =>\r\n            <VertexComponent key={index}\r\n                             stage={props.stage}\r\n                             vertex={vertex}\r\n                             color={props.color}\r\n                             divisor={props.divisor}\r\n                             decimals={props.decimals}\r\n                             zoomFactor={props.zoomFactor}\r\n                             originX={props.originX}\r\n                             originY={props.originY}\r\n            />\r\n        ) : null;\r\n\r\n}\r\n\r\nexport default VerticesComponent;","import VerticesComponent from './graphics/verticesComponent';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst verticesLayerComponent = (props) => {\r\n    return (props.layer.displayed && props.displayVertices) ? (\r\n        props.layer.shapes.map((shape, index) =>\r\n            <VerticesComponent\r\n                key={index}\r\n                stage={props.stage}\r\n                model={shape}\r\n                color={props.layer.color}\r\n                divisor={props.divisor}\r\n                decimals={props.decimals}\r\n                zoomFactor={props.zoomFactor}\r\n                originX={props.originX}\r\n                originY={props.originY}\r\n            />\r\n        )\r\n    ) : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stage: state.app.stage,\r\n        displayVertices: state.app.displayVertices,\r\n        zoomFactor: state.app.zoomFactor,\r\n        originX: state.app.originX,\r\n        originY: state.app.originY,\r\n        divisor: state.app.divisor,\r\n        decimals: state.app.decimals,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {return {}};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(verticesLayerComponent);\r\n","import {Component, Fragment} from 'react';\r\nimport LayerComponent from \"./layerComponent\";\r\nimport LabelsLayerComponent from \"./LabelsLayerComponent/labelsLayerComponent\";\r\nimport VerticesLayerComponent from './verticesLayerComponent';\r\n// import Layers from \"../../../models/layers\";\r\n\r\nclass LayersComponent extends Component {\r\n    componentDidMount() {\r\n        // if (this.props.layers.length > 0 && this.props.stage) {\r\n        //     let affectedLayer = Layers.getAffected(this.props.layers);\r\n        //     if (affectedLayer) {\r\n        //         this.props.setHomeView(this.props.stage, affectedLayer);\r\n        //     }\r\n        // }\r\n    }\r\n    render() {\r\n        return this.props.layers.map((layer) =>\r\n            <Fragment key={layer.name}>\r\n\r\n                <LayerComponent layer={layer} />\r\n\r\n                <LabelsLayerComponent layer={layer} />\r\n\r\n                <VerticesLayerComponent layer={layer} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LayersComponent;\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\n\r\nimport {Component, createRef} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Stage from \"../models/stage\";\r\nimport * as actions from '../store/actions/stageActions';\r\n\r\nclass MeasurePointsTool extends Component {\r\n    measureCanvas = createRef();\r\n    measureStage = null;\r\n\r\n    state = {\r\n        startX: undefined,\r\n        startY: undefined,\r\n        endX: undefined,\r\n        endY: undefined,\r\n        measureStarted: false\r\n    };\r\n\r\n    handleMouseDown = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.measureStage.clear();\r\n\r\n        if (this.state.measureStarted) {   // second click - clear measurement\r\n            this.setState({\r\n                startX: undefined,\r\n                startY: undefined,\r\n                endX: undefined,\r\n                endY: undefined,\r\n                measureStarted: false\r\n            });\r\n            this.measureStage.canvas.style.cursor = \"auto\";\r\n        }\r\n        else {                       // first click - start measurment\r\n            this.setState({\r\n                startX: this.measureStage.C2W_X(event.stageX),\r\n                startY: this.measureStage.C2W_Y(event.stageY),\r\n                measureStarted: true\r\n            });\r\n            this.measureStage.canvas.style.cursor = \"crosshair\";\r\n        }\r\n    };\r\n\r\n    handleMouseMove = (event) => {\r\n        if (this.state.measureStarted) {\r\n            this.setState({\r\n                endX: this.measureStage.C2W_X(event.stageX),\r\n                endY: this.measureStage.C2W_Y(event.stageY)\r\n            })\r\n        }\r\n    };\r\n\r\n    handleMouseUp = (event) => {\r\n    }\r\n\r\n    handleMouseWheel = (event) => {\r\n        event.preventDefault();\r\n\r\n        let delta = event.detail || event.wheelDelta;\r\n        if (delta !== 0) {\r\n            // this.props.onMouseWheelMove(event.offsetX, event.offsetY, delta);\r\n            this.props.handleMouseWheelMove(this.props.stage, event.offsetX, event.offsetY, delta);\r\n\r\n            this.draw();\r\n        }\r\n    };\r\n\r\n    handleMouseWheelFox = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (event.detail !== 0) {\r\n            // this.props.onMousewheelMove(event.layerX, event.layerY, -event.detail);\r\n            this.props.handleMouseWheelMove(this.props.stage, event.layerX, event.layerY, -event.detail);\r\n\r\n            this.draw();\r\n        }\r\n    };\r\n\r\n    draw() {\r\n        // let canvas = this.measureCanvas.current;\r\n        let stage = this.measureStage; // this.props.stage;\r\n        let canvas = stage.canvas;\r\n        let context = canvas.getContext('2d');\r\n\r\n        this.measureStage.origin = this.props.stage.origin;\r\n        this.measureStage.resolution = this.props.stage.resolution;\r\n        this.measureStage.zoomFactor = this.props.stage.zoomFactor;\r\n\r\n        this.measureStage.clear();\r\n\r\n        // Draw rectangle\r\n        let pllX = Math.min(stage.W2C_X(this.state.startX), stage.W2C_X(this.state.endX));\r\n        let pllY = Math.min(stage.W2C_Y(this.state.startY), stage.W2C_Y(this.state.endY));\r\n        let width = Math.abs(stage.W2C_Scalar(this.state.startX - this.state.endX));\r\n        let height = Math.abs(stage.W2C_Scalar(this.state.startY - this.state.endY));\r\n\r\n        context.beginPath();\r\n        context.rect(pllX, pllY, width, height);\r\n\r\n        // Draw segment\r\n        context.moveTo(stage.W2C_X(this.state.startX), stage.W2C_Y(this.state.startY));\r\n        context.lineTo(stage.W2C_X(this.state.endX), stage.W2C_Y(this.state.endY));\r\n\r\n        context.lineWidth = 1;\r\n        context.strokeStyle = 'black';\r\n        context.stroke();\r\n\r\n        // Draw text\r\n        let textX, textY, textHeight, textWidth;\r\n        let backX, backY;                      // background rectangle\r\n        let text = this.measurement();\r\n\r\n        context.font = \"12pt Arial\";\r\n\r\n        textHeight = 12;\r\n        /* font size*/\r\n        textWidth = context.measureText(text).width;\r\n\r\n        // Rectangle to the right of current point, text aligned left\r\n        if (Math.abs(stage.W2C_X(this.state.endX) - pllX) <= 2) {\r\n            context.textAlign = \"left\";\r\n            textX = pllX + 3;\r\n            backX = pllX;\r\n        }\r\n        // Rectangle to the left of current point, text aligned right\r\n        else {\r\n            context.textAlign = \"right\";\r\n            textX = pllX + width - 3;\r\n            backX = textX - textWidth - 3;\r\n        }\r\n\r\n        if (Math.abs(stage.W2C_Y(this.state.endY) - pllY) <= 2) {\r\n            textY = pllY - 3;\r\n        }\r\n        else {\r\n            textY = pllY + height + textHeight + 3;\r\n        }\r\n        backY = textY - textHeight - 3;\r\n\r\n        context.fillStyle = 'white';\r\n        context.globalAlpha = 0.4;\r\n        context.fillRect(backX, backY, textWidth + 6, textHeight + 6);\r\n\r\n        context.fillStyle = \"black\";\r\n        context.globalAlpha = 1;\r\n        context.fillText(this.measurement(), textX, textY);\r\n    }\r\n\r\n    measurement() {\r\n        let dx = this.state.endX - this.state.startX;\r\n        let dy = this.state.endY - this.state.startY;\r\n        let dist = Math.sqrt(dx * dx + dy * dy);\r\n        let message = \"DX=\" + this.format(dx) + \",DY=\" + this.format(dy) + \",D=\" + this.format(dist);\r\n        return message;\r\n    }\r\n\r\n    format(num) {\r\n        return (num / this.props.divisor).toFixed(this.props.decimals);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // let canvas = this.measureCanvas.current;\r\n        this.measureStage = new Stage(this.measureCanvas.current);\r\n        this.measureStage.origin = this.props.stage.origin;\r\n        this.measureStage.resolution = this.props.stage.resolution;\r\n        this.measureStage.zoomFactor = this.props.stage.zoomFactor;\r\n\r\n        this.measureStage.on(\"stagemousedown\", this.handleMouseDown);\r\n        this.measureStage.on(\"stagemousemove\", this.handleMouseMove);\r\n        this.measureStage.on(\"stagemouseup\", this.handleMouseUp);\r\n\r\n        this.measureStage.canvas.addEventListener(\"mousewheel\", this.handleMouseWheel);\r\n        this.measureStage.canvas.addEventListener(\"DOMMouseScroll\", this.handleMouseWheelFox);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.measureStarted) {\r\n            this.draw();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.measureStage.clear();\r\n        this.measureStage.removeAllChildren();\r\n        this.measureStage.removeAllEventListeners();\r\n    }\r\n\r\n    render() {\r\n        let mainCanvas = this.props.stage.canvas;\r\n        let width = mainCanvas.width;\r\n        let height = mainCanvas.height;\r\n        let top = mainCanvas.offsetTop;\r\n        let left = mainCanvas.offsetLeft;\r\n        return (\r\n            <canvas tabIndex=\"1\" ref={this.measureCanvas}\r\n                    width={width}\r\n                    height={height}\r\n                    style={{position: 'absolute', top: top, left: left}}\r\n            >\r\n            </canvas>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({app}) => {\r\n    return {\r\n        stage: app.stage,\r\n        divisor: app.divisor,\r\n        decimals: app.decimals\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleMouseWheelMove: (stage, x, y, delta) => dispatch(actions.handleMouseWheelMove(stage, x, y, delta))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MeasurePointsTool);\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Shape, Text} from '@createjs/easeljs';\r\nimport {graphics} from '../models/graphics';\r\n\r\nclass MeasureShapesTool extends Component {\r\n    constructor(params) {\r\n        super();\r\n        this.segment = new Shape();\r\n        params.stage.addChild(this.segment);\r\n\r\n        this.labelShape = new Text();\r\n        this.labelShape.x = 0;\r\n        this.labelShape.y = 0;\r\n        params.stage.addChild(this.labelShape);\r\n\r\n        // var html = document.createElement('div');\r\n        // html.innerText = \"\"; // params.model.label;\r\n        // html.style.position = \"absolute\";\r\n        // html.style.top = 0;\r\n        // html.style.left = 0;\r\n        //\r\n        // document.body.appendChild(html);\r\n        // this.labelShape = new createjs.DOMElement(html);\r\n        // params.stage.addChild(this.labelShape);\r\n    }\r\n\r\n    // redrawLabel() {\r\n    //     if (!this.labelShape) return;\r\n    //\r\n    //     let stage = this.props.stage;\r\n    //\r\n    //     this.labelShape.htmlElement.style.display = \"block\";\r\n    //\r\n    //     let box = this.props.shortestSegment.box;\r\n    //     let point = {x: (box.xmin + box.xmax) / 2, y: (box.ymin + box.ymax) / 2};\r\n    //     let dx = 6. / (stage.zoomFactor * stage.resolution);\r\n    //     let dy = 4. / (stage.zoomFactor * stage.resolution);\r\n    //\r\n    //     this.labelShape.htmlElement.style.font = \"16px Arial\";\r\n    //     this.labelShape.htmlElement.innerText = this.props.shortestSegment.length;\r\n    //\r\n    //     let unscale = 1. / (stage.zoomFactor * stage.resolution);\r\n    //     let tx = stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n    //     let ty = -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n    //     this.labelShape.setTransform(tx, ty, unscale, -unscale);\r\n    // }\r\n\r\n    format(num) {\r\n        return (num/this.props.divisor).toFixed(this.props.decimals);\r\n    }\r\n\r\n    redrawLabel() {\r\n        if (!this.labelShape) return;\r\n\r\n        let stage = this.props.stage;\r\n\r\n        let box = this.props.shortestSegment.box;\r\n        let point = {x: (box.xmin + box.xmax) / 2, y: (box.ymin + box.ymax) / 2};\r\n        let dx = 6. / (stage.zoomFactor * stage.resolution);\r\n        let dy = 4. / (stage.zoomFactor * stage.resolution);\r\n\r\n        if (box.ymin === box.ymax) {\r\n            dx = 0;\r\n            dy = -dy;\r\n        }\r\n\r\n        // this.labelShape.htmlElement.style.display = \"block\";\r\n        // this.labelShape.htmlElement.style.font = \"16px Arial\";\r\n        // this.labelShape.htmlElement.innerText = this.props.shortestSegment.length;\r\n\r\n        this.labelShape.text = this.format(this.props.shortestSegment.length);\r\n\r\n        let fontSize = 14.; // / (stage.zoomFactor * stage.resolution);\r\n        this.labelShape.font = `${fontSize}px Arial`;\r\n\r\n        let unscale = 1. / (stage.zoomFactor * stage.resolution);\r\n        // let tx = stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n        // let ty = -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n        let tx = point.x + dx;\r\n        let ty = point.y + dy;\r\n        this.labelShape.setTransform(tx, ty, unscale, -unscale);\r\n    }\r\n\r\n    draw() {\r\n        if (this.props.shortestSegment) {\r\n            this.segment.graphics = graphics(this.props.shortestSegment);\r\n            this.redrawLabel();\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.draw();\r\n    }\r\n    componentDidUpdate() {\r\n        this.segment.graphics.clear();\r\n        if (this.props.firstMeasuredShape && this.props.secondMeasuredShape &&\r\n            this.props.firstMeasuredLayer.displayed &&\r\n            this.props.secondMeasuredLayer.displayed) {\r\n\r\n            this.draw();\r\n            this.redrawLabel();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.stage.removeChild(this.segment);\r\n        this.segment.graphics.clear();\r\n        this.props.stage.removeChild(this.labelShape);\r\n        this.labelShape.text = \"\";\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default MeasureShapesTool;","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\nimport {format} from '../models/utils';\r\n\r\nconst DisplayCoordsTool = ({stage, coordX, coordY, divisor, decimals}) => {\r\n    let mainCanvas = stage.canvas;\r\n    let top = mainCanvas.offsetTop + 10;\r\n    let left = mainCanvas.width - 200; //  mainCanvas.offsetLeft + 10;\r\n    let x = stage.C2W_X(coordX);\r\n    let y = stage.C2W_Y(coordY);\r\n    return (\r\n        <div style={{position: 'absolute', top: top, left: left,\r\n            backgroundColor: 'white', opacity:0.8}}>\r\n            <h5 style={{margin: 0, padding: 3}}>\r\n                X: {format(x,divisor,decimals)} Y: {format(y,divisor,decimals)}\r\n            </h5>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DisplayCoordsTool;\r\n","import {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\n// A Modal component that is an abstraction around the portal API.\r\nclass Modal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Create a div that we'll render the modal into. Because each\r\n        // Modal component has its own element, we can render multiple\r\n        // modal components into the modal container.\r\n        this.el = document.createElement('div');\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Append the element into the DOM on mount. We'll render\r\n        // into the modal container element (see the HTML tab).\r\n        modalRoot.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // Remove the element from the DOM when we unmount\r\n        modalRoot.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        // Use a portal to render the children into the element\r\n        return ReactDOM.createPortal(\r\n            // Any valid React child: JSX, strings, arrays, etc.\r\n            this.props.children,\r\n            // A DOM element\r\n            this.el,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import {Component} from 'react';\r\nimport Modal from '../Modal';\r\nimport classes from './ModalPopup.module.css';\r\n\r\nclass ModalPopup extends Component {\r\n    offsetX;\r\n    offsetY;\r\n    dragX;\r\n    dragY;\r\n\r\n    onBackDropClicked = (ev) => {\r\n        if (ev.target.id === \"backDrop\") {\r\n            this.props.closePopup();\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (ev) => {\r\n        if (ev.code === \"Escape\") {\r\n            this.props.closePopup();\r\n        }\r\n    };\r\n\r\n    elementDrag = (ev) => {\r\n        ev = ev || window.event;\r\n        // calculate the new cursor position:\r\n        this.offsetX = this.dragX - ev.clientX;\r\n        this.offsetY = this.dragY - ev.clientY;\r\n        this.dragX = ev.clientX;\r\n        this.dragY = ev.clientY;\r\n        // set the element's new position:\r\n        let element = ev.target;\r\n        element.style.top = (element.offsetTop - this.offsetY) + \"px\";\r\n        element.style.left = (element.offsetLeft - this.offsetX) + \"px\";\r\n    };\r\n\r\n    closeDragElement = (ev) => {\r\n        /* stop moving when mouse button is released:*/\r\n        ev.target.onmouseup = null;\r\n        ev.target.onmousemove = null;\r\n    };\r\n\r\n    dragMouseDown = (ev) => {\r\n        ev = ev || window.event;\r\n        // get the mouse cursor position at startup:\r\n        this.dragX = ev.clientX;\r\n        this.dragY = ev.clientY;\r\n        ev.target.onmouseup = this.closeDragElement;\r\n        // call a function whenever the cursor moves:\r\n        ev.target.onmousemove = this.elementDrag;\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    render() {\r\n        return this.props.showPopup ? (\r\n            <Modal>\r\n                <div\r\n                    id=\"backDrop\"\r\n                    className={classes.BackDrop}\r\n                    onClick={this.onBackDropClicked}\r\n                >\r\n                    <div className={classes.ModalPopup}\r\n                         onMouseDown={this.dragMouseDown}\r\n                    >\r\n                        <header>{this.props.header}</header>\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default ModalPopup;\r\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nimport classes from './AboutPopup.module.css';\r\nimport ModalPopup from \"../UI/ModalPopup/ModalPopup\";\r\n\r\nconst AboutPopup = (props) => {\r\n    return (\r\n        <ModalPopup\r\n            showPopup={props.showAboutPopup}\r\n            closePopup={props.toggleAboutPopup}\r\n            header=\"Info\"\r\n        >\r\n            <div className={classes.AboutPopup}>\r\n                <h2>{props.title} v{props.version}</h2>\r\n\r\n                <label>{`Build date: `}</label>\r\n                <span>September 2021</span>\r\n                <br/>\r\n\r\n                <label>{`Github depository: `}</label>\r\n                <a href=\"https://github.com/alexbol99/debug-viewer1\" >\r\n                    https://github.com/alexbol99/debug-viewer1\r\n                </a>\r\n                <br/>\r\n\r\n                <label>{`3d party graphics library: `}</label>\r\n                <a href=\"https://github.com/CreateJS/EaselJS/tree/2.0\" >\r\n                    https://github.com/CreateJS/EaselJS/tree/2.0\r\n                </a>\r\n                <br/>\r\n\r\n            </div>\r\n        </ModalPopup>\r\n\r\n    )\r\n};\r\n\r\nexport default AboutPopup;\r\n","import {Point, Segment, Arc, Circle, Box, Polygon} from \"@flatten-js/core\";\r\nimport {CW, ORIENTATION} from \"@flatten-js/core\";\r\n\r\nimport XMLWriter from \"xml-writer\";\r\n\r\nfunction pointToXMLString(xw, shape) {\r\n    xw.startElement('point');\r\n        xw.writeAttribute('x', shape.geom.x);\r\n        xw.writeAttribute('y', shape.geom.y);\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction segmentToXMLString(xw, shape) {\r\n    xw.startElement('segment');\r\n        xw.writeAttribute('xs', shape.geom.ps.x);\r\n        xw.writeAttribute('ys', shape.geom.ps.y);\r\n        xw.writeAttribute('xe', shape.geom.pe.x);\r\n        xw.writeAttribute('ye', shape.geom.pe.y);\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction arcToXMLString(xw, shape) {\r\n    xw.startElement('arc');\r\n        xw.writeAttribute('xs', Math.round(shape.geom.start.x));\r\n        xw.writeAttribute('ys', Math.round(shape.geom.start.y));\r\n        xw.writeAttribute('xe', Math.round(shape.geom.end.x));\r\n        xw.writeAttribute('ye', Math.round(shape.geom.end.y));\r\n        xw.writeAttribute('xc', shape.geom.center.x);\r\n        xw.writeAttribute('yc', shape.geom.center.y);\r\n        xw.writeAttribute('cw', shape.geom.counterClockwise === CW ? \"yes\" : \"no\");\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction circleToXMLString(xw, shape) {\r\n    xw.startElement('circle');\r\n        xw.writeAttribute('xc', shape.geom.center.x);\r\n        xw.writeAttribute('yc', shape.geom.center.y);\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction boxToXMLString(xw, shape) {\r\n\r\n}\r\n\r\nfunction polygonToXMlString(xw, polygon) {\r\n    xw.startElement('profile');\r\n\r\n    for (let face of polygon.faces) {\r\n        if (face.orientation() === ORIENTATION.CW) {\r\n            xw.startElement('island');\r\n        }\r\n        else {\r\n            xw.startElement('hole');\r\n        }\r\n\r\n        xw.writeAttribute('n_edges', `${face.size}`);\r\n\r\n        for (let edge of face) {\r\n            xw.startElement('edge');\r\n            let shape = edge.shape;\r\n            if (shape instanceof Segment) {\r\n                xw.writeAttribute('type', 'segment');\r\n                xw.writeAttribute('xs', shape.ps.x);\r\n                xw.writeAttribute('ys', shape.ps.y);\r\n                xw.writeAttribute('xe', shape.pe.x);\r\n                xw.writeAttribute('ye', shape.pe.y);\r\n            } else if (edge.shape instanceof Arc) {\r\n                xw.writeAttribute('type', 'curve');\r\n                xw.writeAttribute('xs', Math.round(shape.start.x));\r\n                xw.writeAttribute('ys', Math.round(shape.start.y));\r\n                xw.writeAttribute('xe', Math.round(shape.end.x));\r\n                xw.writeAttribute('ye', Math.round(shape.end.y));\r\n                xw.writeAttribute('xc', shape.center.x);\r\n                xw.writeAttribute('yc', shape.center.y);\r\n                xw.writeAttribute('cw', shape.counterClockwise === CW ? \"yes\" : \"no\");\r\n            } else {\r\n                xw.writeAttribute('type', 'unknown');\r\n            }\r\n            xw.endElement();\r\n        }\r\n\r\n        xw.endElement();  // island or hole\r\n    }\r\n\r\n    xw.endElement();     // profile\r\n}\r\n\r\nexport function createXMLString(shapes) {\r\n    let xw = new XMLWriter(true);\r\n    xw.startDocument('1.0', 'UTF-8');\r\n\r\n    xw.startElement('shapes');\r\n    xw.startElement('title').text('test polygon in xml format').endElement();\r\n\r\n    for (let shape of shapes) {\r\n        if (shape.geom instanceof Point) {\r\n            pointToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Segment) {\r\n            segmentToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Arc) {\r\n            arcToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Circle) {\r\n            circleToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Box) {\r\n            boxToXMLString(xw, shape)\r\n        }\r\n        else if (shape.geom instanceof Polygon) {\r\n            polygonToXMlString(xw, shape.geom);\r\n        }\r\n    }\r\n\r\n    xw.endDocument();\r\n    return xw.toString();\r\n}\r\n\r\n","import {Component} from 'react';\r\nimport ModalPopup from \"../UI/ModalPopup/ModalPopup\";\r\nimport {createXMLString} from \"../../dataParsers/createXML\";\r\n\r\nimport classes from \"./DownloadPopup.module.css\";\r\n\r\nclass DownloadPopup extends Component {\r\n    render() {\r\n        let downloadData = this.props.showPopup ?\r\n            this.props.layers.map( layer => {\r\n            return layer.displayed ? {\r\n                filename: `${layer.name}.xml`,\r\n                xmlString: createXMLString(layer.shapes)\r\n            } : null\r\n        }) : [];\r\n        return this.props.showPopup && this.props.layers.length > 0 ? (\r\n            <ModalPopup\r\n                showPopup={this.props.showPopup}\r\n                closePopup={this.props.closePopup}\r\n                header=\"Download files\"\r\n            >\r\n                <div className={classes.DownloadPopup}>\r\n                    <h5>Click to the following links to start download</h5>\r\n                    <ul>\r\n\r\n                        {downloadData.map(data =>\r\n                            data === null ? null :\r\n                            <li key={data.filename}>\r\n                                <a href={'data:text/json;charset=utf-8,' + encodeURIComponent(data.xmlString)}\r\n                                   download={data.filename}>\r\n                                    {data.filename}\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n\r\n                    </ul>\r\n                </div>\r\n            </ModalPopup>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default DownloadPopup;\r\n","import {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst snackbarRoot = document.getElementById('snackbar-root');\r\n\r\nclass SnackbarRoot extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.el = document.createElement('div');\r\n    }\r\n\r\n    componentDidMount() {\r\n        snackbarRoot.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        snackbarRoot.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            // Any valid React child: JSX, strings, arrays, etc.\r\n            this.props.children,\r\n            // A DOM element\r\n            this.el,\r\n        );\r\n    }\r\n}\r\n\r\nexport default SnackbarRoot;","import {Component} from 'react';\r\nimport SnackbarRoot from '../SnackbarRoot';\r\nimport classes from './Snackbar.module.css';\r\n\r\nclass Snackbar extends Component {\r\n    state = {\r\n        display: true\r\n    };\r\n\r\n    animationEndHandler() {\r\n        this.setState({\r\n            display: false\r\n        });\r\n        this.props.onAnimationEnd();\r\n    }\r\n\r\n    render() {\r\n        return ( this.state.display ?\r\n            <SnackbarRoot>\r\n                <div className={classes.Snackbar} onAnimationEnd={this.props.onAnimationEnd}>\r\n                    <h3>{this.props.message}</h3>\r\n                </div>\r\n            </SnackbarRoot> : null\r\n        )\r\n    }\r\n}\r\n\r\nexport default Snackbar;","import { Job } from '../models/job';\r\nimport {Point, Segment, Arc, Polygon, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\n\r\nFlatten.Image = class Image {\r\n    constructor() {\r\n        this.uri = \"\";\r\n        /**\r\n         * Center in world coordinates\r\n         * @type {Flatten.Point}\r\n         */\r\n        this.center = new Flatten.Point();\r\n        /**\r\n         * Width in world units (inch/mm)\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * Height in world units (inch/mm)\r\n         */\r\n        this.height = 0;\r\n    }\r\n    get box() {\r\n        return new Flatten.Box(\r\n            this.center.x - this.width/2,\r\n            this.center.y - this.height/2,\r\n            this.center.x + this.height/2,\r\n            this.center.y + this.height/2\r\n        );\r\n\r\n    }\r\n};\r\n\r\nfunction parseEdges(edgesXML) {\r\n    let edges = [];\r\n\r\n    for (let edge of Array.from(edgesXML)) {\r\n        let type = edge.getAttribute('type');\r\n\r\n        if (type === \"segment\") {\r\n            let ps = new Point(parseInt(edge.getAttribute('xs'),10), parseInt(edge.getAttribute('ys'),10));\r\n            let pe = new Point(parseInt(edge.getAttribute('xe'),10), parseInt(edge.getAttribute('ye'),10));\r\n\r\n            edges.push(new Segment(ps, pe));\r\n        }\r\n\r\n        if (type === \"curve\") {\r\n            let ps = new Point(parseInt(edge.getAttribute('xs'),10), parseInt(edge.getAttribute('ys'),10));\r\n            let pe = new Point(parseInt(edge.getAttribute('xe'),10), parseInt(edge.getAttribute('ye'),10));\r\n            let pc = new Point(parseInt(edge.getAttribute('xc'),10), parseInt(edge.getAttribute('yc'),10));\r\n\r\n            let counterClockwise = edge.getAttribute('cw') === 'no' ? true : false;\r\n\r\n            let startAngle = vector(pc,ps).slope;\r\n            let endAngle = vector(pc, pe).slope;\r\n\r\n            if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n                endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n            }\r\n\r\n            let r = vector(pc, ps).length;\r\n\r\n            edges.push(new Arc(pc, r, startAngle, endAngle, counterClockwise));\r\n        }\r\n    }\r\n\r\n    return edges;\r\n}\r\n\r\nfunction parsePolygon(polygonsXML) {\r\n    let polygon = new Polygon();\r\n\r\n    // let nedges = parseInt(profile.getAttribute(\"n_edges\"), 10);\r\n\r\n    // Augment Flatten object with style\r\n    let color = polygonsXML.getAttribute(\"color\");\r\n    polygon.style = {\r\n        stroke: color || undefined,\r\n        fill: color || undefined,\r\n        alpha: 1.0\r\n    };\r\n\r\n    // Augment Flatten object with label\r\n    let label = polygonsXML.getAttribute(\"label\");\r\n    polygon.label = label;\r\n\r\n    // Add islands\r\n    let islands = polygonsXML.getElementsByTagName('island');\r\n    for (let island of Array.from(islands)) {\r\n        let edgesXML = island.getElementsByTagName('edge');\r\n        polygon.addFace(parseEdges(edgesXML));\r\n    }\r\n\r\n    // Add holes\r\n    let holes = polygonsXML.getElementsByTagName('hole');\r\n    for (let hole of Array.from(holes)) {\r\n        let edgesXML = hole.getElementsByTagName('edge');\r\n        polygon.addFace(parseEdges(edgesXML));\r\n    }\r\n\r\n    return polygon;\r\n}\r\n\r\nfunction parseSegment(segmentXML) {\r\n    let ps = new Point(parseInt(segmentXML.getAttribute('xs'),10), parseInt(segmentXML.getAttribute('ys'),10));\r\n    let pe = new Point(parseInt(segmentXML.getAttribute('xe'),10), parseInt(segmentXML.getAttribute('ye'),10));\r\n\r\n    let segment = new Segment(ps, pe);\r\n\r\n    // Augment Flatten object with label property\r\n    let label = segmentXML.getAttribute(\"label\");\r\n    segment.label = label;\r\n\r\n    return segment;\r\n}\r\n\r\nfunction parseCurve(curveXML) {\r\n    let ps = new Point(parseInt(curveXML.getAttribute('xs'),10), parseInt(curveXML.getAttribute('ys'),10));\r\n    let pe = new Point(parseInt(curveXML.getAttribute('xe'),10), parseInt(curveXML.getAttribute('ye'),10));\r\n    let pc = new Point(parseInt(curveXML.getAttribute('xc'),10), parseInt(curveXML.getAttribute('yc'),10));\r\n\r\n    let counterClockwise = curveXML.getAttribute('cw') === 'no' ? true : false;\r\n\r\n    let startAngle = vector(pc,ps).slope;\r\n    let endAngle = vector(pc, pe).slope;\r\n\r\n    if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n        endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n    }\r\n\r\n    let r = vector(pc, ps).length;\r\n\r\n    let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n    // Augment Flatten object with label property\r\n    let label = curveXML.getAttribute(\"label\");\r\n    arc.label = label;\r\n\r\n    return arc;\r\n}\r\n\r\nfunction parsePoint(pointXML) {\r\n    let point = new Point(parseInt(pointXML.getAttribute('x'),10), parseInt(pointXML.getAttribute('y'),10));\r\n\r\n    // Augment Flatten object with label property\r\n    let label = pointXML.getAttribute(\"label\");\r\n    point.label = label;\r\n\r\n    return point;\r\n}\r\n\r\nfunction parseImage(imageXML) {\r\n    let img = new Flatten.Image();\r\n    img.center = new Point(parseInt(imageXML.getAttribute('xc'),10), parseInt(imageXML.getAttribute('yc'),10));\r\n    img.width = parseInt(imageXML.getAttribute('width'),10);\r\n    img.height = parseInt(imageXML.getAttribute('height'),10);\r\n    img.uri = imageXML.getAttribute('uri');\r\n    return img;\r\n}\r\n\r\nexport function parseXML(filename, str) {\r\n    let job = new Job();\r\n\r\n    job.filename = filename;\r\n\r\n    let parser = new DOMParser();\r\n    let xmlDoc = parser.parseFromString(str, \"text/xml\");\r\n\r\n    // Parse document title\r\n    let titles = xmlDoc.getElementsByTagName('title');\r\n    if (titles && titles.length > 0) {\r\n        job.title = titles[0].firstChild.nodeValue;          // take the first title if more than one\r\n    }\r\n\r\n    // Parse profiles and add polygons to the job\r\n    let profilesXML = xmlDoc.getElementsByTagName('profile');\r\n    for (let profileXML of Array.from(profilesXML)) {\r\n        let polygon = parsePolygon(profileXML);\r\n        job.profiles.push(polygon);\r\n    }\r\n\r\n    // Parse materials and add polygons to the job\r\n    let materialXML = xmlDoc.getElementsByTagName('material');\r\n    for (let shapeXML of Array.from(materialXML)) {\r\n        let polygon = parsePolygon(shapeXML);\r\n        job.materials.push(polygon);\r\n    }\r\n\r\n    // Parse segments\r\n    let segmentsXML = xmlDoc.getElementsByTagName('segment');\r\n    for (let segmentXML of Array.from(segmentsXML)) {\r\n        let segment = parseSegment(segmentXML);\r\n        job.shapes.push(segment);\r\n    }\r\n\r\n    // Parse segments\r\n    let curvesXML = xmlDoc.getElementsByTagName('curve');\r\n    for (let curveXML of Array.from(curvesXML)) {\r\n        let curve = parseCurve(curveXML);\r\n        job.shapes.push(curve);\r\n    }\r\n\r\n    // Parse points\r\n    let pointsXML = xmlDoc.getElementsByTagName('point');\r\n    for (let pointXML of Array.from(pointsXML)) {\r\n        let point = parsePoint(pointXML);\r\n        job.shapes.push(point);\r\n    }\r\n\r\n    // Parse images\r\n    let imagesXML = xmlDoc.getElementsByTagName('picture');\r\n    for (let imageXML of Array.from(imagesXML)) {\r\n        let image = parseImage(imageXML);\r\n        job.shapes.push(image);\r\n    }\r\n\r\n    return job;\r\n}\r\n","import { Job } from '../models/job';\r\nimport {Point, Segment, Arc, Polygon, Utils, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\n\r\nconst inch2pixels = 10160000;\r\nconst mils2pixels = 10160;\r\nfunction InchToPixels(str) {\r\n    return Math.round(Number(str)*inch2pixels,0);\r\n}\r\nfunction MilsToPixels(str) {\r\n    return Math.round(Number(str)*mils2pixels,0);\r\n}\r\n\r\nfunction parsePolygon(lines, start) {\r\n    let shapes = [];\r\n    let i = start;\r\n    let line = lines[i];\r\n    let terms = line.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe;\r\n    let pc;\r\n    let end_of_face = false;\r\n    while(true) {\r\n        line = lines[i];\r\n        terms = line.split(' ');\r\n        switch (terms[0]) {\r\n            case 'OS':\r\n                pe = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n                shapes.push( new Segment(ps, pe));\r\n\r\n                ps = pe.clone();\r\n                break;\r\n            case 'OC':\r\n                pe = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n                pc = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n\r\n                let cwStr = terms[5];\r\n                let counterClockwise = cwStr === 'Y' ? Flatten.CW : Flatten.CCW; /* sic ! */\r\n\r\n                let startAngle = vector(pc,ps).slope;\r\n                let endAngle = vector(pc, pe).slope;\r\n                if (Utils.EQ(startAngle, endAngle)) {\r\n                    endAngle += 2*Math.PI;\r\n                    counterClockwise = true;\r\n                }\r\n                let r = vector(pc, ps).length;\r\n\r\n                shapes.push(new Arc(pc, r, startAngle, endAngle, counterClockwise));\r\n\r\n                ps = pe.clone();\r\n                break;\r\n            case 'OE':\r\n                end_of_face = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (end_of_face) {\r\n            break;\r\n        }\r\n\r\n        i++;\r\n    }\r\n    return shapes;\r\n}\r\n\r\nfunction parseLine(str, apertures) {\r\n    let terms = str.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n    let segment = new Segment(ps, pe);\r\n    let ap_key = Number(terms[5]);\r\n    let ap_value = apertures[ap_key];\r\n    segment.aperture = ap_value;     // augmentation\r\n    return segment;\r\n}\r\n\r\nfunction parseArc(str, apertures) {\r\n    let terms = str.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n    let pc = new Point( InchToPixels(terms[5]), InchToPixels(terms[6]) );\r\n\r\n    let cwStr = terms[10];\r\n    let counterClockwise = cwStr === 'Y' ? Flatten.CW : Flatten.CCW; /* sic ! */\r\n\r\n    let startAngle = vector(pc,ps).slope;\r\n    let endAngle = vector(pc, pe).slope;\r\n    if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(pc, ps).length;\r\n\r\n    let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n    let ap_key = Number(terms[7]);\r\n    let ap_value = apertures[ap_key];\r\n    arc.aperture = ap_value;     // augmentation\r\n\r\n    return arc;\r\n}\r\n\r\nexport function parseODB(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n    let polygon;\r\n\r\n    let apertures = [];\r\n\r\n    for (let i=0; i < arrayOfLines.length; i++) {\r\n        let line = arrayOfLines[i];\r\n        let terms = line.split(' ');\r\n\r\n        if (terms[0].substr(0,1) === '$') {\r\n            let ap_key = Number(terms[0].substr(1));\r\n            let ap_value = MilsToPixels(terms[1].substr(1));\r\n            apertures[ap_key] = ap_value;\r\n            continue;\r\n        }\r\n\r\n        switch (terms[0]) {\r\n            case 'S':                  // surface started\r\n                polygon = new Polygon();\r\n                let termArr = line.split(' ');\r\n                let polarity = termArr[1];      // consider later\r\n                polygon.polarity = polarity;\r\n                break;\r\n            case 'OB':                  // polygon started\r\n                let start = i;\r\n                let shapes = parsePolygon(arrayOfLines, start);\r\n                polygon.addFace(shapes);\r\n                i = start + shapes.length + 1;\r\n                break;\r\n            case 'SE':     // surface ended\r\n                job.shapes.push(polygon);\r\n                break;\r\n            case 'L':                  // line\r\n                let odbLine = parseLine(line, apertures);\r\n                job.shapes.push(odbLine);\r\n                break;\r\n            case 'A':                  // Arc\r\n                let odbArc = parseArc(line, apertures);\r\n                job.shapes.push(odbArc);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return job;\r\n}","import {Point,Box} from '@flatten-js/core';\r\n\r\nconst pgmResolution = 25.500025;\r\nconst microns2pixels = 400;\r\n// const inch2pixels = 10160;\r\n// const offsetX = 12.322830;\r\n// const offsetY = 8.326776;\r\nconst sizeX = 3.0303;\r\n\r\nfunction toPixels(str) {\r\n    let num = Number(str);\r\n    return Math.round(num*pgmResolution*microns2pixels,0);\r\n}\r\n\r\nexport function parseImage(file) {\r\n    let image = {};          // TODO: to be Flatten.Image\r\n\r\n    let terms = file.name.split('_');\r\n    let yStr = terms[0].substr(1);\r\n    let xStr = terms[1] ? terms[1].substr(1) : undefined;\r\n\r\n    let x = isNaN(xStr) ? 0 : toPixels(xStr) + 90000;\r\n    let y = isNaN(yStr) ? 0 : toPixels(yStr) - 40000;\r\n\r\n    image.center = new Point(x,y);\r\n    image.width = sizeX*microns2pixels*1000;    // 2 mm\r\n    image.box = new Box(\r\n        image.center.x - image.width/2,\r\n        image.center.y - image.width/2,\r\n        image.center.x + image.width/2,\r\n        image.center.y + image.width/2,\r\n    );\r\n\r\n    return image;\r\n}","import { Job } from '../models/job';\r\nimport {point} from '@flatten-js/core';\r\n\r\nconst micron2pixels = 400;\r\nfunction micronToPixels(str) {\r\n    return Math.round(Number(str)*micron2pixels,0);\r\n}\r\n\r\nexport function parseCSV(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n\r\n    for (let i = 0; i < arrayOfLines.length; i++) {\r\n        let line = arrayOfLines[i];\r\n        let terms = line.split(',');\r\n\r\n        let px = micronToPixels(terms[0]);\r\n        let py = micronToPixels(terms[1]);\r\n        let nx = Number(terms[2]);\r\n        let ny = Number(terms[3]);\r\n        let shape = point(px,py);\r\n        shape.nx = nx;\r\n        shape.ny = ny;\r\n        job.shapes.push(shape)\r\n    }\r\n\r\n    return job\r\n}","import { Job } from '../models/job';\r\nimport {Parser} from './parser';\r\n\r\nexport function parseTXT(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let parser = new Parser();\r\n\r\n    let shapesArray = parser.parse(str);\r\n\r\n    if (shapesArray.length > 0) {\r\n        for (let shape of shapesArray) {\r\n            job.shapes.push(shape)\r\n        }\r\n    }\r\n\r\n    return job\r\n}","import * as ActionTypes from \"../actionTypes\";\r\nimport * as appActions from \"../actions/appActions\";\r\nimport Layers from '../../models/layers';\r\nimport Model from \"../../models/model\";\r\nimport { parseXML } from '../../dataParsers/parserXML';\r\nimport { parseODB } from \"../../dataParsers/parserODB\";\r\nimport { parseImage } from \"../../dataParsers/parsePGM\";\r\nimport { parseCSV } from \"../../dataParsers/parseCSV\";\r\nimport { parseTXT } from \"../../dataParsers/parseTXT\";\r\nimport { parseJSON} from \"../../dataParsers/parseJSON\";\r\n\r\n// Closure to capture file information and parameters\r\nconst readAsText = (reader, file, stage, layers, dispatch, files) => {\r\n\r\n    let promise = new Promise( (resolve, reject) => {\r\n        reader.onload = (function(theFile, stage, layers, dispatch, files, resolve, reject) {\r\n            return (event) => {\r\n                let string = event.target.result;\r\n\r\n                let namesplitted = theFile.name.split('.');\r\n                let extension = namesplitted[namesplitted.length-1];\r\n                let job;\r\n                if (extension === 'xml') {\r\n                    job = parseXML(theFile.name, string);\r\n                }\r\n                else if (extension === 'csv') {\r\n                    job = parseCSV(theFile.name, string);\r\n                }\r\n                else if (extension === 'txt') {\r\n                    job = parseTXT(theFile.name, string);\r\n                }\r\n                else if (extension === 'json') {\r\n                    job = parseJSON(theFile.name, string);\r\n                }\r\n                else {\r\n                    job = parseODB(theFile.name, string);\r\n                }\r\n                let layer = Layers.newLayer(stage, layers);\r\n                if (theFile.name !== \"\") {\r\n                    layer.name = theFile.name;\r\n                }\r\n                layer.title = job.title;\r\n\r\n                for (let polygon of job.profiles) {\r\n                    if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n                        // let watch = undefined; //  parser.parseToWatchArray(string);\r\n                        // let shape = new Shape(polygon, stage, polygon.style, watch);\r\n                        let shape = new Model(polygon, undefined, polygon.label);\r\n\r\n                        layer.add(shape);\r\n                    }\r\n                }\r\n\r\n                for (let polygon of job.materials) {\r\n                    if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n                        // let watch = undefined; //  parser.parseToWatchArray(string);\r\n                        // let shape = new Shape(polygon, stage, polygon.style, watch);\r\n                        let shape = new Model(polygon, undefined, polygon.label);\r\n\r\n                        layer.add(shape);\r\n                    }\r\n                }\r\n\r\n                for (let shape of job.shapes) {\r\n                    let model = new Model(shape, undefined, shape.label);\r\n                    layer.add(model);\r\n                }\r\n\r\n                // layers.push(layer);\r\n\r\n                if (theFile === files[0]) {\r\n                    Layers.setAffected(layers, layer);\r\n                    layer.color = Layers.getNextColor(layers);\r\n                    layer.displayed = true;\r\n                    dispatch({\r\n                        type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                        stage: stage,\r\n                        shape: layer\r\n                    });\r\n                }\r\n                dispatch({\r\n                    type: ActionTypes.ADD_NEW_LAYER,\r\n                    layer: layer\r\n                });\r\n\r\n                dispatch({\r\n                    type: ActionTypes.ASYNC_OPERATION_ENDED\r\n                });\r\n\r\n                resolve(true);\r\n            }\r\n        })(file, stage, layers, dispatch, files, resolve, reject);\r\n\r\n        reader.readAsText(file);\r\n    });\r\n\r\n\r\n    dispatch({\r\n        type: ActionTypes.ASYNC_OPERATION_STARTED\r\n    });\r\n\r\n    return promise\r\n};\r\n\r\nconst readAsImage = (reader, file, stage, layers, dispatch, files) => {\r\n    let promise = new Promise( (resolve, reject) => {\r\n        reader.addEventListener(\"load\", function () {\r\n            // let image = {};          // TODO: to be Flatten.Image\r\n            // image.uri = this.result;\r\n            // image.center = new Flatten.Point(0,0);\r\n            // image.width = 2*400000;    // 2 micron\r\n            // image.box = new Flatten.Box(\r\n            //     image.center.x - image.width/2,\r\n            //     image.center.y - image.width/2,\r\n            //     image.center.x + image.width/2,\r\n            //     image.center.y + image.width/2,\r\n            // );\r\n\r\n            let image = parseImage(file);\r\n            image.uri = this.result;\r\n\r\n            let model = new Model(image);\r\n\r\n            let layer = Layers.newLayer(stage, layers);\r\n            if (file.name !== \"\") {\r\n                layer.name = file.name;\r\n            }\r\n\r\n            layer.add(model);\r\n\r\n            // layers.push(layer);\r\n\r\n            if (file === files[0]) {\r\n                Layers.setAffected(layers, layer);\r\n                layer.color = Layers.getNextColor(layers);\r\n                layer.displayed = true;\r\n                dispatch({\r\n                    type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                    stage: stage,\r\n                    shape: layer\r\n                });\r\n            }\r\n\r\n            dispatch({\r\n                type: ActionTypes.ADD_NEW_LAYER,\r\n                layer: layer\r\n            });\r\n\r\n            dispatch({\r\n                type: ActionTypes.ASYNC_OPERATION_ENDED\r\n            });\r\n\r\n            resolve(true);\r\n        }, false);\r\n\r\n        reader.readAsDataURL(file);\r\n    });\r\n\r\n    return promise;\r\n};\r\n\r\nconst readFile = (file, stage, layers, dispatch, files) => {\r\n    if (file.type !== \"\" &&\r\n        !(file.type.match('text.*') || file.type.match('application.*') ||\r\n            file.type.match('image.*')) ) return;   // validate type is text\r\n\r\n    let reader = new FileReader();\r\n\r\n    if (file.type.match('text.*') || file.type.match('application.*') || file.name.match('features*')) {\r\n        return readAsText(reader, file, stage, layers, dispatch, files);\r\n    }\r\n\r\n    else if (file.type.match('image.*')) {\r\n        return readAsImage(reader, file, stage, layers, dispatch, files);\r\n    }\r\n\r\n    return Promise.reject(\"not supported file\");\r\n};\r\n\r\nexport const readFiles = (files, stage, layers) => {\r\n    return (dispatch) => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n\r\n        // Load and parse files\r\n        // in MS Edge FilesList is not array. It is indexable but not iterable\r\n        // for (let i=0; i < action.files.length; i++) {\r\n        //     readFile(action.files[i], stage, layers, dispatch, action.files);\r\n        // }\r\n        let promises = [];\r\n        for (let file of Array.from(files)) {\r\n            let promise = readFile(file, stage, layers, dispatch, files);\r\n            promises.push(promise);\r\n        }\r\n\r\n        return Promise.all(promises)\r\n            .then( (values) => {\r\n                dispatch(filesUploadCompleted(values));\r\n            })\r\n\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const filesUploadCompleted = (values) => {\r\n    return {\r\n        type: ActionTypes.FILES_UPLOAD_COMPLETED,\r\n        uploadedFiles: values\r\n    }\r\n};\r\n\r\nexport const initUploadState = () => {\r\n    return {\r\n        type: ActionTypes.INITIALIZE_UPLOAD_STATE\r\n    }\r\n};\r\n\r\nexport default readFiles;\r\n\r\n","import {Component, createRef} from 'react';\r\nimport ModalPopup from \"../UI/ModalPopup/ModalPopup\";\r\nimport Snackbar from \"../UI/Snackbar/Snackbar\";\r\nimport { connect } from 'react-redux';\r\nimport classes from \"./UploadPopup.module.css\";\r\nimport * as actions from '../../store/actions/upload';\r\n\r\nclass UploadPopup extends Component {\r\n    inputElement = createRef();\r\n    clipboardWindowRef = createRef();\r\n\r\n    clipboardWindowWidth = 0;\r\n    clipboardWindowHeight = 0;\r\n\r\n    state = {\r\n        dragOver:false,\r\n        clipboardData: \"\"\r\n    };\r\n\r\n    openFilesButtonClicked = () => this.inputElement.current.click();\r\n\r\n    pasteHandler = (ev) => {\r\n        ev.stopPropagation();\r\n        this.props.onPaste(ev.clipboardData);\r\n        let item = ev.clipboardData.items[0];\r\n        item.getAsString( string =>\r\n            this.setState({\r\n                clipboardData: string\r\n            })\r\n        );\r\n    };\r\n\r\n    dropHandler = (ev) => {\r\n        // Prevent default behavior (Prevent file from being opened)\r\n        ev.preventDefault();\r\n\r\n        let files = [];\r\n\r\n        if (ev.dataTransfer.items) {\r\n            // Use DataTransferItemList interface to access the file(s)\r\n            for (let i = 0; i < ev.dataTransfer.items.length; i++) {\r\n                // If dropped items aren't files, reject them\r\n                if (ev.dataTransfer.items[i].kind === 'file') {\r\n                    let file = ev.dataTransfer.items[i].getAsFile();\r\n                    files.push(file);\r\n                }\r\n            }\r\n        } else {\r\n            // Use DataTransfer interface to access the file(s)\r\n            files = ev.dataTransfer.files;\r\n        }\r\n\r\n        this.props.readFiles(files, this.props.stage, this.props.layers);\r\n        // this.fileDropHandler(files);\r\n        this.setState({dragOver:false});\r\n    };\r\n\r\n    dragOverHandler = (ev) => {\r\n        // Prevent default behavior (Prevent file from being opened)\r\n        ev.preventDefault();\r\n        this.setState({dragOver:true})\r\n    };\r\n\r\n    dragLeaveHandler = (ev) => {\r\n        ev.preventDefault();\r\n        this.setState({dragOver:false})\r\n    };\r\n\r\n    filesSelectedHandler = (event) => {\r\n        if (!(File && FileReader && FileList)) return;\r\n        let files = event.target.files; // FileList object\r\n        this.props.readFiles(files, this.props.stage, this.props.layers);\r\n    };\r\n\r\n    closePopup = () => {\r\n        this.props.initUploadState();\r\n        this.props.closePopup();\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.uploadCompleted) {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.clipboardWindowWidth = this.clipboardWindowRef.current.clientWidth;\r\n        this.clipboardWindowHeight = this.clipboardWindowRef.current.clientHeight;\r\n    }\r\n\r\n    render() {\r\n        let pX = this.state.clipboardData === \"\" ? 30 : 0;\r\n        let pY = this.state.clipboardData === \"\" ? 60 : 0;\r\n        let snackbarMessage = \"\";\r\n\r\n        if (this.state.clipboardData !== \"\") snackbarMessage = \"Added 1 layer\";\r\n\r\n        if (this.props.uploadCompleted && this.props.uploadedFiles.length > 0) {\r\n            let newFilesNum = this.props.uploadedFiles.length;\r\n            if (newFilesNum === 1) snackbarMessage = \"File uploaded. Added 1 layer\";\r\n            if (newFilesNum > 1) snackbarMessage = `Files uploaded. Added ${newFilesNum} layers`;\r\n        }\r\n\r\n        return this.props.showPopup ? (\r\n            <ModalPopup\r\n                showPopup={this.props.showPopup}\r\n                closePopup={this.closePopup}\r\n                header=\"Upload files\"\r\n            >\r\n                <div className={classes.UploadPopup}>\r\n                    <div className={this.state.dragOver ?\r\n                        `${classes.UploadTarget} ${classes.UploadTargetDragOver}` :\r\n                        `${classes.UploadTarget} ${classes.UploadTargetDragLeave}`}\r\n                         style={{paddingLeft: pX, paddingRight: pX, paddingTop: pY, paddingBottom: pY}}\r\n                         onPaste={this.pasteHandler}\r\n                         onDrop={this.dropHandler}\r\n                         onDragOverCapture={this.dragOverHandler}\r\n                         onDragLeaveCapture={this.dragLeaveHandler}\r\n                         ref={this.clipboardWindowRef}\r\n                    >\r\n                        {\r\n                            this.state.clipboardData === \"\" ?\r\n                                <span>Paste from buffer / Drop files</span> :\r\n                                <p style={{width:this.clipboardWindowWidth, height:this.clipboardWindowHeight}}>\r\n                                    {this.state.clipboardData}\r\n                                </p>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <h2>or</h2>\r\n\r\n                    <button onClick={this.openFilesButtonClicked}>\r\n                        Open local files\r\n                    </button>\r\n\r\n                    <input style={{display: \"none\"}}\r\n                           type=\"file\" ref={this.inputElement} name=\"files[]\" multiple\r\n                           onChange={this.filesSelectedHandler}\r\n                    />\r\n\r\n                    { snackbarMessage !== \"\" ?\r\n                        <Snackbar\r\n                            onAnimationEnd = {this.props.initUploadState}\r\n                            message={snackbarMessage} /> : null\r\n                    }\r\n\r\n                </div>\r\n            </ModalPopup>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage,\r\n        uploadCompleted: state.upload.uploadCompleted,\r\n        uploadedFiles: state.upload.uploadedFiles\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        readFiles: (files, stage, layers) => dispatch(actions.readFiles(files, stage, layers)),\r\n        initUploadState: () => dispatch(actions.initUploadState())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadPopup);\r\n","import {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as cloudActions from '../../store/actions/cloudStorageActions';\r\n\r\nclass CloudDocument extends Component {\r\n    state={\r\n        done:false\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.stage && !this.state.done) {\r\n            this.props.fetchDocumentFromDatabase(this.props.stage, this.props.match.params.id);\r\n            this.setState({done:true});\r\n        }\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({app}) => {\r\n    return {\r\n        stage: app.stage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchDocumentFromDatabase: (stage, id) => dispatch(cloudActions.fetchDocumentFromDatabase(stage, id)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CloudDocument);\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ToolbarComponent from '../../components/MainComponent/ToolbarComponent/ToolbarComponent';\r\nimport CanvasComponent from '../../components/MainComponent/CanvasComponent/CanvasComponent';\r\nimport StatusComponent from '../../components/Layout/StatusComponent/StatusComponent';\r\n\r\nimport StageComponent from \"../../components/MainComponent/GraphicsComponent/stageComponent\";\r\nimport LayersComponent from '../../components/MainComponent/GraphicsComponent/layersComponent';\r\n\r\nimport * as actions from '../../store/actions/appActions';\r\nimport * as layerActions from \"../../store/actions/layersActions\";\r\nimport * as cloudActions from '../../store/actions/cloudStorageActions';\r\n\r\nimport Layers from '../../models/layers';\r\nimport MeasurePointsTool from '../../tools/measurePointsTool';\r\nimport MeasureShapesTool from \"../../tools/measureShapesTool\";\r\nimport DisplayCoordsTool from \"../../tools/displayCoordsTool\";\r\n\r\nimport AboutPopup from \"../../components/AboutPopup/AboutPopup\";\r\nimport DownloadPopup from \"../../components/DownloadPopup/DownloadPopup\";\r\nimport UploadPopup from '../../components/UploadPopup/UploadPopup';\r\nimport CloudDocument from '../../components/Constructions/CloudDocument';\r\n\r\nimport styles from './MainComponent.module.css';\r\n\r\nclass MainComponent extends Component {\r\n    setHomeView = () => {\r\n        let layer = Layers.getAffected(this.props.layers);\r\n        if (!layer) return;\r\n        this.props.setHomeView(this.props.stage, layer);\r\n        this.forceUpdate();       // ??? unclear why on Home button click not updated\r\n    };\r\n\r\n    onSaveDocumentButtonClicked = () => {\r\n        if (this.props.layers.length === 0) return;   // nothing to save\r\n        // this.props.stage.img.crossOrigin=\"anonymous\";\r\n        let dataURL = null;\r\n        try {\r\n            dataURL = this.props.stage.toDataURL();\r\n        }\r\n        catch(e) {\r\n            console.log(e)\r\n        }\r\n        let payload = {\r\n            name: this.props.document.name === \"\" ?\r\n                cloudActions.getNewName(this.props.documentsList) : this.props.document.name,\r\n            dataURL: dataURL,\r\n            lastUpdated: new Date().toLocaleDateString() + \" \" + new Date().toLocaleTimeString(),\r\n            // token: this.props.token,\r\n            userId: this.props.userId\r\n        };\r\n\r\n        if (this.props.document.id) {\r\n            this.props.updateDocumentInDatabase(this.props.document.id, payload, this.props.layers);\r\n        }\r\n        else {\r\n            this.props.addDocumentToDatabase(payload, this.props.layers, this.props.history);\r\n        }\r\n    };\r\n\r\n    clearCurrentDocument = () => {\r\n        this.props.clearCurrentDocument();\r\n        this.props.clearAllLayers();\r\n        this.props.history.push(\"/\");\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        // let ctrl = e.ctrlKey;\r\n        if (e.target.id !== \"mainCanvas\")\r\n            return;\r\n        switch (e.code) {\r\n            case \"KeyH\":\r\n                this.setHomeView();\r\n                break;\r\n\r\n            case \"KeyW\":\r\n                this.props.toggleWidthMode();     // toggle width On/Off in graphics model\r\n                break;\r\n\r\n            case \"KeyE\":\r\n                this.props.toggleDisplayVertices();  // toggle vertices On/Off\r\n                break;\r\n\r\n            case \"ArrowRight\":\r\n                break;\r\n\r\n            case \"ArrowLeft\":\r\n                break;\r\n            case \"ArrowUp\":\r\n                break;\r\n            case \"ArrowDown\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.onresize = this.props.resizeStage;\r\n        // Keyboard event\r\n        // var _keydown = _.throttle(this.keydown, 100);\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n        // var _keyup = _.throttle(this.keyup, 500);\r\n        document.addEventListener('keyup', this.handleKeyUp);\r\n\r\n        // if (this.props.document.id === undefined) {\r\n        //     this.props.history.push(\"/\");\r\n        // }\r\n        // if (this.props.document.id !== undefined) {\r\n        //     this.props.history.push(\"/documents/\" + this.props.document.id)\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        let displayCoordsTool = this.props.stage ? (\r\n            <DisplayCoordsTool\r\n                key=\"displayCoordinatedTool\"\r\n                stage={this.props.stage}\r\n                units={this.props.units}\r\n                divisor={this.props.divisor}\r\n                decimals={this.props.decimals}\r\n                coordX={this.props.mouse.x}\r\n                coordY={this.props.mouse.y}\r\n            />\r\n        ) : null;\r\n\r\n        let measurePointsTool = this.props.measurePointsActive ? <MeasurePointsTool /> : null;\r\n\r\n        let measuredLayersDisplayed = this.props.measureShapesTool.firstMeasuredShape &&\r\n            this.props.measureShapesTool.secondMeasuredShape &&\r\n            this.props.measureShapesTool.firstMeasuredLayer.displayed &&\r\n            this.props.measureShapesTool.secondMeasuredLayer.displayed;\r\n\r\n        let measureShapesTool = this.props.measureShapesTool.distance &&\r\n        this.props.measureShapesTool.shortestSegment && measuredLayersDisplayed ? (\r\n            <MeasureShapesTool\r\n                key=\"MeasureShapesTool\"\r\n                stage={this.props.stage}\r\n                firstMeasuredShape={this.props.measureShapesTool.firstMeasuredShape}\r\n                secondMeasuredShape={this.props.measureShapesTool.secondMeasuredShape}\r\n                firstMeasuredLayer={this.props.measureShapesTool.firstMeasuredLayer}\r\n                secondMeasuredLayer={this.props.measureShapesTool.secondMeasuredLayer}\r\n                distance={this.props.measureShapesTool.distance}\r\n                shortestSegment={this.props.measureShapesTool.shortestSegment}\r\n                divisor={this.props.divisor}\r\n                decimals={this.props.decimals}\r\n            />\r\n        ) : null;\r\n\r\n        return (\r\n            <main className={styles[\"Main-content\"]}>\r\n                <ToolbarComponent\r\n                    measurePointsActive={this.props.measurePointsActive}\r\n                    units={this.props.units}\r\n                    showSkeletonRecognitionButton={this.props.showSkeletonRecognitionButton}\r\n                    // onFileSelected={this.handleFileSelect}\r\n                    onHomeButtonPressed={this.setHomeView}\r\n                    onPanByDragPressed={this.props.togglePanByDrag}\r\n                    onMeasurePointsButtonPressed={this.props.toggleMeasureBetweenPoints}\r\n                    onMeasureBetweenShapesButtonPressed={this.props.toggleMeasureBetweenShapes}\r\n                    onToggleWidthModePressed={this.props.toggleWidthMode}\r\n                    onToggleVerticesPressed={this.props.toggleDisplayVertices}\r\n                    onToggleLabelsPressed={this.props.toggleDisplayLabels}\r\n                    onShowAboutPopupPressed={this.props.toggleAboutPopup}\r\n                    onSkeletonRecognitionButtonPressed={this.props.applySkeletonRecognition}\r\n                    onUnitClicked={this.props.toggleUnits}\r\n                    onSaveDocumentButtonClicked={this.onSaveDocumentButtonClicked}\r\n                    onClearAllButtonClicked={this.clearCurrentDocument}\r\n                    onLayerListButtonClicked={this.props.toggleLayerList}\r\n                    onShowDownloadPopupPressed={this.props.toggleDownloadPopup}\r\n                    onShowUploadPopupPressed={this.props.toggleUploadPopup}\r\n                />\r\n\r\n                <CanvasComponent />\r\n\r\n                {this.props.stage ? (\r\n                    <StageComponent\r\n                        stage={this.props.stage}\r\n                        onStageUnmounted={this.props.destroyStage}\r\n                    >\r\n                        <LayersComponent layers={this.props.layers}/>\r\n\r\n                        {displayCoordsTool}\r\n                        {measurePointsTool}\r\n                        {measureShapesTool}\r\n                    </StageComponent>) : null }\r\n\r\n                <StatusComponent />\r\n\r\n                { this.props.showAboutPopup ?\r\n                    <AboutPopup\r\n                        showAboutPopup={this.props.showAboutPopup}\r\n                        toggleAboutPopup={this.props.toggleAboutPopup}\r\n                        title={this.props.title}\r\n                        version={this.props.version}\r\n                        build={this.props.build}\r\n                    /> : null}\r\n\r\n\r\n                { this.props.showDownloadPopup ?\r\n                    <DownloadPopup\r\n                        showPopup={this.props.showDownloadPopup}\r\n                        closePopup={this.props.toggleDownloadPopup}\r\n                        title=\"Download document\"\r\n                        layers={this.props.layers}\r\n                    /> : null }\r\n\r\n                {this.props.showUploadPopup ?\r\n                    <UploadPopup\r\n                        showPopup={this.props.showUploadPopup}\r\n                        closePopup={this.props.toggleUploadPopup}\r\n                        title=\"Upload files\"\r\n                        onPaste={this.props.pasteDataFromBuffer}\r\n                    /> : null}\r\n\r\n                <Route path=\"/documents/:id\" component={CloudDocument}/>\r\n\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stage: state.app.stage,\r\n        title: state.app.title,\r\n        version: state.app.version,\r\n        build: state.app.build,\r\n        displayVertices: state.app.displayVertices,\r\n        displayLabels: state.app.displayLabels,\r\n        widthOn: state.app.widthOn,\r\n        zoomFactor: state.app.zoomFactor,\r\n        units: state.app.units,\r\n        showSkeletonRecognitionButton: state.app.showSkeletonRecognitionButton,\r\n        divisor: state.app.divisor,\r\n        decimals: state.app.decimals,\r\n        measurePointsActive: state.app.measurePointsActive,\r\n        showAboutPopup: state.app.showAboutPopup,\r\n        showDownloadPopup: state.app.showDownloadPopup,\r\n        showUploadPopup: state.app.showUploadPopup,\r\n        layers: state.layers,\r\n        mouse: state.mouse,\r\n        measureShapesTool: state.measureShapesTool,\r\n\r\n        document: state.cloudStorage.document,\r\n        documentsList: state.cloudStorage.documentsList,\r\n        // onManageCloudStorageButtonClicked: ownProps.onManageCloudStorageButtonClicked\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        resizeStage: () => dispatch(actions.resizeStage()),\r\n        destroyStage: () => dispatch(actions.destroyStage()),\r\n        setHomeView: (stage, shape) => dispatch(actions.setHomeView(stage, shape)),\r\n        toggleUnits: () => dispatch(actions.toggleUnits()),\r\n        toggleWidthMode: () => dispatch(actions.toggleWidthMode()),\r\n        toggleDisplayVertices: () => dispatch(actions.toggleDisplayVertices()),\r\n        toggleDisplayLabels: () => dispatch(actions.toggleDisplayLabels()),\r\n        toggleAboutPopup: () => dispatch(actions.toggleAboutPopup()),\r\n        toggleMeasureBetweenPoints: () => dispatch(actions.toggleMeasureBetweenPoints()),\r\n        toggleMeasureBetweenShapes: () => dispatch(actions.toggleMeasureBetweenShapes()),\r\n        togglePanByDrag: () => dispatch(actions.togglePanByDrag()),\r\n        toggleLayerList: () => dispatch(actions.toggleLayerList()),\r\n        toggleDownloadPopup: () => dispatch(actions.toggleDownloadPopup()),\r\n        toggleUploadPopup: () => dispatch(actions.toggleUploadPopup()),\r\n        applySkeletonRecognition: () => dispatch(actions.applySkeletonRecognition()),\r\n        pasteDataFromBuffer: (clipboardData) => dispatch(actions.pasteDataFromBuffer(clipboardData)),\r\n\r\n        clearAllLayers: () => dispatch(layerActions.deleteAllLayers()),\r\n\r\n        addDocumentToDatabase: (payload, layers, history) => dispatch(cloudActions.addDocumentToDatabase(payload, layers, history)),\r\n        updateDocumentInDatabase: (id, payload, layers) => dispatch(cloudActions.updateDocumentInDatabase(id, payload, layers)),\r\n        clearCurrentDocument: () => dispatch(cloudActions.clearCurrentDocument())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent);\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nimport styles from './LayerListToolbar.module.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\nconst LayerListToolbar = (props) => {\r\n    return (\r\n        <div className={styles[\"Layer-list-toolbar\"]}>\r\n            <button title=\"Add layer\" onClick={props.onAddLayerButtonClicked}>\r\n                <FontAwesome\r\n                    name='plus'\r\n                    size='2x'\r\n                    style={{color: \"grey\"}}\r\n                />\r\n            </button>\r\n            <button title=\"Edit selected layer's name and info\" onClick={props.onEditLayerButtonClicked}>\r\n                <FontAwesome\r\n                    name='pencil-alt'\r\n                    size='2x'\r\n                    style={{color: \"grey\"}}\r\n                />\r\n            </button>\r\n            <button title=\"Delete selected layer\" onClick={props.onDeleteLayerButtonClicked}>\r\n                <FontAwesome\r\n                    name='trash-alt'\r\n                    size='2x'\r\n                    style={{color: \"grey\"}}\r\n                />\r\n            </button>\r\n            <button title=\"Sort layer list\" onClick={props.onSortLayersButtonClicked}>\r\n                <FontAwesome\r\n                    name='sort-alpha-down'\r\n                    size='2x'\r\n                    style={{color: \"grey\"}}\r\n                />\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LayerListToolbar;\r\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nimport styles from './LayerEditForm.module.css';\r\n\r\nconst LayerEditForm = (props) => {\r\n    let onSubmitLayerEditForm = (ev) => {\r\n        if (!ev)\r\n            return false;\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n        let name = ev.currentTarget[0].value;\r\n        let title = ev.currentTarget[1].value;\r\n        let newLayer = Object.assign({}, props.layer, {\r\n            name: name,\r\n            title: title\r\n        });\r\n        props.onSubmitLayerEditForm(newLayer);\r\n        return false;\r\n    };\r\n\r\n    let setFocus = (ev) => {\r\n        ev.stopPropagation();\r\n        ev.target.focus();\r\n    };\r\n\r\n    let onCancelLayerEditForm = (ev) => {\r\n        props.onEscapeLayerEditForm();\r\n    };\r\n\r\n    let onMouseMoveHandler = (ev) => {\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    return (\r\n        <form className={styles[\"Layer-edit-form\"]}\r\n              id=\"layerEditForm\"\r\n              action=\"\"\r\n              onSubmit={onSubmitLayerEditForm}\r\n              onMouseMove={onMouseMoveHandler}\r\n        >\r\n            <article>\r\n            <label>Name:</label>\r\n            <input type=\"text\" id=\"layer-name\" name=\"layerName\" defaultValue={props.layer.name}\r\n                   onClick={setFocus}  />\r\n            </article>\r\n            <article>\r\n            <label>Description:</label>\r\n            <textarea id=\"layer-title\" name=\"layerTitle\" cols=\"70\" rows=\"3\" defaultValue={props.layer.title}\r\n                      onClick={setFocus}>\r\n            </textarea>\r\n            </article>\r\n            <input type=\"submit\" style={{display:\"none\"}}/>\r\n            <button onClick={onCancelLayerEditForm}>Cancel</button>\r\n            <button onClick={(ev) => onSubmitLayerEditForm(ev.target.parent)}>OK</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default LayerEditForm;\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport ModalPopup from \"../../UI/ModalPopup/ModalPopup\";\r\nimport LayerEditForm from \"../LayerEditForm/LayerEditForm\";\r\nimport styles from './LayerListElement.module.css';\r\n\r\nclass LayerListElement extends Component {\r\n    componentDidUpdate() {\r\n        if (document.activeElement.nodeName === \"CANVAS\")\r\n            return;\r\n        let elem = this.refs.layerName;\r\n        if (this.props.layer.affected) {\r\n            elem.focus();\r\n        }\r\n    }\r\n\r\n    rgba(hex, opacity) {\r\n        let r, g, b, percent;\r\n        if (hex) {\r\n            hex = hex.replace('#', '');\r\n            r = parseInt(hex.substring(0, 2), 16);\r\n            g = parseInt(hex.substring(2, 4), 16);\r\n            b = parseInt(hex.substring(4, 6), 16);\r\n            percent = opacity;\r\n        }\r\n        else {\r\n            r = 147;\r\n            g = 128;\r\n            b = 108;\r\n            percent = 0;\r\n        }\r\n        let result = `rgba(${r},${g},${b},${percent / 100})`;\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        // let style = this.props.layer.displayed ?\r\n        //     styleSheet.displayed : styleSheet.undisplayed;\r\n\r\n        let displayed = this.props.layer.displayed ? \"Layer-displayed\" : \"Layer-undisplayed\";\r\n        let color = displayed ? this.rgba(this.props.layer.color, 100) : this.rgba();\r\n        let bgcolor = displayed ? this.rgba(this.props.layer.color, 30) : this.rgba();\r\n        let alpha = this.props.layer.affected ? 1 : 0;\r\n        let layerNameOpacity = this.props.layer.shapes.length === 0 ? 0.6 : 1.0;\r\n        return [\r\n            <li key={1}\r\n                className={styles.Layer}\r\n                onClick={this.props.onLayerClicked}\r\n                onDoubleClick={this.props.onLayerDoubleClicked}>\r\n\r\n                <div className={styles.LayerSelectionBox}\r\n                     onClick={this.props.onAffectedBoxClicked}\r\n                >\r\n                    <h4 className={styles.LayerSelectionMark}\r\n                        style={{opacity: alpha, color: color}}>\r\n                        ✓\r\n                    </h4>\r\n                </div>\r\n\r\n                <div className={styles.LayerNameBox}\r\n                     style={{backgroundColor: bgcolor, opacity: layerNameOpacity}}>\r\n                    <h4 ref=\"layerName\"\r\n                        title={this.props.layer.title}\r\n                        tabIndex='1'\r\n                    >\r\n                        {this.props.layer.name}\r\n                    </h4>\r\n                </div>\r\n\r\n            </li>,\r\n\r\n            <ModalPopup\r\n                key={2}\r\n                showPopup={this.props.layer.edited}\r\n                closePopup={this.props.onEscapeLayerEditForm}\r\n                header=\"Layer properties\"\r\n            >\r\n                <LayerEditForm\r\n                    layer={this.props.layer}\r\n                    onSubmitLayerEditForm={this.props.onSubmitLayerEditForm}\r\n                    onEscapeLayerEditForm={this.props.onEscapeLayerEditForm}\r\n                />\r\n            </ModalPopup>\r\n        ]\r\n    }\r\n}\r\n\r\nexport default LayerListElement;\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport LayerListToolbar from \"../../components/LayersList/LayerListToolbar/LayerListToolbar\";\r\nimport LayerListElement from '../../components/LayersList/LayerListElement/LayerListElement';\r\nimport * as actions from '../../store/actions/layersActions';\r\nimport { connect } from 'react-redux';\r\nimport styles from './LayersList.module.css';\r\n\r\nclass LayersList extends Component {\r\n    height = 0;\r\n\r\n    handleKeyDown = (e) => {\r\n        // e.stopPropagation();\r\n        // e.preventDefault();\r\n\r\n        if (e.target.parentElement.parentElement &&\r\n            e.target.parentElement.parentElement.parentElement &&\r\n            e.target.parentElement.parentElement.parentElement.id &&\r\n            e.target.parentElement.parentElement.parentElement.id === \"layersList\") {\r\n\r\n\r\n            switch (e.code) {\r\n                case \"ArrowRight\":\r\n                case \"ArrowDown\":\r\n                    this.props.setAffectedNextLayer();\r\n                    break;\r\n                case \"ArrowLeft\":\r\n                case \"ArrowUp\":\r\n                    this.props.setAffectedPrevLayer();\r\n                    break;\r\n                /* tab does not work properly\r\n            case \"Tab\":\r\n                if (e.shiftKey) {\r\n                    this.dispatch({\r\n                        type: ActionTypes.LAYERS_LIST_ARROW_UP_PRESSED\r\n                    });\r\n                }\r\n                else {\r\n                    this.dispatch({\r\n                        type: ActionTypes.LAYERS_LIST_ARROW_DOWN_PRESSED\r\n                    });\r\n                }\r\n                break;\r\n                */\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    onLayerListClicked = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Keyboard event\r\n        // var _keydown = _.throttle(this.keydown, 100);\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n        // var _keyup = _.throttle(this.keyup, 500);\r\n        // document.addEventListener('keyup', this.handleKeyUp);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.height = this.refs.layersComponent.clientHeight;\r\n    }\r\n\r\n    render() {\r\n        const style = this.props.showLayerList ? styles[\"App-layers-displayed\"] : styles[\"App-layers\"];\r\n        return (\r\n            <div className={style}\r\n                 ref=\"layersComponent\"\r\n                 onClick={this.onLayerListClicked}\r\n            >\r\n                {/*<h5>Layers</h5>*/}\r\n                <LayerListToolbar\r\n                    onAddLayerButtonClicked={() => this.props.onAddLayerButtonClicked(this.props.stage)}\r\n                    onEditLayerButtonClicked={this.props.onEditLayerButtonClicked}\r\n                    onDeleteLayerButtonClicked={this.props.onDeleteLayerButtonClicked}\r\n                    onSortLayersButtonClicked={this.props.onSortLayersButtonClicked}\r\n                />\r\n                <ul id=\"layersList\"\r\n                    style={{maxHeight:0.82*(this.height-40)}}>\r\n                { this.props.layers.map((layer) =>\r\n                    <LayerListElement\r\n                        key={layer.name}\r\n                        layer={layer}\r\n                        onLayerClicked={() => this.props.onLayerClicked(layer)}\r\n                        onAffectedBoxClicked={(event) => this.props.onAffectedBoxClicked(event, layer)}\r\n                        onSubmitLayerEditForm={this.props.onSubmitLayerEditForm}\r\n                        onEscapeLayerEditForm={this.props.onEscapeLayerEditForm}\r\n                    />)\r\n                }\r\n                </ul>\r\n                {/*{addLayer}*/}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage,\r\n        showLayerList: state.app.showLayerList         // on mobile device\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddLayerButtonClicked: (stage) => dispatch(actions.addEmptyLayer(stage)),\r\n        onEditLayerButtonClicked: () => dispatch(actions.openAffectedLayerEditForm()),\r\n        onDeleteLayerButtonClicked: () => dispatch(actions.deleteAffectedLayer()),\r\n        onSortLayersButtonClicked: () => dispatch(actions.sortLayers()),\r\n        onLayerClicked: (layer) => dispatch(actions.toggleDisplayLayer(layer)),\r\n        onAffectedBoxClicked: (event, layer) => dispatch(actions.toggleAffectedLayer(event, layer)),\r\n        onSubmitLayerEditForm: (newLayer) => dispatch(actions.updateLayer(newLayer)),\r\n        onEscapeLayerEditForm: () => dispatch(actions.closeEditLayerForm()),\r\n        setAffectedNextLayer: () => dispatch(actions.setAffectedNextLayer()),\r\n        setAffectedPrevLayer: () => dispatch(actions.setAffectedPrevLayer())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LayersList);\r\n\r\n// export default LayersList;","/**\r\n * Created by alexanderbol on 06/05/2017.\r\n */\r\nimport styles from './AsideComponent.module.css';\r\n\r\nconst AsideComponent = () => {\r\n    return (\r\n        <aside className={styles[\"App-aside\"]}>\r\n            <h5>&nbsp;</h5>\r\n        </aside>\r\n    )\r\n};\r\n\r\nexport default AsideComponent;\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as ActionTypes from \"./store/actionTypes\";\r\nimport * as cloudActions from \"./store/actions/cloudStorageActions\";\r\nimport MainComponent from \"./containers/MainComponent/MainComponent\";\r\nimport LayersList from \"./containers/LayerList/LayersList\";\r\nimport AsideComponent from \"./components/Layout/AsideComponent/AsideComponent\";\r\n// import DocumentName from \"./components/MainComponent/DocumentName/DocumentName\";\r\n\r\nconst appBody = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            {/*<DocumentName name={props.document.name}*/}\r\n                          {/*username={props.username}*/}\r\n                          {/*updateDocumentName={props.updateDocumentName} />*/}\r\n            <div className=\"App-body\" onPaste={props.pasteDataFromBuffer}>\r\n                <MainComponent history={props.history}\r\n                               onManageCloudStorageButtonClicked={props.onManageCloudStorageButtonClicked}\r\n                />\r\n                <LayersList/>\r\n                <AsideComponent/>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({cloudStorage, auth}) => {\r\n    return {\r\n        document: cloudStorage.document,\r\n        username: auth.username\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        pasteDataFromBuffer: (event) => dispatch({\r\n            type: ActionTypes.DATA_FROM_BUFFER_PASTED,\r\n            data: event.clipboardData\r\n        }),\r\n        updateDocumentName: (name) => dispatch(cloudActions.updateDocumentName(name))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(appBody);\r\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nimport { withRouter } from 'react-router-dom';\r\nimport classes from './HeaderComponent.module.css';\r\n// import Logo from './Logo/Logo';\r\n// import Navigation from './Navigation/Navigation';\r\n\r\nconst HeaderComponent = (props) => {\r\n    const style = props.location.pathname === \"/documents\" ?\r\n        classes[\"App-header-documents-page\"] :\r\n        classes[\"App-header\"];\r\n    return (\r\n        <header className={style}>\r\n            <h2>Debug Viewer</h2>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default withRouter(HeaderComponent);\r\n\r\n/*\r\n<header className={style}>\r\n    <Logo />\r\n    <Navigation isAuthenticated={props.isAuthenticated} />\r\n    {props.isAuthenticated ? <span>Hello {props.username}</span> : null}\r\n    {props.location.pathname === \"/documents\" ? <hr/> : null}\r\n</header>\r\n*/","import {Component} from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport Layers from \"../../models/layers\";\r\n// import {parseODB} from \"../../dataParsers/parserODB\";\r\nimport {parseTXT} from \"../../dataParsers/parseTXT\";\r\nimport Model from \"../../models/model\";\r\nimport * as ActionTypes from \"../../store/actionTypes\";\r\nimport * as actions from '../../store/actions/appActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Demo extends Component {\r\n    state={\r\n        done:false\r\n    };\r\n    componentDidUpdate() {\r\n        if (this.props.stage && !this.state.done) {\r\n            let stage = this.props.stage;\r\n            let layers = this.props.layers;\r\n\r\n            // let url1 = \"https://gist.githubusercontent.com/alexbol99/e8ff96c445fc58da5d0f66ccf58d9282/raw/be4273f3b68b104e02f918495592d8308a066344/poly1.txt\";\r\n            // let url2 = \"https://gist.githubusercontent.com/alexbol99/b445045a8bbb41b4bde7724b5e474ddf/raw/705314f25757633c6a3d9199d5be101028ea0316/poly2.txt\";\r\n            // let url3 = \"https://gist.githubusercontent.com/alexbol99/715dc06c8295f90ef18385a0d8040d5c/raw/c95c46c0eae9069d004480ccd0ac80ca89e818f2/poly3.txt\";\r\n            // let url4 = \"https://gist.githubusercontent.com/alexbol99/1226284eb0c0ac3aa9c645d9f7849eb5/raw/a35baaadb8d9e5e0580d33cf4546bf0d05ad37dc/poly4.txt\";\r\n            let url234 = \"https://gist.githubusercontent.com/alexbol99/e570fe783be88b556f4ca4b332da73f7/raw/741c87a7ceccdeadd9fbbac05bdfda22ebe94927/poly234.txt\";\r\n\r\n            // axios(\"https://gist.githubusercontent.com/alexbol99/825fdf2dd508467cc852eb22aa36183d/raw/d10e853338afd8294eeb3ffdebe3bc380477a978/features\")\r\n\r\n            Promise.all([axios(url234)])\r\n                .then( (responses) => {\r\n                    for (let i=0; i < 1; i++) {\r\n                        let resp = responses[i];\r\n                        let layer = Layers.newLayer(stage, layers);\r\n                        layer.color = Layers.getNextColor(layers);\r\n                        layer.name = \"poly\";\r\n                        layer.title = \"\";\r\n                        layer.affected = false;\r\n                        layer.displayed = true;\r\n\r\n                        let job = parseTXT(layer.name, resp.data);\r\n\r\n                        for (let shape of job.shapes) {\r\n                            let model = new Model(shape, undefined, shape.label);\r\n                            layer.add(model);\r\n                        }\r\n\r\n                        this.props.panAndZoomToShape(stage, layer);\r\n                        this.props.addNewLayer(layer);\r\n                        this.props.asyncOperationEnded();\r\n                    }\r\n                })\r\n                .catch( error => {\r\n                    console.log(error);\r\n                    this.props.asyncOperationEnded();\r\n                });\r\n\r\n            this.setState({done:true});\r\n            this.props.asyncOperationStarted();\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        panAndZoomToShape: (stage, layer) => dispatch({\r\n            type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n            stage: stage,\r\n            shape: layer\r\n        }),\r\n        addNewLayer: (layer) => dispatch({\r\n            type: ActionTypes.ADD_NEW_LAYER,\r\n            layer: layer\r\n        }),\r\n        asyncOperationStarted: () => dispatch(actions.asyncOperationStarted()),\r\n        asyncOperationEnded: () => dispatch(actions.asyncOperationEnded())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Demo);\r\n","import {Component} from 'react';\r\nimport * as ActionTypes from \"../../store/actionTypes\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass SkeletonRecognition extends Component {\r\n    componentDidMount() {\r\n        this.props.applySkeletonRecognition();\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        applySkeletonRecognition: () => dispatch({type: ActionTypes.SKELETON_RECOGNITION_URI})\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SkeletonRecognition);\r\n","import Flatten from \"@flatten-js/core\";\r\nimport {Vector, Segment, Arc, Line, Box, Polygon} from \"@flatten-js/core\";\r\n// let Flatten = require('flatten-js');\r\n\r\n// let {Vector, Segment, Arc, Line, Box, Polygon} = Flatten;\r\n\r\nclass CollisionDistance {\r\n    static apply(polygon1, polygon2) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        for (let edge of [...polygon2.edges]) {\r\n            let distance = CollisionDistance.edge2polygon(edge, polygon1);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static edge2polygon(edge2, polygon1) {\r\n        let shapeBox = edge2.shape.box;\r\n        let box = new Box(\r\n            Number.NEGATIVE_INFINITY,\r\n            shapeBox.ymin,\r\n            Number.POSITIVE_INFINITY,\r\n            shapeBox.ymax\r\n        );\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        let resp_edges =  polygon1.edges.search(box);\r\n        for (let edge1 of resp_edges) {\r\n            let distance;\r\n            if (edge1.shape instanceof Segment && edge2.shape instanceof Segment) {\r\n                distance = CollisionDistance.segment2segment(edge1.shape, edge2.shape);\r\n            }\r\n            else if (edge1.shape instanceof Arc && edge2.shape instanceof Segment) {\r\n                distance = CollisionDistance.segment2arc(edge2.shape, edge1.shape);\r\n            }\r\n            else if (edge1.shape instanceof Segment && edge2.shape instanceof Arc) {\r\n                distance = CollisionDistance.segment2arc(edge1.shape, edge2.shape);\r\n            }\r\n            else if (edge1.shape instanceof Arc && edge2.shape instanceof Arc) {\r\n                distance = CollisionDistance.arc2arc(edge1.shape, edge2.shape);\r\n            }\r\n\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static point2shape(point, shape) {\r\n        let line = new Line(point, new Vector(0,1));\r\n        let intersections = line.intersect(shape);          // segment or arc\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        for (let ip of intersections) {\r\n            // eslint-disable-next-line\r\n            let [distance, shortest_segment] = point.distanceTo(ip);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static segment2segment(segment1, segment2) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        for (let point of segment1.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, segment2);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        for (let point of segment2.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, segment1);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static segment2arc(segment, arc) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        let v_s = new Vector(segment.start, segment.end);\r\n        v_s = v_s.normalize();\r\n\r\n        let v_n = [v_s.rotate90CCW().multiply(arc.r), v_s.rotate90CW().multiply(arc.r)];\r\n        let distance;\r\n\r\n        // Distance between tangent point and segment\r\n        for (let v of v_n) {\r\n            let tangent_point = arc.center.translate(v);  // tangent point in direction of the normal vector\r\n            if (tangent_point.on(arc)) {\r\n                distance = CollisionDistance.point2shape(tangent_point, segment);\r\n                if (distance < collision_distance) {\r\n                    collision_distance = distance;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let point of arc.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, segment);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        for (let point of segment.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, arc);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static arc2arc(arc1, arc2) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        let distance;\r\n\r\n        // test translation of arc2.center to arc1 enlarged by r2\r\n        let arc_enlarged = arc1.clone();\r\n        arc_enlarged.r += arc2.r;\r\n        distance = CollisionDistance.point2shape(arc2.center, arc_enlarged);\r\n        if (distance < collision_distance) {\r\n            // additional check that transformed arc actually touching\r\n            // eslint-disable-next-line\r\n            let [dist_tmp, shortest_segment_tmp] =\r\n                arc1.distanceTo( CollisionDistance.translateArc(arc2, new Vector(-distance,0)));\r\n            if (Flatten.Utils.EQ_0(dist_tmp)) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n\r\n        // test translation of arc2.center to arc1 reduced by r2\r\n        if (Flatten.Utils.GE(arc1.r, arc2.r)) {\r\n            let arc_reduced = arc1.clone();\r\n            arc_reduced.r -= arc2.r;\r\n            distance = CollisionDistance.point2shape(arc2.center, arc_reduced);\r\n            if (distance < collision_distance) {\r\n                // additional check that transformed arc actually touching\r\n                // eslint-disable-next-line\r\n                let [dist_tmp, shortest_segment_tmp] =\r\n                    arc1.distanceTo( CollisionDistance.translateArc(arc2, new Vector(-distance,0)));\r\n                if (Flatten.Utils.EQ_0(dist_tmp)) {\r\n                    collision_distance = distance;\r\n                }\r\n            }\r\n        }\r\n\r\n        // test translation of arc1.center to arc2 reduced by r1\r\n        if (Flatten.Utils.LT(arc1.r, arc2.r)) {\r\n            let arc_reduced = arc2.clone();\r\n            arc_reduced.r -= arc1.r;\r\n            distance = CollisionDistance.point2shape(arc1.center, arc_reduced);\r\n            if (distance < collision_distance) {\r\n                // additional check that transformed arc actually touching\r\n                // eslint-disable-next-line\r\n                let [dist_tmp, shortest_segment_tmp] =\r\n                    arc1.distanceTo( CollisionDistance.translateArc(arc2, new Vector(-distance,0)));\r\n                if (Flatten.Utils.EQ_0(dist_tmp)) {\r\n                    collision_distance = distance;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let point of arc1.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, arc2);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        for (let point of arc2.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, arc1);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static translateArc(arc, vec) {\r\n        let arc_tmp = arc.clone();\r\n        arc_tmp.pc = arc_tmp.pc.translate(vec);\r\n        return arc_tmp;\r\n    }\r\n\r\n    static translate(polygon, vec) {\r\n        let newPolygon = new Polygon();\r\n        for (let face of polygon.faces) {\r\n            let shapes = [];\r\n            for (let edge of face) {\r\n                if (edge.shape instanceof Segment) {\r\n                    shapes.push(\r\n                        new Segment(edge.shape.ps.translate(vec), edge.shape.pe.translate(vec))\r\n                    )\r\n                }\r\n                else if (edge.shape instanceof  Arc) {\r\n                    let arc_trans = edge.shape.clone();\r\n                    arc_trans.pc = edge.shape.pc.translate(vec);\r\n                    shapes.push(arc_trans);\r\n                }\r\n            }\r\n            newPolygon.addFace(shapes);\r\n        }\r\n        return newPolygon;\r\n    }\r\n\r\n};\r\n\r\nCollisionDistance.Flatten = Flatten;\r\n\r\nexport default CollisionDistance;\r\n","import {Component} from 'react';\r\nimport Flatten from '@flatten-js/core';\r\nimport CollisionDistance from \"../../models/collisionDistance\";\r\nimport axios from \"axios\";\r\nimport Layers from \"../../models/layers\";\r\n// import {Model} from \"../../models/model\";\r\nimport * as ActionTypes from \"../../store/actionTypes\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/appActions\";\r\n\r\nlet {vector} = Flatten;\r\n\r\nclass CollisionDemo extends Component {\r\n    state={\r\n        done:false,\r\n        data:[]\r\n    };\r\n    componentDidUpdate() {\r\n        if (this.props.stage && !this.state.done) {\r\n            let stage = this.props.stage;\r\n            let layers = this.props.layers;\r\n\r\n            let layer = Layers.newLayer(stage, layers);\r\n            layer.color = Layers.getNextColor(layers);\r\n            layer.name = \"collision_demo\";\r\n            layer.title = \"collision_demo\";\r\n            layer.affected = true;\r\n            layer.displayed = true;\r\n\r\n            axios(\"https://gist.githubusercontent.com/alexbol99/81893d40ec5eaa00d0336c35e069dd73/raw/b9328a4c6d7d6a44f375c68b4ec207690f40fd19/Block_53388_2parts_Cont.txt\")\r\n                .then( (resp) => {\r\n                    let parser = this.props.parser;\r\n                    let polygon1 = parser.parseToPolygon(resp.data);\r\n                    layer.add(polygon1);\r\n\r\n                    let vec = vector( 2*(polygon1.box.xmax - polygon1.box.xmin), 0 );\r\n                    let polygon2 = polygon1.translate(vec);\r\n                    layer.add(polygon2);\r\n\r\n                    let collision = CollisionDistance.apply(polygon2, polygon1);\r\n                    let polygon3 = polygon2.translate(vector(-collision, 0));\r\n                    layer.add(polygon3);\r\n\r\n                    // layers.push(layer);\r\n\r\n                    this.props.panAndZoomToShape(stage, layer);\r\n                    this.props.addNewLayer(layer);\r\n                    this.props.applyCollisionDemo();\r\n                    this.props.asyncOperationEnded();\r\n                });\r\n            this.setState({done:true});\r\n            this.props.asyncOperationStarted();\r\n        }\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage,\r\n        parser: state.app.parser\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        panAndZoomToShape: (stage, layer) => dispatch({\r\n            type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n            stage: stage,\r\n            shape: layer\r\n        }),\r\n        addNewLayer: (layer) => dispatch({\r\n            type: ActionTypes.ADD_NEW_LAYER,\r\n            layer: layer\r\n        }),\r\n        applyCollisionDemo: () => dispatch({\r\n            type: ActionTypes.COLLISION_DEMO_URI\r\n        }),\r\n        asyncOperationStarted: () => dispatch(actions.asyncOperationStarted()),\r\n        asyncOperationEnded: () => dispatch(actions.asyncOperationEnded())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CollisionDemo);\r\n","import Modal from '../Modal';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <Modal>\r\n            <div className={classes.BackDrop} >\r\n                <div className={classes.Loader}>Loading ...</div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default spinner;","import * as actionTypes from '../actionTypes';\r\nimport axios from 'axios';\r\n\r\nconst apiKey = \"AIzaSyDMUAcjgolAlapdpFmPEz8SaId1DZw7MpQ\";\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_STARTED\r\n    }\r\n};\r\n\r\nexport const authSucceed = (token, userId, username=null) => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_SUCCEED,\r\n        token,\r\n        userId,\r\n        username\r\n    }\r\n};\r\n\r\nexport const authFailed = (error) => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_FAILED,\r\n        error\r\n    }\r\n};\r\n\r\nexport const authSetUsername = (username) => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_SET_USERNAME,\r\n        username\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_LOGOUT\r\n    }\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            const email = localStorage.getItem('email');\r\n            const password = localStorage.getItem('password');\r\n            if (email && password) {\r\n                dispatch(logIn(email, password))\r\n            }\r\n            else {\r\n                dispatch(logout())\r\n            }\r\n        }, expirationTime * 1000)\r\n    }\r\n};\r\n\r\nexport const logIn = (email, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        };\r\n        localStorage.setItem('email', email);\r\n        localStorage.setItem('password', password);\r\n        const url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=\" + apiKey;\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n\r\n                dispatch(authSucceed(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n                const queryParams = '?auth=' + response.data.idToken + '&orderBy=\"userId\"&equalTo=\"' + response.data.localId + '\"';\r\n                return axios.get(\"https://debug-viewer.firebaseio.com/users.json\" + queryParams);\r\n            })\r\n            .then(response => {\r\n                if (Object.values(response.data.length > 0)) {\r\n                    const username = Object.values(response.data)[0].username;\r\n                    localStorage.setItem('username', username);\r\n                    dispatch(authSetUsername(Object.values(response.data)[0].username))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(authFailed(error.response.data.error))\r\n            })\r\n    }\r\n};\r\n\r\nexport const signUp = (username, email, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        };\r\n        const url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=\" + apiKey;\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                localStorage.setItem('username', username);\r\n\r\n                dispatch(authSucceed(response.data.idToken, response.data.localId, username));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n\r\n                const user = {\r\n                    userId: response.data.localId,\r\n                    username: username\r\n                };\r\n                return axios.post(\"https://debug-viewer.firebaseio.com/users.json\", user);\r\n            })\r\n            .then(response => {\r\n                // do nothing\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response.data.error);\r\n                dispatch(authFailed(error.response.data.error))\r\n            })\r\n    }\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        }\r\n        else {\r\n            const userId = localStorage.getItem('userId');\r\n            const username = localStorage.getItem('username');\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate > new Date()) {\r\n                const timeLeft = expirationDate.getTime() - new Date().getTime()\r\n                dispatch(authSucceed(token, userId, username));\r\n                dispatch(checkAuthTimeout(timeLeft / 1000));\r\n            }\r\n            else {\r\n                dispatch(logout());\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n","import {Component} from 'react';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\n\r\nimport AppBody from './AppBody';\r\nimport HeaderComponent from './components/Layout/HeaderComponent/HeaderComponent';\r\n// import Signup from './containers/Auth/SignUp/Signup';\r\n// import Login from './containers/Auth/Login/Login';\r\n// import Logout from './containers/Auth/Logout';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './App.css';\r\n\r\n// import CloudDocument from './components/Constructions/CloudDocument';\r\nimport Demo from './components/Constructions/Demo';\r\n// import BooleanTest from './components/Constructions/BooleanTest';\r\nimport SkeletonRecognition from './components/Constructions/SkeletonRecognition';\r\nimport CollisionDemo from \"./components/Constructions/CollisionDemo\";\r\nimport Spinner from \"./components/UI/Spinner/Spinner\";\r\n// import DocumentsComponent from \"./containers/DocumentsComponent/DocumentsComponent\";\r\nimport * as authActions from \"./store/actions/auth\";\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.authCheckState();\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.location.pathname === '/' && this.props.document.id !== undefined) {\r\n            this.props.history.push(\"/documents/\" + this.props.document.id)\r\n        }\r\n\r\n        // if (this.props.location.pathname.split('/').length > 2 &&\r\n        //     this.props.location.pathname.split('/')[2].length > 0 &&\r\n        //     this.props.document.id === undefined) {\r\n        //     this.props.history.push(\"/\");\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <HeaderComponent\r\n                    title={this.props.title}\r\n                    version={this.props.version}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                    username={this.props.username}\r\n                />\r\n\r\n                <AppBody/>\r\n\r\n                <Switch>\r\n                    {/*<Route path=\"/documents\" exact component={DocumentsComponent}/>*/}\r\n                    {/*<Route path=\"/signup\" component={Signup} />*/}\r\n                    {/*<Route path=\"/login\" component={Login} />*/}\r\n                    {/*<Route path=\"/logout\" component={Logout} />*/}\r\n\r\n                    <Route path=\"/demo\" exact component={Demo}/>\r\n                    {/*<Route path=\"/\" component={AppBody}/>*/}\r\n\r\n                    {/*<Route path=\"/documents/:id\" component={CloudDocument}/>*/}\r\n\r\n\r\n                    <Route path=\"/skeleton\" component={SkeletonRecognition}/>\r\n                    <Route path=\"/collision-distance\" component={CollisionDemo}/>\r\n\r\n                </Switch>\r\n\r\n                {this.props.showSpinner ? <Spinner/> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({auth, app, cloudStorage}) => {\r\n    return {\r\n        title: app.title,\r\n        version: app.version,\r\n        showSpinner: app.showSpinner,\r\n        document: cloudStorage.document,\r\n        isAuthenticated: auth.token !== null,\r\n        username: auth.username\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authCheckState: () => dispatch(authActions.authCheckState())\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n\r\n/*\r\n                    <Route path=\"/boolean-test\" component={BooleanTest}/>\r\n */","import ReactDOM from 'react-dom';\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport reducer from './store/reducer';\r\nimport log from './middleware/log';\r\n// import readFiles from './middleware/readFiles';\r\nimport pasteData from './middleware/pasteData';\r\nimport stageController from './middleware/stageController';\r\nimport skeleton_recognition from './middleware/skeleton_recognition';\r\nimport App from \"./App\";\r\n\r\nimport './index.css';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer,\r\n    composeEnhancers(\r\n        applyMiddleware(log, pasteData, skeleton_recognition, stageController, thunk)\r\n    )\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1fd6w\",\"IconTrigger\":\"Button_IconTrigger__1YVqB\",\"IconModeActive\":\"Button_IconModeActive__15bb6\",\"IconModeNotActive\":\"Button_IconModeNotActive__2jc-j\",\"DrawerButton\":\"Button_DrawerButton__3e-ya\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UploadPopup\":\"UploadPopup_UploadPopup__3NN86\",\"fadeIn\":\"UploadPopup_fadeIn__1bvlt\",\"UploadTarget\":\"UploadPopup_UploadTarget__2n3zH\",\"UploadTargetDragLeave\":\"UploadPopup_UploadTargetDragLeave__9_UtP\",\"UploadTargetDragOver\":\"UploadPopup_UploadTargetDragOver__1G5lm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer\":\"LayerListElement_Layer__3uB4w\",\"LayerSelectionBox\":\"LayerListElement_LayerSelectionBox__LJsL5\",\"LayerSelectionMark\":\"LayerListElement_LayerSelectionMark__1bncI\",\"LayerNameBox\":\"LayerListElement_LayerNameBox__3rWlq\",\"Layer-displayed\":\"LayerListElement_Layer-displayed__3pM6C\",\"Layer-undisplayed\":\"LayerListElement_Layer-undisplayed__2tQ-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonSeparator\":\"ButtonSeparator_ButtonSeparator__3-XVi\",\"IconSeparator\":\"ButtonSeparator_IconSeparator__4p5F4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-toolbar\":\"ToolbarComponent_App-toolbar__2CUOP\",\"App-toolbar-units\":\"ToolbarComponent_App-toolbar-units__1OW6t\",\"DrawerButton\":\"ToolbarComponent_DrawerButton__3zJL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"ModalPopup_BackDrop__2Rsnt\",\"ModalPopup\":\"ModalPopup_ModalPopup__3FWyH\",\"fadeIn\":\"ModalPopup_fadeIn__2rgNo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-layers\":\"LayersList_App-layers__3WWBl\",\"App-layers-displayed\":\"LayersList_App-layers-displayed__3QHub\",\"fadeIn\":\"LayersList_fadeIn__1DCGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-header\":\"HeaderComponent_App-header__2nLSy\",\"App-header-documents-page\":\"HeaderComponent_App-header-documents-page__1321S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"Spinner_BackDrop__j0Bhc\",\"Loader\":\"Spinner_Loader__2drNv\",\"load2\":\"Spinner_load2__7xqSG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-canvas\":\"CanvasComponent_App-canvas__2QLQ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-status-bar\":\"StatusComponent_App-status-bar__3JSna\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LabelsLayer\":\"labelsLayer_LabelsLayer__3kpEF\",\"LabelComponent\":\"labelsLayer_LabelComponent__1-iQa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VertexLabel\":\"VertexLabel_VertexLabel__1vMyK\",\"fadeIn\":\"VertexLabel_fadeIn__3FPfD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutPopup\":\"AboutPopup_AboutPopup__190Fp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DownloadPopup\":\"DownloadPopup_DownloadPopup__2CO2_\",\"fadeIn\":\"DownloadPopup_fadeIn__1XE8b\",\"Open\":\"DownloadPopup_Open__XFl6Y\",\"Close\":\"DownloadPopup_Close__1He2a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Snackbar\":\"Snackbar_Snackbar__1jZD9\",\"fadeInOut\":\"Snackbar_fadeInOut__1-Ayc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main-content\":\"MainComponent_Main-content__1r62J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer-list-toolbar\":\"LayerListToolbar_Layer-list-toolbar__3-iCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer-edit-form\":\"LayerEditForm_Layer-edit-form__2QVCM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-aside\":\"AsideComponent_App-aside__n9B_T\"};"],"sourceRoot":""}