{"version":3,"sources":["components/UI/Button/Button.module.css","components/UI/ButtonSeparator/ButtonSeparator.module.css","components/MainComponent/ToolbarComponent/ToolbarComponent.module.css","components/MainComponent/CanvasComponent/CanvasComponent.module.css","components/Layout/StatusComponent/StatusComponent.module.css","components/MainComponent/GraphicsComponent/LabelsLayerComponent/labelsLayer.module.css","components/AboutPopup/AboutPopup.module.css","components/UI/ModalPopup/ModalPopup.module.css","containers/MainComponent/MainComponent.module.css","components/LayersList/LayerListToolbar/LayerListToolbar.module.css","components/LayersList/LayerEditForm/LayerEditForm.module.css","components/LayersList/LayerListElement/LayerListElement.module.css","containers/LayerList/LayersList.module.css","components/Layout/AsideComponent/AsideComponent.module.css","components/Layout/HeaderComponent/HeaderComponent.module.css","components/UI/Spinner/Spinner.module.css","store/reducers/auth.js","store/actionTypes.js","models/createArcs.js","models/polygonOffset.js","dataParsers/parser.js","store/reducers/app.js","models/model.js","models/layer.js","models/layers.js","store/reducers/layers.js","store/reducers/mouse.js","store/reducers/measureShapesTool.js","store/reducers/cloudStorage.js","store/reducer.js","axios-database.js","store/actions/appActions.js","store/actions/layersActions.js","dataParsers/parseJSON.js","store/actions/cloudStorageActions.js","components/UI/Button/Button.js","components/UI/ButtonSeparator/ButtonSeparator.js","components/MainComponent/ToolbarComponent/ToolbarComponent.js","models/stage.js","store/actions/stageActions.js","components/MainComponent/CanvasComponent/CanvasComponent.js","components/Layout/StatusComponent/StatusComponent.js","components/MainComponent/GraphicsComponent/stageComponent.js","models/graphics.js","models/utils.js","components/MainComponent/GraphicsComponent/graphics/shapeComponent.js","components/MainComponent/GraphicsComponent/graphics/imageComponent.js","components/MainComponent/GraphicsComponent/layerComponent.js","components/MainComponent/GraphicsComponent/domelements/labelComponent.js","components/MainComponent/GraphicsComponent/LabelsLayerComponent/labelsLayerComponent.js","components/MainComponent/GraphicsComponent/layersComponent.js","tools/measurePointsTool.js","tools/measureShapesTool.js","tools/displayCoordsTool.js","components/UI/Modal.js","components/UI/ModalPopup/ModalPopup.js","components/AboutPopup/AboutPopup.js","components/Constructions/CloudDocument.js","containers/MainComponent/MainComponent.js","components/LayersList/LayerListToolbar/LayerListToolbar.js","components/LayersList/LayerEditForm/LayerEditForm.js","components/LayersList/LayerListElement/LayerListElement.js","containers/LayerList/LayersList.js","components/Layout/AsideComponent/AsideComponent.js","AppBody.js","components/Layout/HeaderComponent/HeaderComponent.js","models/job.js","dataParsers/parserODB.js","components/Constructions/Demo.js","components/Constructions/SkeletonRecognition.js","models/collisionDistance.js","components/Constructions/CollisionDemo.js","components/UI/Spinner/Spinner.js","store/actions/auth.js","App.js","middleware/log.js","dataParsers/parserXML.js","dataParsers/parsePGM.js","dataParsers/parseCSV.js","middleware/readFiles.js","dataParsers/parseTXT.js","middleware/pasteData.js","middleware/stageController.js","middleware/skeleton_recognition.js","Preloader.js"],"names":["module","exports","Button","IconTrigger","IconModeActive","IconModeNotActive","DrawerButton","ButtonSeparator","IconSeparator","App-toolbar","App-toolbar-units","App-canvas","App-status-bar","LabelsLayer","LabelComponent","AboutPopup","BackDrop","ModalPopup","fadeIn","Main-content","Layer-list-toolbar","Layer-edit-form","Layer","LayerSelectionBox","LayerSelectionMark","LayerNameBox","Layer-displayed","Layer-undisplayed","App-layers","App-layers-displayed","Open","Close","App-aside","App-header","App-header-documents-page","Loader","load2","initialState","token","userId","username","error","loading","auth","state","arguments","length","undefined","action","type","Object","objectSpread","arcSE","center","start","end","counterClockwise","startAngle","vector","slope","endAngle","Utils","EQ","Math","PI","r","Arc","offsetArc","arc","value","arc_cap1","arc_cap2","w","abs","polygon","Polygon","arc_outer","clone","sweep","arcStartSweep","arcEndSweep","arc_inner","pc","CW","CCW","Segment","addFace","toConsumableArray","faces","setArcLength","ips","Face","getSelfIntersections","edges","slice","edge_cap1","edge_cap2","int_points","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","next","done","pt","addToIntPoints","err","return","int_points_sorted","getSortedArray","splitByIntersections","bv","OUTSIDE","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","int_point","edge_before","edge_after","INSIDE","op","BOOLEAN_UNION","removeNotRelevantChains","num","prev","removeOldFaces","restoreFaces","orientation","ORIENTATION","reverse","offsetSegment","seg","v_seg_unit","x","y","normalize","v_left","rotate90CCW","multiply","v_right","rotate90CW","seg_left","translate","seg_right","cap1","cap2","Parser","classCallCheck","this","createClass","key","str","arrayOfLines","match","watchArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","line","push","substring","indexOf","pointArr","split","point","Point","parseInt","label","termArr","psArr","ps","peArr","pe","pcArr","Flatten","circle","Circle","pllArr","xmin","ymin","width","height","box","Box","segment","i","search","nedgesStr","nedges","j","parseToSegment","parseToArc","points","shape","shapes","parseToPoint","parseToCircle","parseToRectangle","parseToODBLine","parseToODBArc","parseToPolygon","size","parseToShapes","parseToPoints","unitsList","name","decimals","divisor","defaultAppState","title","version","process","build","units","parser","widthOn","displayVertices","displayLabels","measurePointsActive","zoomFactor","originX","originY","showAboutPopup","importDataToNewLayer","showSkeletonRecognitionButton","applySkeletonRecognition","stage","showSpinner","showLayerList","app","assign","resolution","origin","curUnitsId","findIndex","newUnits","defaultStyle","strokeStyle","stroke","fill","alpha","Model","geom","style","model","color","displayed","edited","affected","layer","newShape","add","JSON","stringify","merge","xmax","ymax","colors","Layers","layers","getNewName","defaultName","inc","comparator","find","lay","currentAffectedLayer","getAffected","_arr","_loop","col","_i","index","l","newLayers","filter","getNextColor","sort","l1","l2","name1","toUpperCase","name2","map","toJSON","newLayer","affectedLayer","affectedLayerId","concat","delete","setAffected","toggleDisplayed","setEdited","setNameAndTitle","nextLayer","newCurLayer","newNextLayer","defaultMouseState","startX","startY","touchPoints","mouse","x1","y1","x2","y2","defaultMeasureShapesTool","measureShapesActive","measureShapesFirstClick","hoveredShape","firstMeasuredShape","secondMeasuredShape","firstMeasuredLayer","secondMeasuredLayer","distance","shortestSegment","is_mobile","window","mobilecheck","measureShapesTool","shape1","shape2","_Flatten$Distance$dis","Distance","_Flatten$Distance$dis2","slicedToArray","documentDefaultState","id","owner","lastUpdated","cloudStorageDefaultState","document","documentsList","cloudStorage","_state$documentsList","newList","objectWithoutProperties","_toPropertyKey","stateDocumentsList","actionDocumentsList","keys","hasOwnProperty","isUpToDate","reducer","combineReducers","instance","axios","create","baseURL","setHomeView","addNewLayer","toggleDisplayLayer","parseJSON","models","parse","Array","faceArray","uri","Image","get","documents","values","button","props","iconStyle","classes","active","buttonStyle","mobileOnly","react_default","a","createElement","onClick","className","lib_default","iconName","buttonSeparator","ToolbarComponent","openJobButtonClicked","_this","refs","browseFiles","click","onLayerListButtonClicked","fontSize","marginTop","marginBottom","display","ref","multiple","onChange","onFileSelected","onClearAllButtonClicked","onHomeButtonPressed","onPanByDragPressed","onMeasurePointsButtonPressed","onMeasureBetweenShapesButtonPressed","onToggleWidthModePressed","onToggleVerticesPressed","onToggleLabelsPressed","onSkeletonRecognitionButtonPressed","onUnitClicked","onShowAboutPopupPressed","Component","Stage","canvas","possibleConstructorReturn","getPrototypeOf","call","Touch","enable","assertThisInitialized","mouseMoveOutside","enableMouseOver","clientWidth","clientHeight","oldOrigin","oldZoomFactor","pinchAnchorX","pinchAnchorY","pinchStarted","addChild","scalar","scalingFactor","canvasX","canvasY","worldX","worldY","W2C_X","W2C_Y","newOrigin","deltaX","deltaY","ratio","curRatio","min","max","focusX","focusY","bIn","C2W_X","C2W_Y","zoomIn","zoomOut","newFocusX","newFocusY","panBy","zoom","zoomByPinchStop","dx","dy","panByMouseStop","getContext","clearRect","minX","minY","maxX","maxY","CreatejsStage","handleMouseWheelMove","delta","CanvasComponent","canvasElement","React","createRef","handleMouseMove","event","focus","nativeEvent","touches","clientX","target","offsetLeft","clientY","offsetTop","handlePinchMove","stageX","stageY","handleMouseDown","handlePinchDown","handleMouseUp","stopPropagation","preventDefault","handlePinchUp","handleMouseLeave","blur","body","handleMouseWheel","detail","wheelDelta","offsetX","offsetY","handleMouseWheelFox","layerX","layerY","current","on","addEventListener","passive","registerStage","tabIndex","styles","connect","dispatch","actions","StatusComponent","StageComponent","setTransform","update","onStageUnmounted","Fragment","children","graphics","radius","Graphics","beginFill","command","drawCircle","graphics_point","ignoreScale","setStrokeStyle","beginStroke","moveTo","lineTo","endStroke","graphics_segment","graphics_arc","graphics_circle","drawRect","graphics_box","face","setGraphicsFace","graphics_polygon","setGraphicsEdge","edge","setGraphicsEdgeSegment","setGraphicsEdgeArc","first","is_equal","obj1","obj2","equal","ShapeComponent","_Component","params","handleMouseOver","onMouseOver","handleMouseOut","onMouseOut","handleClick","Shape","vertexShapes","vertices","vertex","vertexShape","mouseEnabled","inherits","isEmpty","hovered","selected","aperture","redrawVertices","redraw","nextProps","nextState","off","removeChild","clear","ImageComponent","_getPrototypeOf2","_len","args","_key","apply","bitmap","image","naturalWidth","naturalHeight","scaleX","scaleY","tx","ty","regX","regY","_this2","img","onload","Bitmap","onImageLoaded","setAttribute","src","loadImage","LayerComponent","imageComponent_ImageComponent","shapeComponent_ShapeComponent","labelComponent","_ref","left","top","position","labelsLayerComponent","trim","domelements_labelComponent","LayersComponent","layerComponent_LayerComponent","LabelsLayerComponent_labelsLayerComponent","MeasurePointsTool","measureCanvas","measureStage","endX","endY","measureStarted","setState","cursor","draw","context","textX","textY","textWidth","backX","backY","pllX","pllY","W2C_Scalar","beginPath","rect","lineWidth","text","measurement","font","measureText","textAlign","fillStyle","globalAlpha","fillRect","textHeight","fillText","dist","sqrt","format","toFixed","removeAllChildren","removeAllEventListeners","mainCanvas","MeasureShapesTool","labelShape","Text","unscale","redrawLabel","DisplayCoordsTool","coordX","coordY","margin","padding","modalRoot","getElementById","Modal","el","appendChild","ReactDOM","createPortal","onBackDropClicked","ev","closePopup","handleKeyDown","code","elementDrag","dragX","dragY","element","closeDragElement","onmouseup","onmousemove","dragMouseDown","removeEventListener","showPopup","UI_Modal","onMouseDown","UI_ModalPopup_ModalPopup","toggleAboutPopup","href","CloudDocument","fetchDocumentFromDatabase","firstLayer","docUrl","geomUrl","Promise","all","then","responses","data","layerData","layerActions","requestFetchDocumentFromDatabaseSucceed","appActions","catch","alert","message","cloudActions","MainComponent","handleFileSelect","File","FileReader","FileList","files","forceUpdate","onSaveDocumentButtonClicked","dataURL","toDataURL","e","console","log","payload","Date","toLocaleDateString","toLocaleTimeString","updateDocumentInDatabase","addDocumentToDatabase","history","clearCurrentDocument","clearAllLayers","toggleWidthMode","toggleDisplayVertices","onresize","resizeStage","handleKeyUp","displayCoordsTool","tools_displayCoordsTool","measurePointsTool","tools_measurePointsTool","measuredLayersDisplayed","tools_measureShapesTool","MainComponent_ToolbarComponent_ToolbarComponent","togglePanByDrag","toggleMeasureBetweenPoints","toggleMeasureBetweenShapes","toggleDisplayLabels","toggleUnits","toggleLayerList","MainComponent_CanvasComponent_CanvasComponent","stageComponent","destroyStage","layersComponent","handleMouseRollOverShape","handleMouseRollOutShape","handleClickOnShape","Layout_StatusComponent_StatusComponent","components_AboutPopup_AboutPopup","Route","path","component","ownProps","post","response","layersJSON","geomPayload","registerDocumentAddedToDatabase","now","put","url","geomId","reponse","LayerListToolbar","onAddLayerButtonClicked","onEditLayerButtonClicked","onDeleteLayerButtonClicked","onSortLayersButtonClicked","LayerEditForm","onSubmitLayerEditForm","form","parentElement","layerName","layerTitle","setFocus","onSubmit","defaultValue","cols","rows","onEscapeLayerEditForm","LayerListElement","activeElement","nodeName","elem","hex","opacity","g","b","percent","replace","rgba","bgcolor","layerNameOpacity","onLayerClicked","onDoubleClick","onLayerDoubleClicked","onAffectedBoxClicked","backgroundColor","LayersList_LayerEditForm_LayerEditForm","LayersList","setAffectedNextLayer","setAffectedPrevLayer","onLayerListClicked","LayersList_LayerListToolbar_LayerListToolbar","maxHeight","LayersList_LayerListElement_LayerListElement","AsideComponent","pasteDataFromBuffer","clipboardData","updateDocumentName","onPaste","containers_MainComponent_MainComponent","onManageCloudStorageButtonClicked","LayerList_LayersList","Layout_AsideComponent_AsideComponent","withRouter","location","pathname","Job","filename","profiles","materials","inch2pixels","mils2pixels","InchToPixels","round","Number","MilsToPixels","parsePolygon","lines","terms","end_of_face","parseLine","apertures","ap_value","parseArc","parseODB","job","substr","polarity","odbLine","odbArc","ap_key","Demo","resp","panAndZoomToShape","asyncOperationEnded","asyncOperationStarted","SkeletonRecognition","CollisionDistance","polygon1","polygon2","collision_distance","POSITIVE_INFINITY","edge2polygon","edge2","shapeBox","NEGATIVE_INFINITY","resp_edges","edge1","segment2segment","segment2arc","arc2arc","intersections","Line","Vector","intersect","ip","_point$distanceTo","distanceTo","_point$distanceTo2","segment1","segment2","point2shape","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","v_s","_arr2","_i2","v","tangent_point","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","arc1","arc2","arc_enlarged","_arc1$distanceTo","translateArc","_arc1$distanceTo2","dist_tmp","EQ_0","GE","arc_reduced","_arc1$distanceTo3","_arc1$distanceTo4","LT","_arc1$distanceTo5","_arc1$distanceTo6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","vec","arc_tmp","newPolygon","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","arc_trans","CollisionDemo","collision","polygon3","applyCollisionDemo","spinner","authSucceed","authFailed","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","email","getItem","password","logIn","authData","returnSecureToken","setItem","expirationDate","getTime","expiresIn","idToken","localId","queryParams","authSetUsername","App","authCheckState","Layout_HeaderComponent_HeaderComponent","isAuthenticated","Switch","AppBody","Spinner","timeLeft","getState","parseEdges","edgesXML","from","getAttribute","polygonsXML","islands","getElementsByTagName","holes","_arr3","_i3","parseSegment","segmentXML","parseCurve","curveXML","parsePoint","pointXML","parseImage","imageXML","pgmResolution","microns2pixels","sizeX","toPixels","micron2pixels","micronToPixels","readAsText","reader","file","theFile","string","result","namesplitted","extension","xmlDoc","DOMParser","parseFromString","titles","firstChild","nodeValue","profilesXML","_arr4","_i4","materialXML","_arr5","_i5","segmentsXML","_arr6","_i6","curvesXML","_arr7","_i7","curve","pointsXML","_arr8","_i8","imagesXML","_arr9","_i9","parseXML","px","py","nx","ny","parseCSV","shapesArray","parseTXT","readAsImage","yStr","xStr","isNaN","readAsDataURL","readFile","readFiles","pasteData","items","getAsString","stageController","resize","panByMouseStart","panByMouseMove","panToCoordinate","zoomToLimits","zoomByMouse","removeAllListeners","zoomByPinchStart","distStart","zoomByPinchMove","Algorithmia","skeleton_recognition","currentLayer","input","client","algo","pipe","output","row","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Preloader","es","BrowserRouter","basename","src_App_0"],"mappings":"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","file":"static/js/3.abc51199.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1wEe_\",\"IconTrigger\":\"Button_IconTrigger__2UBJg\",\"IconModeActive\":\"Button_IconModeActive__3BB17\",\"IconModeNotActive\":\"Button_IconModeNotActive__ekYF8\",\"DrawerButton\":\"Button_DrawerButton__3mmir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonSeparator\":\"ButtonSeparator_ButtonSeparator__1v1YA\",\"IconSeparator\":\"ButtonSeparator_IconSeparator__1F-6s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-toolbar\":\"ToolbarComponent_App-toolbar__384Ol\",\"App-toolbar-units\":\"ToolbarComponent_App-toolbar-units__2xvim\",\"DrawerButton\":\"ToolbarComponent_DrawerButton__2XrL2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-canvas\":\"CanvasComponent_App-canvas__1SRjy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-status-bar\":\"StatusComponent_App-status-bar__3yjbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LabelsLayer\":\"labelsLayer_LabelsLayer__13jtP\",\"LabelComponent\":\"labelsLayer_LabelComponent__1n-i4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutPopup\":\"AboutPopup_AboutPopup__3A-Ey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"ModalPopup_BackDrop__38gqK\",\"ModalPopup\":\"ModalPopup_ModalPopup__tiHI3\",\"fadeIn\":\"ModalPopup_fadeIn__1kcV2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main-content\":\"MainComponent_Main-content__1huDY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer-list-toolbar\":\"LayerListToolbar_Layer-list-toolbar__3h7SF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer-edit-form\":\"LayerEditForm_Layer-edit-form__3PKfb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer\":\"LayerListElement_Layer__TTm6c\",\"LayerSelectionBox\":\"LayerListElement_LayerSelectionBox__2y2BJ\",\"LayerSelectionMark\":\"LayerListElement_LayerSelectionMark__1YNk5\",\"LayerNameBox\":\"LayerListElement_LayerNameBox__rdxbt\",\"Layer-displayed\":\"LayerListElement_Layer-displayed__2ITp_\",\"Layer-undisplayed\":\"LayerListElement_Layer-undisplayed__v_ey_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-layers\":\"LayersList_App-layers__W6LER\",\"App-layers-displayed\":\"LayersList_App-layers-displayed__vbZrT\",\"fadeIn\":\"LayersList_fadeIn__1Noko\",\"Open\":\"LayersList_Open__23nbo\",\"Close\":\"LayersList_Close__2pLj6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-aside\":\"AsideComponent_App-aside__3lf4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-header\":\"HeaderComponent_App-header__3BtxE\",\"App-header-documents-page\":\"HeaderComponent_App-header-documents-page__cbwKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"Spinner_BackDrop__aToxg\",\"Loader\":\"Spinner_Loader__1wKrs\",\"load2\":\"Spinner_load2__o7gmt\"};","import * as actionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    username: null,\r\n    error: null,\r\n    loading: false\r\n};\r\n\r\nconst auth = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTHENTICATION_STARTED:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                loading: true\r\n            };\r\n        case actionTypes.AUTHENTICATION_SUCCEED:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                token: action.token,\r\n                userId: action.userId,\r\n                username: action.username,\r\n                loading: false\r\n            };\r\n        case actionTypes.AUTHENTICATION_FAILED:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                token: null,\r\n                userId: null,\r\n                username: null,\r\n                loading: false\r\n            };\r\n        case actionTypes.AUTHENTICATION_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userId: null,\r\n                username: null\r\n            };\r\n        case actionTypes.AUTHENTICATION_SET_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.username\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default auth;","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nexport const NEW_STAGE_CREATED = \"NEW_STAGE_CREATED\";\r\nexport const STAGE_RESIZED = \"STAGE_RESIZED\";\r\nexport const NEW_SHAPE_PASTED = \"NEW_SHAPE_PASTED\";\r\nexport const CLEAR_ALL = \"CLEAR_ALL\";\r\nexport const STAGE_UNMOUNTED = \"STAGE_UNMOUNTED\";\r\n\r\n/** Toolbar buttons **/\r\nexport const PAN_BY_DRAG_BUTTON_CLICKED = \"PAN_BY_DRAG_BUTTON_CLICKED\";\r\n// export const SAVE_DOCUMENT_BUTTON_CLICKED = \"SAVE_DOCUMENT_BUTTON_CLICKED\";\r\nexport const MANAGE_CLOUD_STORAGE_BUTTON_CLICKED = \"MANAGE_CLOUD_STORAGE_BUTTON_CLICKED\";\r\n\r\nexport const MEASURE_POINTS_BUTTON_PRESSED = \"MEASURE_POINTS_BUTTON_PRESSED\";\r\nexport const MEASURE_SHAPES_BUTTON_PRESSED = \"MEASURE_SHAPES_BUTTON_PRESSED\";\r\nexport const TOGGLE_ABOUT_POPUP_CLICKED = \"TOGGLE_ABOUT_POPUP_CLICKED\";\r\n// export const CLOSE_ABOUT_POPUP_BUTTON_PRESSED = \"CLOSE_ABOUT_POPUP_BUTTON_PRESSED\";\r\nexport const TOGGLE_UNITS_CLICKED = \"TOGGLE_UNITS_CLICKED\";\r\nexport const TOGGLE_WIDTH_MODE_CLICKED = \"TOGGLE_WIDTH_MODE_CLICKED\";\r\nexport const TOGGLE_DISPLAY_VERTICES_CLICKED = \"TOGGLE_DISPLAY_VERTICES_CLICKED\";\r\nexport const TOGGLE_DISPLAY_LABELS_CLICKED = \"TOGGLE_DISPLAY_LABELS_CLICKED\";\r\nexport const TOGGLE_SHOW_LAYER_LIST_CLICKED = \"TOGGLE_SHOW_LAYER_LIST_CLICKED\";\r\n\r\nexport const MOUSE_MOVED_ON_STAGE = \"MOUSE_MOVED_ON_STAGE\";\r\nexport const MOUSE_DOWN_ON_STAGE = \"MOUSE_DOWN_ON_STAGE\";\r\nexport const MOUSE_UP_ON_STAGE = \"MOUSE_UP_ON_STAGE\";\r\nexport const MOUSE_WHEEL_MOVE_ON_STAGE = \"MOUSE_WHEEL_MOVE_ON_STAGE\";\r\n\r\nexport const MOUSE_ROLL_OVER_SHAPE = \"MOUSE_ROLL_OVER_SHAPE\";\r\nexport const MOUSE_ROLL_OUT_SHAPE = \"MOUSE_ROLL_OUT_SHAPE\";\r\nexport const MOUSE_CLICKED_ON_SHAPE = \"MOUSE_CLICKED_ON_SHAPE\";\r\n\r\nexport const PINCH_DOWN_ON_STAGE = \"PINCH_DOWN_ON_STAGE\";\r\nexport const PINCH_MOVED_ON_STAGE = \"PINCH_MOVED_ON_STAGE\";\r\nexport const PINCH_UP_ON_STAGE = \"PINCH_UP_ON_STAGE\";\r\n\r\n// export const HOME_BUTTON_CLICKED = \"HOME_BUTTON_CLICKED\";\r\nexport const PAN_TO_COORDINATE = \"PAN_TO_COORDINATE\";\r\nexport const PAN_AND_ZOOM_TO_SHAPE = \"PAN_AND_ZOOM_TO_SHAPE\";\r\n\r\nexport const LAYER_LIST_PANEL_PRESSED = \"LAYER_LIST_PANEL_PRESSED\";\r\nexport const ADD_LAYER_BUTTON_PRESSED = \"ADD_LAYER_BUTTON_PRESSED\";\r\nexport const ADD_NEW_LAYER = \"ADD_NEW_LAYER\";\r\nexport const DELETE_LAYER_BUTTON_PRESSED = \"DELETE_LAYER_BUTTON_PRESSED\";\r\nexport const SORT_LAYERS_BUTTON_PRESSED = \"SORT_LAYERS_BUTTON_PRESSED\";\r\nexport const CLEAN_AND_UPDATE_LAYERS = \"CLEAN_AND_UPDATE_LAYERS\";\r\n\r\nexport const TOGGLE_DISPLAY_LAYER_PRESSED = \"TOGGLE_DISPLAY_LAYER_PRESSED\";\r\nexport const TOGGLE_AFFECTED_LAYER_PRESSED=\"TOGGLE_AFFECTED_LAYER_PRESSED\";\r\nexport const OPEN_LAYER_EDIT_FORM_PRESSED = \"OPEN_LAYER_EDIT_FORM_PRESSED\";\r\nexport const SUBMIT_LAYER_EDIT_FORM_PRESSED = \"SUBMIT_LAYER_EDIT_FORM_PRESSED\";\r\nexport const ESCAPE_LAYER_EDIT_FORM_PRESSED = \"ESCAPE_LAYER_EDIT_FORM_PRESSED\";\r\n\r\nexport const LAYERS_LIST_ARROW_DOWN_PRESSED = \"LAYERS_LIST_ARROW_DOWN_PRESSED\";\r\nexport const LAYERS_LIST_ARROW_UP_PRESSED = \"LAYERS_LIST_ARROW_UP_PRESSED\";\r\n\r\n// export const TOGGLE_WATCH_EXPAND_CLICKED = \"TOGGLE_WATCH_EXPAND_CLICKED\";\r\n\r\nexport const FILENAME_LIST_SELECTED = \"FILENAME_LIST_SELECTED\";\r\nexport const INPUT_FILE_LOADED = \"INPUT_FILE_LOADED\";\r\nexport const DATA_FROM_BUFFER_PASTED = \"DATA_FROM_BUFFER_PASTED\";\r\n\r\n/** AABB Distance Measurement Demo **/\r\nexport const AABB_DEMO_URI = \"AABB_DEMO_URI\";\r\nexport const AABB_DEMO_NEXT_DIST_STEP = \"AABB_DEMO_NEXT_DIST_STEP\";\r\nexport const AABB_TREE_NEXT_LEVEL = \"AABB_TREE_NEXT_LEVEL\";\r\n\r\n/** Collision demo **/\r\nexport const COLLISION_DEMO_URI = \"COLLISION_DEMO_URI\";\r\nexport const COLLISION_DEMO_BUTTON_PRESSED = \"COLLISION_DEMO_BUTTON_PRESSED\";\r\n\r\n/** Skeleton recognition demo **/\r\nexport const SKELETON_RECOGNITION_URI = \"SKELETON_RECOGNITION_URI\";\r\nexport const SKELETON_RECOGNITION_BUTTON_PRESSED=\"SKELETON_RECOGNITION_BUTTON_PRESSED\";\r\n\r\nexport const ASYNC_OPERATION_STARTED = \"ASYNC_OPERATION_STARTED\";\r\nexport const ASYNC_OPERATION_ENDED = \"ASYNC_OPERATION_ENDED\";\r\n\r\n/** Documents list **/\r\nexport const REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED = \"REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED\";\r\nexport const REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED = \"REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED\";\r\nexport const REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED = \"REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED\";\r\nexport const REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED = \"REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED\";\r\nexport const DELETE_DOCUMENT_FROM_DATABASE_SUCCEED = \"DELETE_DOCUMENT_FROM_DATABASE_SUCCEED\";\r\nexport const DOCUMENT_SELECTED_FROM_LIST = \"DOCUMENT_SELECTED_FROM_LIST\";\r\nexport const DOCUMENT_NAME_UPDATED = \"DOCUMENT_NAME_UPDATED\";\r\nexport const CLEAR_ALL_BUTTON_CLICKED = \"CLEAR_ALL_BUTTON_CLICKED\";\r\n\r\n/* Authentication */\r\nexport const AUTHENTICATION_STARTED = \"AUTHENTICATION_STARTED\";\r\nexport const AUTHENTICATION_SUCCEED = \"AUTHENTICATION_SUCCEED\";\r\nexport const AUTHENTICATION_FAILED = \"AUTHENTICATION_FAILED\";\r\nexport const AUTHENTICATION_LOGOUT = \"AUTHENTICATION_LOGOUT\";\r\nexport const AUTHENTICATION_SET_USERNAME = \"AUTENTICATION_SET_USERNAME\";\r\n\r\n","import {Utils, Arc, vector} from \"@flatten-js/core\";\r\n\r\nexport function arcSE(center, start, end, counterClockwise) {\r\n    let startAngle = vector(center,start).slope;\r\n    let endAngle = vector(center, end).slope;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, start).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\nexport function arcStartSweep(center, start, sweep, counterClockwise) {\r\n    let startAngle = vector(center,start).slope;\r\n    let endAngle = startAngle + sweep;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, start).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\nexport function arcEndSweep(center, end, sweep, counterClockwise) {\r\n    let endAngle = vector(center,end).slope;\r\n    let startAngle = endAngle - sweep;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, end).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\n","\r\n/**\r\n * Created by Alex Bol on 12/02/2018.\r\n */\r\nimport {Segment, Arc, Polygon, Face} from \"@flatten-js/core\";\r\nimport {CW, CCW, INSIDE, OUTSIDE, ORIENTATION} from \"@flatten-js/core\";\r\nimport {vector} from \"@flatten-js/core\";\r\nimport {unify,subtract} from \"@flatten-js/boolean-op\";\r\nimport  {BOOLEAN_UNION} from \"@flatten-js/boolean-op\";\r\n\r\nimport {addToIntPoints, getSortedArray, splitByIntersections} from \"@flatten-js/boolean-op\";\r\nimport {removeNotRelevantChains, removeOldFaces, restoreFaces} from \"@flatten-js/boolean-op\";\r\n\r\nimport {arcSE, arcStartSweep, arcEndSweep} from \"./createArcs\";\r\n\r\n/**\r\n * Offset polygon by given value\r\n * @param {Polygon} polygon - input polygon\r\n * @param {number} value - offset value, may be positive or negative\r\n * @returns {Polygon} offsetPolygon\r\n */\r\n\r\n/**\r\n *\r\n * @param polygon\r\n * @param value\r\n *\r\n */\r\nexport function offset(polygon, value) {\r\n    let w = value;\r\n\r\n    let edges = [...polygon.edges];\r\n    let offsetPolygon = polygon.clone();\r\n    let offsetEdge;\r\n\r\n    if (w !== 0) {\r\n\r\n        for (let edge of edges) {\r\n            if (edge.isSegment()) {\r\n                offsetEdge = offsetSegment(edge.shape, w);\r\n            }\r\n            else {\r\n                offsetEdge = offsetArc(edge.shape, w);\r\n            }\r\n\r\n            if (w > 0) {\r\n                offsetPolygon = unify(offsetPolygon, offsetEdge);\r\n            }\r\n            else {\r\n                offsetPolygon = subtract(offsetPolygon, offsetEdge);\r\n            }\r\n        }\r\n    }\r\n\r\n    return offsetPolygon;\r\n}\r\n\r\nexport function offsetArc(arc, value) {\r\n\r\n    let w = Math.abs(value);\r\n\r\n    // Define outline polygon\r\n    let polygon = new Polygon();\r\n    let arc_cap1,arc_cap2;\r\n\r\n    let arc_outer = arc.clone();\r\n    arc_outer.r = arc.r + w;\r\n\r\n    arc_cap1 = arcStartSweep(arc.end, arc_outer.end, Math.PI, arc.counterClockwise);\r\n    arc_cap2 = arcEndSweep(arc.start, arc_outer.start, Math.PI, arc.counterClockwise);\r\n\r\n    let arc_inner = undefined;\r\n    if (arc.r > w) {\r\n        arc_inner = new Arc(arc.pc, arc.r - w, arc.endAngle, arc.startAngle,\r\n            arc.counterClockwise === CW ? CCW : CW);\r\n    }\r\n    else {\r\n        // arc_inner = new Arc(arc.pc, w - arc.r, arc.startAngle, arc.endAngle, arc.counterClockwise);\r\n        arc_inner = new Segment(arc_cap1.end, arc_cap2.start);\r\n    }\r\n\r\n    polygon.addFace([arc_outer, arc_cap1, arc_inner, arc_cap2]);\r\n    [...polygon.faces][0].setArcLength();\r\n\r\n    // Create intersection points\r\n    let ips = Face.getSelfIntersections([...polygon.faces][0], polygon.edges, false);\r\n\r\n    // TODO: getSelfIntersections returns points with correspondent edges - avoid duplication\r\n    ips = ips.slice(0,ips.length/2);    // for now slice array to avoid duplication in points\r\n\r\n    let int_points = [];\r\n    let edge_cap1;\r\n    let edge_cap2;\r\n\r\n    edge_cap1 = [...polygon.edges][1];\r\n    edge_cap2 = [...polygon.edges][3];\r\n\r\n    for (let pt of ips) {\r\n        addToIntPoints(edge_cap1, pt, int_points);\r\n        addToIntPoints(edge_cap2, pt, int_points);\r\n    }\r\n\r\n    // Sort intersection points and insert them as new vertices\r\n    let int_points_sorted = getSortedArray(int_points);\r\n    splitByIntersections(polygon, int_points_sorted);\r\n\r\n\r\n    // Set BV flags\r\n    let bv = OUTSIDE;\r\n    for (let int_point of int_points_sorted) {\r\n        int_point.edge_before.bv = bv;\r\n        int_point.edge_after.bv = (bv === OUTSIDE ? INSIDE : OUTSIDE);\r\n        bv = int_point.edge_after.bv;   // invert flag on each iteration\r\n    }\r\n\r\n    // Remove inner \"chains\"\r\n    let op = BOOLEAN_UNION;\r\n    removeNotRelevantChains(polygon, op, int_points_sorted, true);\r\n\r\n    // return int_points_sorted;\r\n    // Swap links\r\n    let num = int_points.length;\r\n    if (num > 0) {\r\n        let edge_before;\r\n        let edge_after;\r\n        // 0 => 3\r\n        edge_before = int_points_sorted[0].edge_before;\r\n        edge_after = int_points_sorted[num-1].edge_after;\r\n        edge_before.next = edge_after;\r\n        edge_after.prev = edge_before;\r\n\r\n        // Fill in missed links in intersection points\r\n        int_points_sorted[0].edge_after = int_points_sorted[num-1].edge_after;\r\n        int_points_sorted[num-1].edge_before = int_points_sorted[0].edge_before;\r\n\r\n        if (num === 4) {\r\n            // 2 => 1\r\n            edge_before = int_points_sorted[2].edge_before;\r\n            edge_after = int_points_sorted[1].edge_after;\r\n            edge_before.next = edge_after;\r\n            edge_after.prev = edge_before;\r\n\r\n            // Fill in missed links in intersection points\r\n            int_points_sorted[2].edge_after = int_points_sorted[1].edge_after;\r\n            int_points_sorted[1].edge_before = int_points_sorted[2].edge_before;\r\n        }\r\n\r\n        // remove old faces\r\n        removeOldFaces(polygon, int_points);\r\n        // restore faces\r\n        restoreFaces(polygon, int_points, int_points);\r\n    }\r\n\r\n    let face0 = [...polygon.faces][0];\r\n    if (face0.orientation() === ORIENTATION.CCW) {\r\n        polygon.reverse();\r\n    }\r\n    return polygon;\r\n}\r\n\r\nexport function offsetSegment(seg, value) {\r\n    let w = Math.abs(value);\r\n\r\n    let polygon = new Polygon();\r\n    let v_seg = vector(seg.end.x-seg.start.x, seg.end.y-seg.start.y);\r\n    let v_seg_unit = v_seg.normalize();\r\n    let v_left = v_seg_unit.rotate90CCW().multiply(w);\r\n    let v_right = v_seg_unit.rotate90CW().multiply(w);\r\n    let seg_left = seg.translate(v_left);\r\n    let seg_right = seg.translate(v_right).reverse();\r\n    let cap1 = arcSE(seg.end, seg_left.end, seg_right.start, CW);\r\n    let cap2 = arcSE(seg.start, seg_right.end, seg_left.start, CW);\r\n\r\n    polygon.addFace([seg_left, cap1, seg_right, cap2]);\r\n    return polygon;\r\n}\r\n","/**\r\n * Created by alexanderbol on 01/05/2017.\r\n */\r\n\r\nimport {Point, Segment, Arc, Circle, Box, Polygon, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\nimport {offsetSegment, offsetArc} from \"../models/polygonOffset\";\r\n\r\n/*\r\nlet debug_str = `+\t\t[0]\t{nrec=27 nalloc=27 h_ind_id=-1 ...} mat_cont_hdr_struc\tmat_cont_struc\r\n    +\t\t[1]\t{pmin=59146400,5973200 pmax=59606001,6438000} mat_cont_lim_struc\tmat_cont_struc\r\n+\t\t[2]\t{nedge=23 nalloc=25 ntop=2 ...} mat_cont_poly_struc\tmat_cont_struc\r\n+\t\t[3]\t{pmin=59146400,5973200 pmax=59606001,6438000} mat_cont_lim_struc\tmat_cont_struc\r\n+\t\t[4]\t{ps=59192738,6363124 pe=59216000,6372800 pc=59216000,6340000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[5]\t{ps=59216000,6372800 pe=59267652,6372800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[6]\t{ps=59267652,6372800 pe=59267652,6307200 pc=59360000,6340000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[7]\t{ps=59267652,6307200 pe=59229586,6307200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[8]\t{ps=59229586,6307200 pe=59212000,6289614} mat_seg_struc\tmat_cont_struc\r\n+\t\t[9]\t{ps=59212000,6289614 pe=59212000,6056386} mat_seg_struc\tmat_cont_struc\r\n+\t\t[10]\t{ps=59212000,6056386 pe=59229586,6038800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[11]\t{ps=59229586,6038800 pe=59469614,6038800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[12]\t{ps=59469614,6038800 pe=59487200,6056386} mat_seg_struc\tmat_cont_struc\r\n+\t\t[13]\t{ps=59487200,6056386 pe=59487200,6100500} mat_seg_struc\tmat_cont_struc\r\n+\t\t[14]\t{ps=59487200,6100500 pe=59434000,6180000 pc=59520000,6180000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[15]\t{ps=59434000,6180000 pe=59552800,6100500 pc=59520000,6180000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[16]\t{ps=59552800,6100500 pe=59552800,6042800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[17]\t{ps=59552800,6042800 pe=59543124,6019538 pc=59520000,6042800 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[18]\t{ps=59543124,6019538 pe=59506462,5982876} mat_seg_struc\tmat_cont_struc\r\n+\t\t[19]\t{ps=59506462,5982876 pe=59483200,5973200 pc=59483200,6006000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[20]\t{ps=59483200,5973200 pe=59216000,5973200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[21]\t{ps=59216000,5973200 pe=59192738,5982876 pc=59216000,6006000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[22]\t{ps=59192738,5982876 pe=59156076,6019538} mat_seg_struc\tmat_cont_struc\r\n+\t\t[23]\t{ps=59156076,6019538 pe=59146400,6042800 pc=59179200,6042800 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[24]\t{ps=59146400,6042800 pe=59146400,6303200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[25]\t{ps=59146400,6303200 pe=59156076,6326462 pc=59179200,6303200 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[26]\t{ps=59156076,6326462 pe=59192738,6363124} mat_seg_struc\tmat_cont_struc\r\n`;\r\n*/\r\n\r\n/*\r\n+\t\tcircle\t{pc=40445880,-10500080 r=41327880}\tmat_circle_struc\r\n+\t\tcircle\t{pc=38215880,-7700040 r=92456}\tmat_circle_struc\r\n+\t\trect\t{pll=38215880,-7700040 w=92456 h=50000}\tmat_rect_struc\r\n+\t\tshape1\t{type=512 s={...} }\t_mat_shape_struc\r\n+\t\tline\t{ps=-18423,529080 pe=1047776,480195 r=60000 cap=0}\tmat_line_struc\r\n+\t\tarc\t{ps=1001217,249728 pe=752127,51853 pc=853697,179712 cw=??? r=60000 cap=0}\tmat_arc_struc\r\n */\r\n\r\nexport class Parser {\r\n    parseToWatchArray(str) {\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n        let watchArray = [];\r\n        for (let line of arrayOfLines) {\r\n            watchArray.push(line.substring(line.indexOf('{')));\r\n        }\r\n        return watchArray;\r\n    }\r\n\r\n    parseToPoint(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let pointArr = parenth.split('=')[1].split(',');\r\n        let point = new Point(parseInt(pointArr[0],10), parseInt(pointArr[1],10));\r\n        point.label = line.split(/\\s+/)[1];\r\n        return point;\r\n    }\r\n\r\n    parseToSegment(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        return new Segment(ps, pe);\r\n    }\r\n\r\n    parseToArc(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let pcArr = termArr[2].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n\r\n        let cwStr = termArr[3].split('=')[1];\r\n        let counterClockwise = cwStr === '0' ? true : false;\r\n\r\n        let startAngle = vector(pc,ps).slope;\r\n        let endAngle = vector(pc, pe).slope;\r\n\r\n        if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n            // endAngle += 2*Math.PI;\r\n            endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n        }\r\n        let r = vector(pc, ps).length;\r\n\r\n        return new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n    }\r\n\r\n    parseToCircle(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let pcArr = termArr[0].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n        let r = parseInt(termArr[1].split('=')[1],10);\r\n        let circle = new Circle(pc, r);\r\n        let polygon = new Polygon();\r\n        polygon.addFace(circle);\r\n        return polygon;\r\n    }\r\n\r\n    parseToRectangle(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let pllArr = termArr[0].split('=')[1].split(',');\r\n        let xmin = parseInt(pllArr[0],10);\r\n        let ymin = parseInt(pllArr[1],10);\r\n        let width = parseInt(termArr[1].split('=')[1],10);\r\n        let height = parseInt(termArr[2].split('=')[1],10);\r\n\r\n        let box = new Box(xmin, ymin, xmin + width, ymin + height);\r\n        let polygon = new Polygon();\r\n        polygon.addFace(box);\r\n        return polygon;\r\n    }\r\n\r\n    parseToODBLine(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let w = parseInt(termArr[2].split('=')[1],10);\r\n\r\n        let segment = new Segment(ps, pe);\r\n        let polygon = w > 0 ? offsetSegment(segment, w) : new Polygon();\r\n\r\n        return polygon;\r\n    }\r\n\r\n    parseToODBArc(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let pcArr = termArr[2].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n\r\n        let cwStr = termArr[3].split('=')[1];\r\n        let counterClockwise = cwStr === '0' ? true : false;\r\n\r\n        let startAngle = vector(pc,ps).slope;\r\n        let endAngle = vector(pc, pe).slope;\r\n\r\n        if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n            // endAngle += 2*Math.PI;\r\n            endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n        }\r\n        let r = vector(pc, ps).length;\r\n\r\n        let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n        let w = parseInt(termArr[4].split('=')[1],10);\r\n\r\n        let polygon = w > 0 ? offsetArc(arc, w) : new Polygon();\r\n\r\n        return polygon;\r\n    }\r\n\r\n    parseToPolygon(str) {\r\n        let polygon = new Polygon();\r\n        // let mulitystr = debug_str;\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n\r\n        for (let i=0; i < arrayOfLines.length; i++) {\r\n            let line = arrayOfLines[i];\r\n            if (line.search('mat_cont_poly_struc') >= 0) {\r\n                let parenth = line.match(/\\{([^)]+)\\}/)[1];       // string inside {..}\r\n                let termArr = parenth.split(' ');                 // array of terms \"attr=value\"\r\n                let nedgesTerm = termArr[0];                      // \"nedge=nn\"\r\n                let nedgesStr = nedgesTerm.split('=')[1];\r\n                let nedges = parseInt(nedgesStr,10);\r\n\r\n                // Create new face from next #nedges of segments and arcs\r\n                let edges = [];\r\n                for (let j=i+2; j < i+2+nedges; j++) {\r\n                    line = arrayOfLines[j];\r\n                    // let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n                    // let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n                    if (line.search('mat_seg_struc') >= 0) {\r\n                        let segment = this.parseToSegment(line);\r\n                        edges.push(segment);\r\n                    }\r\n                    else if (line.search('mat_curve_struc') >= 0) {\r\n                        let arc = this.parseToArc(line);\r\n                        edges.push(arc);\r\n                    }\r\n                }\r\n                polygon.addFace(edges);\r\n            }\r\n        }\r\n        return polygon;\r\n    }\r\n\r\n    parseToPoints(str) {\r\n        let points = [];\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n        for (let line of arrayOfLines) {\r\n            if (line.search('point_struc') >= 0) {\r\n                let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n                let pointArr = parenth.split('=')[1].split(',');\r\n                let point = new Point(parseInt(pointArr[0],10), parseInt(pointArr[1],10));\r\n                point.label = line.split(/\\s+/)[1];\r\n                points.push(point);\r\n            }\r\n        }\r\n        return points;\r\n    }\r\n\r\n    parseToShapes(str) {\r\n        let shapes = [];\r\n        let shape;\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n        for (let line of arrayOfLines) {\r\n            if (line.search('point_struc') >= 0) {\r\n                shape = this.parseToPoint(line);\r\n            }\r\n            else if (line.search('_seg_struc') >= 0) {\r\n                shape = this.parseToSegment(line);\r\n            }\r\n            else if (line.search('_curve_struc') >= 0) {\r\n                shape = this.parseToArc(line);\r\n            }\r\n            else if (line.search('_circle_struc') >= 0) {\r\n                shape = this.parseToCircle(line);\r\n            }\r\n            else if (line.search('_rect_struc') >= 0) {\r\n                shape = this.parseToRectangle(line);\r\n            }\r\n            else if (line.search('_line_struc') >= 0) {\r\n                shape = this.parseToODBLine(line);\r\n            }\r\n            else if (line.search('_arc_struc') >= 0) {\r\n                shape = this.parseToODBArc(line);\r\n            }\r\n            shapes.push(shape);\r\n        }\r\n        return shapes;\r\n    }\r\n\r\n    parse(str) {\r\n        /* try polygon */\r\n        let polygon = this.parseToPolygon(str);\r\n        if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n            return [polygon];\r\n        }\r\n\r\n        /* try array of shapes excluding polygon */\r\n        let shapes = this.parseToShapes(str);\r\n        if (shapes.length > 0) {\r\n            return shapes;\r\n        }\r\n\r\n        /* try array of points */\r\n        let points = this.parseToPoints(str);\r\n        if (points.length > 0) {\r\n            return points;\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","import * as ActionTypes from \"../actionTypes\";\r\nimport {Parser} from \"../../dataParsers/parser\";\r\n\r\nconst unitsList = [\r\n    {\r\n        name: \"pixels\",\r\n        decimals: 0,\r\n        divisor: 1\r\n    },\r\n    {\r\n        name: \"inch\",\r\n        decimals: 7,\r\n        divisor: 10160000\r\n    },\r\n    {\r\n        name: \"mm\",\r\n        decimals: 6,\r\n        divisor: 400000\r\n    }];\r\n\r\nconst defaultAppState = {\r\n    title: \"Debug Viewer\",\r\n    version: process.env.REACT_APP_VERSION,\r\n    build: \"\",\r\n    units: \"pixels\",\r\n    decimals: 0,\r\n    divisor: 1,\r\n    // bg: \"#F1F1F1\",\r\n    parser: new Parser(),\r\n    widthOn: true,\r\n    displayVertices: false,\r\n    displayLabels: true,\r\n    measurePointsActive: false,\r\n    zoomFactor: undefined,\r\n    originX: undefined,\r\n    originY: undefined,\r\n    showAboutPopup: false,\r\n    importDataToNewLayer: true,       // if false, import data to affected layer\r\n    showSkeletonRecognitionButton: false,\r\n    applySkeletonRecognition: false,\r\n    stage: null,\r\n    showSpinner: false,\r\n    showLayerList: false,\r\n};\r\n\r\nconst app = (state = defaultAppState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.NEW_STAGE_CREATED:\r\n            return Object.assign({}, state, {\r\n                stage: action.stage,\r\n                zoomFactor: action.stage.zoomFactor * action.stage.resolution,\r\n                originX: action.stage.origin.x,\r\n                originY: action.stage.origin.y,\r\n            });\r\n\r\n        case ActionTypes.STAGE_UNMOUNTED:\r\n            return Object.assign({}, state, {\r\n                stage: null,\r\n                zoomFactor: undefined,\r\n                originX: undefined,\r\n                originY: undefined\r\n            });\r\n\r\n        case ActionTypes.MOUSE_WHEEL_MOVE_ON_STAGE:\r\n        case ActionTypes.PAN_AND_ZOOM_TO_SHAPE:\r\n        case ActionTypes.PINCH_MOVED_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                zoomFactor: action.stage.zoomFactor * action.stage.resolution,\r\n                originX: action.stage.origin.x,\r\n                originY: action.stage.origin.y,\r\n            });\r\n        case ActionTypes.MOUSE_MOVED_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                originX: action.stage.origin.x,\r\n                originY: action.stage.origin.y\r\n            });\r\n        case ActionTypes.TOGGLE_UNITS_CLICKED:\r\n            let curUnitsId = unitsList.findIndex(units => state.units === units.name);\r\n            let newUnits = unitsList[(curUnitsId + 1) % 3];\r\n            return Object.assign({}, state, {\r\n                units: newUnits.name,\r\n                decimals: newUnits.decimals,\r\n                divisor: newUnits.divisor\r\n            });\r\n        case ActionTypes.TOGGLE_WIDTH_MODE_CLICKED:\r\n            return Object.assign({}, state, {\r\n                widthOn: !state.widthOn,\r\n                displayVertices: state.widthOn ? state.displayVertices : false\r\n            });\r\n        case ActionTypes.TOGGLE_DISPLAY_VERTICES_CLICKED:\r\n            if (state.displayVertices) {\r\n                return Object.assign({}, state, {\r\n                    displayVertices: false\r\n                });\r\n            }\r\n            else {\r\n                return Object.assign({}, state, {\r\n                    widthOn: false,\r\n                    displayVertices: true\r\n                });\r\n            }\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LABELS_CLICKED:\r\n            return Object.assign({}, state, {\r\n                displayLabels: !state.displayLabels\r\n            });\r\n\r\n        case ActionTypes.TOGGLE_ABOUT_POPUP_CLICKED:\r\n            return Object.assign({}, state, {\r\n                showAboutPopup: !state.showAboutPopup\r\n            });\r\n\r\n        // case ActionTypes.CLOSE_ABOUT_POPUP_BUTTON_PRESSED:\r\n        //     return Object.assign({}, state, {\r\n        //         showAboutPopup: false\r\n        //     });\r\n\r\n        case ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED:\r\n            return Object.assign({}, state, {\r\n                measurePointsActive: false\r\n            });\r\n\r\n        case ActionTypes.MEASURE_POINTS_BUTTON_PRESSED:\r\n            return Object.assign({}, state, {\r\n                measurePointsActive: true\r\n            });\r\n        case ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED:\r\n            return Object.assign({}, state, {\r\n                measurePointsActive: false\r\n            });\r\n        case ActionTypes.SKELETON_RECOGNITION_URI:\r\n            return Object.assign({}, state, {\r\n                showSkeletonRecognitionButton: true\r\n            });\r\n        case ActionTypes.SKELETON_RECOGNITION_BUTTON_PRESSED:\r\n            return Object.assign({}, state, {\r\n                applySkeletonRecognition: true\r\n            });\r\n        case ActionTypes.ASYNC_OPERATION_STARTED:\r\n            return Object.assign({}, state, {\r\n                showSpinner: true\r\n            });\r\n        case ActionTypes.ASYNC_OPERATION_ENDED:\r\n            return Object.assign({}, state, {\r\n                showSpinner: false\r\n            });\r\n        case ActionTypes.AABB_TREE_NEXT_LEVEL:\r\n            return state;\r\n        case ActionTypes.TOGGLE_SHOW_LAYER_LIST_CLICKED:\r\n            return {\r\n                ...state,\r\n                showLayerList: !state.showLayerList\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default app;","\r\nlet defaultStyle = {\r\n    strokeStyle: 1,\r\n    stroke: \"#FF0303\",\r\n    fill: \"#FF0303\",\r\n    alpha: 1.0\r\n};\r\n\r\n/* Class Model represents data model that will be added to layer */\r\nclass Model {\r\n    constructor(geom = undefined, style = undefined, label = \"\") {\r\n        this.geom = geom;\r\n        this.style = style || defaultStyle;\r\n        this.label = label;\r\n    }\r\n\r\n    clone() {\r\n        let model = new Model(this.geom, this.style, this.label);\r\n        return Object.assign(model, this);\r\n    }\r\n\r\n    get box() {\r\n        return this.geom.box;\r\n    }\r\n/*\r\n    static transformPoint(pt, stage) {\r\n        return new Flatten.Point(stage.W2C_X(pt.x), stage.W2C_Y(pt.y));\r\n    }\r\n\r\n    static transformSegment(segment, stage) {\r\n        return new Flatten.Segment(\r\n            Model.transformPoint(segment.ps, stage),\r\n            Model.transformPoint(segment.pe, stage)\r\n        )\r\n    }\r\n\r\n    static transformArc(arc, stage) {\r\n        return new Flatten.Arc(\r\n            Model.transformPoint(arc.pc, stage),\r\n            stage.W2C_Scalar(arc.r),\r\n            arc.startAngle,\r\n            arc.endAngle,\r\n            arc.counterClockwise\r\n        )\r\n    }\r\n\r\n    static transformEdge(shape, stage) {\r\n        if (shape instanceof Flatten.Segment) {\r\n            return Model.transformSegment(shape, stage);\r\n        }\r\n        else if (shape instanceof Flatten.Arc) {\r\n            return Model.transformArc(shape, stage);\r\n        }\r\n    }\r\n\r\n    static transformFace(face, stage) {\r\n        // Get shapes of face as array\r\n        let shapes = [];\r\n        for (let edge of face) {\r\n            shapes.push(edge.shape);\r\n        }\r\n\r\n        // Transform array of edges\r\n        return shapes.map(shape => Model.transformEdge(shape, stage));\r\n    }\r\n\r\n    static transformPolygon(polygon, stage) {\r\n        let newPolygon = new Flatten.Polygon();\r\n        let shapes = [];\r\n        for (let face of polygon.faces) {\r\n            shapes = Model.transformFace(face, stage);\r\n            newPolygon.addFace(shapes);\r\n        }\r\n        return newPolygon;\r\n    }\r\n*/\r\n}\r\n\r\nexport default Model;","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport {Point, Box} from '@flatten-js/core';\r\n// import { Shape } from '../models/shape';\r\nimport Model from './model';\r\n\r\nclass Layer {\r\n    constructor(stage) {\r\n        // super();\r\n        // cannot define Layer as extension of PlanarSet due to bug in compiler ?\r\n        this.stage = stage;\r\n        this.shapes = [];         // new Flatten.PlanarSet();\r\n        this.name = \"\";\r\n        this.color = \"\";\r\n        this.title = \"\";\r\n        this.displayed = false;\r\n        this.edited = false;\r\n        this.affected = false;\r\n    }\r\n\r\n    clone() {\r\n        let layer = new Layer(this.stage);\r\n        return Object.assign(layer, this);\r\n    }\r\n\r\n    add(shape) {\r\n        if (shape instanceof Model) {\r\n            this.shapes.push(shape);       // add(shape)\r\n        }\r\n        else {\r\n            let geom = shape;\r\n            let newShape = new Model(geom, {}, shape.label) // , this.stage);\r\n            this.shapes.push(newShape);     // add(newShape);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    addShapesArray(shapes) {\r\n        for (let shape of shapes) {\r\n            this.add(shape);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get box() {\r\n        let box = new Box();\r\n        for (let shape of this.shapes) {\r\n            box = box.merge(shape.box);\r\n        }\r\n        return box;\r\n    }\r\n\r\n    get center() {\r\n        let box = this.box;\r\n        return new Point((box.xmin + box.xmax)/2, (box.ymin + box.ymax)/2);\r\n    }\r\n\r\n    toggleDisplayed(color) {\r\n        let displayed = !this.displayed;\r\n        return Object.assign(this.clone(),\r\n            {\r\n                displayed : displayed,\r\n                color: color\r\n            });\r\n    }\r\n\r\n    setAffected(affected) {\r\n        this.affected = affected;\r\n        return this;\r\n        // return Object.assign(this.clone(),\r\n        //     {\r\n        //         affected : affected\r\n        //     });\r\n    }\r\n\r\n    setEdited(edited) {\r\n        return Object.assign(this.clone(),\r\n            {\r\n                edited : edited\r\n            });\r\n    }\r\n\r\n    setNameAndTitle(name,title) {\r\n        return Object.assign(this.clone(),\r\n            {\r\n                name : name,\r\n                title: title,\r\n                edited: false\r\n            });\r\n    }\r\n\r\n    setAlpha() {\r\n        for(let shape of this.shapes) {\r\n            shape.alpha = this.displayed ? 1 : 0;\r\n        }\r\n        return this.shapes;\r\n    }\r\n\r\n    // toggleExpanded(shapeToggle) {\r\n    //     for(let shape of this.shapes) {\r\n    //         if (shape === shapeToggle) {\r\n    //             shape.expanded = !shape.expanded;\r\n    //         }\r\n    //     }\r\n    //     return this;\r\n    // }\r\n\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            title: this.title,\r\n            shapes: JSON.stringify(this.shapes, null, ' ')\r\n        };\r\n    }\r\n}\r\n\r\nexport default Layer;","/**\r\n * Created by alexanderbol on 20/04/2017.\r\n */\r\n\r\nimport Layer from '../models/layer';\r\n\r\nconst colors = [\r\n    \"#FF0303\",\r\n    \"#4AA403\",\r\n    \"#540080\",\r\n    \"#FFFF40\",\r\n    \"#FF0080\",\r\n    \"#AED424\",\r\n    \"#545400\",\r\n    \"#FFA980\",\r\n    \"#A95480\",\r\n    \"#A9A9FF\",\r\n    \"#00FF00\",\r\n    \"#FFEE76\",\r\n    \"#A40576\",\r\n    \"#4385C8\",\r\n    \"#1CC826\",\r\n    \"#BDBD00\",\r\n    \"#48316E\",\r\n    \"#14616E\",\r\n    \"#8040BD\",\r\n    \"#DC7676\",\r\n    \"#924845\",\r\n    \"#A90000\",\r\n    \"#FFA900\"\r\n];\r\n\r\nclass Layers {\r\n\r\n    static newLayer(stage, layers) {\r\n        let layer = new Layer(stage);\r\n        layer.name = Layers.getNewName(layers);\r\n        if (layers.length === 0) { // first layer\r\n            // layer.color = Layers.getNextColor(layers);\r\n            layer.displayed = false;\r\n            layer.affected = false;\r\n        }\r\n        return layer;\r\n    }\r\n\r\n    static get defaultName() {\r\n        return \"layer\";\r\n    }\r\n\r\n    static getNewName(layers) {\r\n        let name = Layers.defaultName;\r\n        let inc = 1;\r\n        let comparator = (layer) => layer.name === name;\r\n        while (layers.find(comparator) ) {\r\n            name = Layers.defaultName + inc;\r\n            inc++;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    static getAffected(layers) {\r\n        return layers.find((lay) => lay.affected);\r\n    }\r\n\r\n    static setAffected(layers, layer) {\r\n        let currentAffectedLayer = Layers.getAffected(layers);\r\n        if (currentAffectedLayer) {\r\n            currentAffectedLayer.affected = false;\r\n        }\r\n        layer.affected = true;\r\n    }\r\n\r\n    static getNextColor(layers) {\r\n        let color = \"\";\r\n        for (let col of colors) {\r\n            if (!layers.find((layer) =>\r\n                layer.displayed && layer.color === col)) {\r\n                color = col;\r\n                break;\r\n            }\r\n        }\r\n        return color;\r\n    }\r\n\r\n    static delete(layers, layer) {\r\n        let index = layers.findIndex((l) => l === layer);\r\n        let newLayers = layers.filter(l => l !== layer);\r\n        if (index > 0) {\r\n            newLayers[index-1].affected = true;\r\n            if (newLayers[index-1].color === \"\") {\r\n                newLayers[index - 1].color = Layers.getNextColor(newLayers);\r\n            }\r\n            newLayers[index-1].displayed = true;\r\n        }\r\n        return newLayers;\r\n        // another option to delete from array:\r\n        // const newLayers = [...layers]\r\n        // return newLayers.splice( index, 1);\r\n    }\r\n\r\n    static sort(layers) {\r\n        let newLayers = layers.slice();\r\n        newLayers.sort( function(l1, l2) {\r\n            let name1 = l1.name.toUpperCase();\r\n            let name2 = l2.name.toUpperCase();\r\n            if (name1 < name2) {\r\n                return -1;\r\n            }\r\n            if (name1 > name2) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n        return newLayers;\r\n    }\r\n\r\n    static toJSON(layers) {\r\n        return layers.map( layer => layer.toJSON() );\r\n    }\r\n}\r\n\r\nexport default Layers;","import * as ActionTypes from \"../actionTypes\";\r\nimport Layers from \"../../models/layers\";\r\n\r\nconst layers = (state = [], action) => {\r\n    let affectedLayer = state.find(layer => layer.affected);\r\n    let affectedLayerId = state.findIndex(layer => layer.affected);\r\n    let newLayer;\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LAYER_BUTTON_PRESSED:\r\n            newLayer = Layers.newLayer(action.stage, state);\r\n            return [...state, newLayer];\r\n\r\n        case ActionTypes.ADD_NEW_LAYER:\r\n            return [...state, action.layer];\r\n\r\n        case ActionTypes.DELETE_LAYER_BUTTON_PRESSED:\r\n            if (affectedLayer) {\r\n                return Layers.delete(state, affectedLayer);\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        case ActionTypes.CLEAR_ALL_BUTTON_CLICKED:\r\n            return [];\r\n\r\n        case ActionTypes.SORT_LAYERS_BUTTON_PRESSED:\r\n            return Layers.sort(state);\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED:\r\n            let color = \"\";\r\n            if (!action.layer.displayed) {\r\n                color = Layers.getNextColor(state);\r\n                if (color === \"\") return;  // no free colors\r\n            }\r\n            return state.map((layer) => {\r\n                if (layer !== action.layer) {\r\n                    // if action.layer will be undisplayed,\r\n                    // it cannot become affected, then\r\n                    // keep affected on this layer\r\n                    if (action.layer.displayed) {\r\n                        return layer;\r\n                    }\r\n                    else {\r\n                        return layer.setAffected(false);\r\n                    }\r\n                }\r\n                else {\r\n                    let newLayer = layer.toggleDisplayed(color);\r\n                    newLayer.affected = newLayer.displayed;\r\n                    return newLayer;\r\n                }\r\n                // return layer.toggleDisplayed(color);\r\n            });\r\n\r\n        case ActionTypes.TOGGLE_AFFECTED_LAYER_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer !== action.layer) {\r\n                    return layer.setAffected(false);\r\n                }\r\n                else {\r\n                    return layer.setAffected(!layer.affected);\r\n                }\r\n            });\r\n\r\n        // case ActionTypes.NEW_SHAPE_PASTED:\r\n        //     return state.map((layer) => {\r\n        //         if (layer.affected) {\r\n        //             return layer.addShapesArray(action.shapesArray);\r\n        //         }\r\n        //         else {\r\n        //             return layer;\r\n        //         }\r\n        //     });\r\n\r\n        case ActionTypes.OPEN_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer !== affectedLayer) {\r\n                    return layer;\r\n                }\r\n                else {\r\n                    return layer.setEdited(true);\r\n                }\r\n            });\r\n\r\n        case ActionTypes.SUBMIT_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer.edited) {\r\n                    return layer.setNameAndTitle(action.newLayer.name, action.newLayer.title);\r\n                }\r\n                else {\r\n                    return layer;\r\n                }\r\n            });\r\n\r\n        case ActionTypes.ESCAPE_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer.edited) {             // !== action.layer) {\r\n                    return layer.setEdited(false);\r\n                }\r\n                else {\r\n                    return layer;\r\n                }\r\n            });\r\n\r\n        case ActionTypes.LAYERS_LIST_ARROW_DOWN_PRESSED:\r\n            if (affectedLayerId === state.length - 1) {\r\n                return state;\r\n            }\r\n            else {\r\n\r\n                let nextLayer = state[affectedLayerId + 1];\r\n\r\n                return state.map(layer => {\r\n                    if (layer === affectedLayer) {\r\n                        let newCurLayer = layer.toggleDisplayed(\"\");\r\n                        newCurLayer.affected = false;\r\n                        return newCurLayer;\r\n                    }\r\n                    else if (layer === nextLayer) {\r\n                        let color = affectedLayer.color;\r\n                        let newNextLayer = layer.toggleDisplayed(color);\r\n                        newNextLayer.affected = true;\r\n                        return newNextLayer;\r\n                    }\r\n                    else {\r\n                        return layer;\r\n                    }\r\n                });\r\n            }\r\n\r\n        case ActionTypes.LAYERS_LIST_ARROW_UP_PRESSED:\r\n            if (affectedLayerId === 0) {\r\n                return state;\r\n            }\r\n            else {\r\n                let nextLayer = state[affectedLayerId - 1];\r\n\r\n                return state.map(layer => {\r\n                    if (layer === affectedLayer) {\r\n                        let newCurLayer = layer.toggleDisplayed(\"\");\r\n                        newCurLayer.affected = false;\r\n                        return newCurLayer;\r\n                    }\r\n                    else if (layer === nextLayer) {\r\n                        let newNextLayer = layer.toggleDisplayed(affectedLayer.color);\r\n                        newNextLayer.displayed = true;\r\n                        newNextLayer.affected = true;\r\n                        return newNextLayer;\r\n                    }\r\n                    else {\r\n                        return layer;\r\n                    }\r\n                });\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layers;","import * as ActionTypes from \"../actionTypes\";\r\n\r\nconst defaultMouseState = {\r\n    x: 0,\r\n    y: 0,\r\n    startX: undefined,\r\n    startY: undefined,\r\n    touchPoints: undefined\r\n};\r\n\r\nconst mouse = (state = defaultMouseState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.MOUSE_MOVED_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                x: action.x,\r\n                y: action.y\r\n            });\r\n        case ActionTypes.MOUSE_DOWN_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                startX: action.x,\r\n                startY: action.y\r\n            });\r\n        case ActionTypes.MOUSE_UP_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                startX: undefined,\r\n                startY: undefined\r\n            });\r\n\r\n        case ActionTypes.PINCH_DOWN_ON_STAGE: {\r\n            return {\r\n                ...state,\r\n                touchPoints: [\r\n                    {x: action.x1, y: action.y1},\r\n                    {x: action.x2, y: action.y2}\r\n                ]\r\n            }\r\n        }\r\n        // case ActionTypes.PINCH_MOVED_ON_STAGE: {\r\n        //     return {\r\n        //         ...state,\r\n        //         touchPoints: [\r\n        //             {x: action.x1, y: action.y1},\r\n        //             {x: action.x2, y: action.y2}\r\n        //         ]\r\n        //     }\r\n        // }\r\n        case ActionTypes.PINCH_UP_ON_STAGE: {\r\n            return {\r\n                ...state,\r\n                touchPoints: undefined\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mouse;","import * as ActionTypes from \"../actionTypes\";\r\nimport Flatten from \"@flatten-js/core\";\r\n\r\nconst defaultMeasureShapesTool = {\r\n    measureShapesActive: false,\r\n    measureShapesFirstClick: true,\r\n    hoveredShape: null,\r\n    firstMeasuredShape: null,\r\n    secondMeasuredShape: null,\r\n    firstMeasuredLayer: null,\r\n    secondMeasuredLayer: null,\r\n    distance: undefined,\r\n    shortestSegment: null\r\n};\r\n\r\nconst is_mobile = window.mobilecheck();\r\n\r\nconst measureShapesTool = (state = defaultMeasureShapesTool, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED:\r\n            return Object.assign({}, defaultMeasureShapesTool, {\r\n                measureShapesActive: true\r\n            });\r\n        case ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED:\r\n            return Object.assign({}, defaultMeasureShapesTool);\r\n\r\n        case ActionTypes.MEASURE_POINTS_BUTTON_PRESSED:\r\n            return Object.assign({}, defaultMeasureShapesTool);\r\n\r\n        case ActionTypes.MOUSE_ROLL_OVER_SHAPE:\r\n            return Object.assign({}, state, {\r\n                hoveredShape: state.measureShapesActive ? action.shape : null\r\n            });\r\n        case ActionTypes.MOUSE_ROLL_OUT_SHAPE:\r\n            return Object.assign({}, state, {\r\n                hoveredShape: null\r\n            });\r\n        case ActionTypes.MOUSE_CLICKED_ON_SHAPE:\r\n            if (!state.measureShapesActive) {\r\n                return state;\r\n            }\r\n            // measureShapesActive\r\n\r\n            if (state.measureShapesFirstClick) {\r\n                return Object.assign({}, state, {\r\n                    firstMeasuredShape: action.shape,\r\n                    firstMeasuredLayer: action.layer,\r\n                    secondMeasuredShape: null,\r\n                    secondMeasuredLayer: null,\r\n                    measureShapesFirstClick: false,\r\n                    distance: undefined,\r\n                    shortestSegment: null\r\n                })\r\n            }\r\n            else {    // second click\r\n                if (action.shape === state.firstMeasuredShape) {\r\n                    return state;  // second click on the same shape\r\n                }\r\n\r\n                let shape1 = state.firstMeasuredShape.geom;\r\n                let shape2 = action.shape.geom;\r\n                let distance, shortestSegment;\r\n                // if (shape1 instanceof Flatten.Polygon && shape2 instanceof Flatten.Polygon) {\r\n                //     [distance, shortestSegment] = Flatten.Distance.polygon2polygon(shape1, shape2);\r\n                // }\r\n                // else {\r\n                [distance, shortestSegment] = Flatten.Distance.distance(shape1, shape2);\r\n                // }\r\n\r\n\r\n                return Object.assign({}, state, {\r\n                    secondMeasuredShape: action.shape,\r\n                    secondMeasuredLayer: action.layer,\r\n                    measureShapesFirstClick: true,\r\n                    distance: distance,\r\n                    shortestSegment: shortestSegment\r\n                });\r\n            }\r\n        case ActionTypes.MOUSE_DOWN_ON_STAGE:\r\n            if (state.hoveredShape || is_mobile) {\r\n                return state\r\n            }\r\n            else {\r\n                return Object.assign({}, state, {\r\n                    measureShapesFirstClick: true,\r\n                    firstMeasuredShape: null,\r\n                    firstMeasuredLayer: null,\r\n                    secondMeasuredShape: null,\r\n                    secondMeasuredLayer: null,\r\n                    distance: undefined,\r\n                    shortestSegment: null\r\n                });\r\n            }\r\n\r\n        case ActionTypes.DELETE_LAYER_BUTTON_PRESSED:\r\n            if (action.layer === state.firstMeasuredLayer ||\r\n                action.layer === state.secondMeasuredLayer) {\r\n                return Object.assign({}, defaultMeasureShapesTool);\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED:\r\n            if (action.layer.displayed &&\r\n                (action.layer === state.firstMeasuredLayer ||\r\n                    action.layer === state.secondMeasuredLayer)) {\r\n                return Object.assign({}, defaultMeasureShapesTool);\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default measureShapesTool;","import * as ActionTypes from \"../actionTypes\";\r\n\r\nconst documentDefaultState = {\r\n    id: undefined,\r\n    name: \"\",\r\n    owner: \"Alex Bol\",\r\n    lastUpdated: undefined\r\n};\r\n\r\nconst cloudStorageDefaultState = {\r\n    document: documentDefaultState,\r\n    documentsList: {}\r\n};\r\n\r\nfunction isUpToDate(stateDocumentsList, actionDocumentsList) {\r\n    if (actionDocumentsList === null || actionDocumentsList === undefined)\r\n        return true;\r\n\r\n    if (Object.keys(stateDocumentsList).length !== Object.keys(actionDocumentsList).length)\r\n        return false;\r\n    for (let key in stateDocumentsList) {\r\n        if (!(actionDocumentsList.hasOwnProperty(key) && (stateDocumentsList[key].lastUpdated !== actionDocumentsList[key].lastUpdated))) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst cloudStorage = (state = cloudStorageDefaultState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    id: action.id,\r\n                    name: action.name,\r\n                    owner: action.owner,\r\n                    lastUpdated: action.lastUpdated\r\n                }\r\n            };\r\n\r\n        case ActionTypes.REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    id: action.id,\r\n                    name: action.name,\r\n                    owner: action.owner,\r\n                    lastUpdated: action.lastUpdated\r\n                }\r\n            };\r\n\r\n        case ActionTypes.REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    ...state.document,\r\n                    lastUpdated: action.lastUpdated\r\n                }\r\n            };\r\n\r\n        case ActionTypes.DOCUMENT_NAME_UPDATED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    ...state.document,\r\n                    name: action.name\r\n                }\r\n            };\r\n\r\n        case ActionTypes.DELETE_DOCUMENT_FROM_DATABASE_SUCCEED:\r\n            let { [action.id]: document, ...newList } = state.documentsList;\r\n            return {\r\n                ...state,\r\n                document: state.document.id === action.id ? documentDefaultState : state.document,\r\n                documentsList: newList\r\n            };\r\n\r\n        case ActionTypes.DOCUMENT_SELECTED_FROM_LIST:\r\n            return {\r\n                ...state,\r\n                document: action.document\r\n            };\r\n\r\n        case ActionTypes.CLEAR_ALL_BUTTON_CLICKED:\r\n            return {\r\n                ...state,\r\n                document: documentDefaultState\r\n            };\r\n\r\n        case ActionTypes.REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED:\r\n            return isUpToDate(state.documentsList, action.documentsList) ?\r\n                state :\r\n            {\r\n                ...state,\r\n                documentsList: action.documentsList\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cloudStorage","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\n\r\nimport {combineReducers} from 'redux';\r\n\r\nimport auth from \"./reducers/auth\";\r\nimport app from \"./reducers/app\";\r\nimport layers from \"./reducers/layers\";\r\nimport mouse from \"./reducers/mouse\";\r\nimport measureShapesTool from \"./reducers/measureShapesTool\";\r\nimport cloudStorage from \"./reducers/cloudStorage\";\r\n\r\nconst reducer = combineReducers({\r\n    auth,\r\n    app,\r\n    layers,\r\n    cloudStorage,\r\n    measureShapesTool,\r\n    mouse\r\n});\r\n\r\nexport default reducer;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://debug-viewer.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const resizeStage = () => {\r\n    return {\r\n        type: ActionTypes.STAGE_RESIZED\r\n    }\r\n};\r\n\r\nexport const destroyStage = () => {\r\n    return {\r\n        type: ActionTypes.STAGE_UNMOUNTED\r\n    }\r\n};\r\n\r\nexport const toggleUnits = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_UNITS_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleWidthMode = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_WIDTH_MODE_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleDisplayVertices = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_VERTICES_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleDisplayLabels = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_LABELS_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleAboutPopup = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_ABOUT_POPUP_CLICKED\r\n    }\r\n};\r\n\r\n// export const closeAboutPopup = () => {\r\n//     return {\r\n//         type: ActionTypes.CLOSE_ABOUT_POPUP_BUTTON_PRESSED\r\n//     }\r\n// };\r\n\r\nexport const toggleMeasureBetweenPoints = () => {\r\n    return {\r\n        type: ActionTypes.MEASURE_POINTS_BUTTON_PRESSED\r\n    }\r\n};\r\n\r\nexport const toggleMeasureBetweenShapes = () => {\r\n    return {\r\n        type: ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED\r\n    }\r\n};\r\n\r\nexport const applySkeletonRecognition = () => {\r\n    return {\r\n        type: ActionTypes.SKELETON_RECOGNITION_BUTTON_PRESSED\r\n    }\r\n};\r\n\r\nexport const handleFileSelect = (files, stage, layers) => {\r\n    return {\r\n        type: ActionTypes.FILENAME_LIST_SELECTED,\r\n        files,\r\n        stage,\r\n        layers\r\n    }\r\n};\r\n\r\nexport const setHomeView = (stage, shape) => {\r\n    return {\r\n        type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n        stage,\r\n        shape\r\n    }\r\n};\r\n\r\nexport const togglePanByDrag = () => {\r\n    return {\r\n        type: ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED\r\n    }\r\n};\r\n\r\nexport const handleMouseRollOverShape = (shape) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_ROLL_OVER_SHAPE,\r\n        shape\r\n    }\r\n};\r\n\r\nexport const handleMouseRollOutShape = () => {\r\n    return {\r\n        type: ActionTypes.MOUSE_ROLL_OUT_SHAPE\r\n    }\r\n};\r\n\r\nexport const handleClickOnShape = (shape, layer) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_CLICKED_ON_SHAPE,\r\n        shape,\r\n        layer\r\n    }\r\n};\r\n\r\nexport const asyncOperationStarted = () => {\r\n    return {\r\n        type: ActionTypes.ASYNC_OPERATION_STARTED\r\n    }\r\n};\r\n\r\nexport const asyncOperationEnded = () => {\r\n    return {\r\n        type: ActionTypes.ASYNC_OPERATION_ENDED\r\n    }\r\n};\r\n\r\nexport const openDocumentOnCloud = () => {\r\n    return {\r\n        type: ActionTypes.MANAGE_CLOUD_STORAGE_BUTTON_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleLayerList = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_SHOW_LAYER_LIST_CLICKED\r\n    }\r\n};\r\n\r\n\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const addEmptyLayer = (stage) => {\r\n    return {\r\n        type: ActionTypes.ADD_LAYER_BUTTON_PRESSED,\r\n        stage: stage\r\n    }\r\n};\r\n\r\nexport const addNewLayer = (layer) => {\r\n    return {\r\n        type: ActionTypes.ADD_NEW_LAYER,\r\n        layer\r\n    }\r\n};\r\n\r\nexport const deleteAffectedLayer = () => {\r\n    return {\r\n        type: ActionTypes.DELETE_LAYER_BUTTON_PRESSED\r\n    };\r\n};\r\n\r\nexport const sortLayers = () => {\r\n    return {\r\n        type: ActionTypes.SORT_LAYERS_BUTTON_PRESSED\r\n    };\r\n};\r\n\r\nexport const toggleDisplayLayer = (layer) => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED,\r\n        layer\r\n    }\r\n};\r\n\r\nexport const toggleAffectedLayer = (event, layer) => {\r\n    event.stopPropagation();\r\n    return {\r\n        type: ActionTypes.TOGGLE_AFFECTED_LAYER_PRESSED,\r\n        layer: layer\r\n    };\r\n};\r\n\r\nexport const updateLayer = (newLayer) => {\r\n    return {\r\n        type: ActionTypes.SUBMIT_LAYER_EDIT_FORM_PRESSED,\r\n        newLayer: newLayer\r\n    };\r\n};\r\n\r\nexport const closeEditLayerForm = () => {\r\n    return {\r\n        type: ActionTypes.ESCAPE_LAYER_EDIT_FORM_PRESSED\r\n    };\r\n};\r\n\r\nexport const openAffectedLayerEditForm = () => {\r\n    return {\r\n        type: ActionTypes.OPEN_LAYER_EDIT_FORM_PRESSED,\r\n    }\r\n};\r\n\r\nexport const setAffectedNextLayer = () => {\r\n    return {\r\n        type: ActionTypes.LAYERS_LIST_ARROW_DOWN_PRESSED\r\n    }\r\n};\r\n\r\nexport const setAffectedPrevLayer = () => {\r\n    return {\r\n        type: ActionTypes.LAYERS_LIST_ARROW_UP_PRESSED\r\n    }\r\n};\r\n\r\nexport const deleteAllLayers = () => {\r\n    return {\r\n        type: ActionTypes.CLEAR_ALL_BUTTON_CLICKED,\r\n    }\r\n}\r\n\r\n\r\n\r\n","// import { Job } from '../models/job';\r\nimport Flatten from '@flatten-js/core';\r\n\r\nimport Model from '../models/model';\r\n\r\nFlatten.Image = class Image {\r\n    constructor() {\r\n        this.uri = \"\";\r\n        /**\r\n         * Center in world coordinates\r\n         * @type {Flatten.Point}\r\n         */\r\n        this.center = new Flatten.Point();\r\n        /**\r\n         * Width in world units (inch/mm)\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * Height in world units (inch/mm)\r\n         */\r\n        this.height = 0;\r\n    }\r\n    get box() {\r\n        return new Flatten.Box(\r\n            this.center.x - this.width/2,\r\n            this.center.y - this.height/2,\r\n            this.center.x + this.height/2,\r\n            this.center.y + this.height/2\r\n        );\r\n\r\n    }\r\n};\r\n\r\nexport function parseJSON(shapes) {\r\n    let models = [];\r\n    let geom;\r\n    let model;\r\n    for (let shape of JSON.parse(shapes)) {\r\n        if (shape.geom instanceof Array) {      // TODO: add \"name\" to polygon stringified\r\n            geom = new Flatten.Polygon();\r\n            for (let faceArray of shape.geom) {\r\n                geom.addFace(faceArray);\r\n            }\r\n        }\r\n        else if (shape.geom.uri) {\r\n            geom = new Flatten.Image();\r\n            geom.uri = shape.geom.uri;\r\n            geom.center = shape.geom.center;\r\n            geom.width = shape.geom.width;\r\n            geom.height = shape.geom.height;\r\n        }\r\n        else {\r\n            geom = Flatten[shape.geom.name](shape.geom);\r\n        }\r\n        model = new Model(geom, shape.style, shape.label);\r\n        models.push(model);\r\n    }\r\n\r\n    return models;\r\n}\r\n","import * as ActionTypes from \"../actionTypes\";\r\nimport axios from \"../../axios-database\";\r\nimport * as appActions from \"../actions/appActions\";\r\nimport * as layerActions from '../../store/actions/layersActions';\r\nimport Layer from \"../../models/layer\";\r\nimport {parseJSON} from \"../../dataParsers/parseJSON\";\r\nimport Layers from \"../../models/layers\";\r\n\r\nconst defaultName = \"document\";\r\n\r\nexport const getNewName = (documents) => {\r\n    let name = defaultName;\r\n    let inc = 1;\r\n    let comparator = (document) => document.name === name;\r\n    while (Object.values(documents).find(comparator)) {\r\n        name = defaultName + inc;\r\n        inc++;\r\n    }\r\n    return name;\r\n};\r\n\r\nexport const registerDocumentAddedToDatabase = (id, lastUpdated) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED,\r\n        id: id,\r\n        lastUpdated: lastUpdated\r\n    }\r\n};\r\n\r\nexport const updateDocumentTimeStamp = (lastUpdated) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED,\r\n        lastUpdated: lastUpdated\r\n    }\r\n};\r\n\r\nexport const updateDocumentName = (name) => {\r\n    return {\r\n        type: ActionTypes.DOCUMENT_NAME_UPDATED,\r\n        name\r\n    }\r\n};\r\n\r\nexport const clearCurrentDocument = () => {\r\n    return {\r\n        type: ActionTypes.CLEAR_ALL_BUTTON_CLICKED,\r\n    }\r\n};\r\n\r\nexport const updateCurrentDocument = (document) => {\r\n    return {\r\n        type: ActionTypes.DOCUMENT_SELECTED_FROM_LIST,\r\n        document\r\n    }\r\n};\r\n\r\nexport const requestFetchDocumentFromDatabaseSucceed = (id, name, owner, lastUpdated) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED,\r\n        id,\r\n        name,\r\n        owner,\r\n        lastUpdated\r\n    }\r\n};\r\n\r\nexport const deleteDocumentFromDatabaseSucceed = (id) => {\r\n    return {\r\n        type: ActionTypes.DELETE_DOCUMENT_FROM_DATABASE_SUCCEED,\r\n        id\r\n    }\r\n};\r\n\r\nexport const requestFetchDocumentsFromDatabaseSucceed = (documentsList) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED,\r\n        documentsList\r\n    }\r\n};\r\n\r\nexport const fetchDocumentsFromDatabase = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        const url = '/documents.json' + queryParams;\r\n        axios.get(url)\r\n            .then(response => {\r\n                dispatch(requestFetchDocumentsFromDatabaseSucceed(response.data));\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const deleteDocumentFromDatabase = (id) => {\r\n    return dispatch => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n        const url = '/documents/' + id + '.json';\r\n        axios.delete(url)\r\n            .then (response => {\r\n                // query geom by \"id\"\r\n                const queryParams = '?orderBy=\"id\"&equalTo=\"' + id + '\"';\r\n                const url = '/geom.json' + queryParams;\r\n                return axios.get(url)\r\n            })\r\n            .then (response => {\r\n                const geomId = Object.keys(response.data)[0];\r\n                return axios.delete(`/geom/${geomId}.json`)\r\n            })\r\n            .then(response => {\r\n                dispatch(deleteDocumentFromDatabaseSucceed(id));\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const fetchDocumentFromDatabase = (stage, id) => {\r\n    return dispatch => {\r\n        dispatch(layerActions.deleteAllLayers());\r\n        dispatch(appActions.asyncOperationStarted());\r\n        let name = \"\";\r\n        let lastUpdated = undefined;\r\n        let owner = \"Alex Bol\";\r\n        let firstLayer = undefined;\r\n\r\n        const docUrl = '/documents/' + id + '.json';\r\n        const queryParams = '?orderBy=\"id\"&equalTo=\"' + id + '\"';\r\n        const geomUrl = '/geom.json' + queryParams;\r\n        Promise.all([axios.get(docUrl),axios.get(geomUrl)])\r\n            .then( responses => {\r\n                name = responses[0].data.name;\r\n                lastUpdated = responses[0].data.lastUpdated;\r\n\r\n                for (let layerData of Object.values(responses[1].data)[0].layers) {\r\n                    let layer = new Layer();\r\n                    layer.shapes = parseJSON(layerData.shapes);\r\n                    layer.name = layerData.name;\r\n\r\n                    if (!firstLayer) firstLayer = layer;\r\n                    dispatch(layerActions.addNewLayer(layer));\r\n                    dispatch(layerActions.toggleDisplayLayer(layer));\r\n                }\r\n                dispatch(requestFetchDocumentFromDatabaseSucceed(id, name, owner, lastUpdated));\r\n                dispatch(appActions.setHomeView(stage, firstLayer));\r\n                // dispatch(layerActions.toggleDisplayLayer(firstLayer));\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const addDocumentToDatabase = (payload, layers, history) => {\r\n    return dispatch => {\r\n        let id = undefined;\r\n        dispatch(appActions.asyncOperationStarted());\r\n        axios.post('/documents.json', payload)\r\n            .then(response => {\r\n                id = response.data.name;\r\n                let layersJSON = Layers.toJSON(layers);\r\n                let geomPayload = {\r\n                    id: id,\r\n                    layers: layersJSON\r\n                };\r\n                return axios.post('/geom.json', geomPayload)\r\n            })\r\n            .then(response => {\r\n                dispatch(registerDocumentAddedToDatabase(id, Date.now()));\r\n                dispatch(appActions.asyncOperationEnded());\r\n\r\n                // update url\r\n                history.push('/documents/' + id);\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const updateDocumentInDatabase = (id, payload, layers) => {\r\n    return dispatch => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n        // update documents header\r\n        axios.put(`/documents/${id}.json`, payload)\r\n            .then(response => {\r\n                dispatch(updateDocumentTimeStamp(Date.now()));\r\n                // dispatch(appActions.asyncOperationEnded());\r\n\r\n                // query geom by \"id\"\r\n                const queryParams = '?orderBy=\"id\"&equalTo=\"' + id + '\"';\r\n                const url = '/geom.json' + queryParams;\r\n                return axios.get(url)\r\n            })\r\n            .then( response => {\r\n                let layersJSON = Layers.toJSON(layers);\r\n                let geomPayload = {\r\n                    id: id,\r\n                    layers: layersJSON\r\n                };\r\n                let geomId = Object.keys(response.data)[0];  // response.data.name;\r\n                return axios.put(`/geom/${geomId}.json`, geomPayload)\r\n            })\r\n            .then( reponse => {\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst button = (props) => {\r\n    let iconStyle;\r\n    switch (props.type) {\r\n        case \"trigger\":\r\n            iconStyle = classes.IconTrigger;\r\n            break;\r\n        case \"mode\":\r\n            iconStyle = props.active ? classes.IconModeActive : classes.IconModeNotActive;\r\n            break;\r\n        default:\r\n            iconStyle = classes.IconTrigger;\r\n            break;\r\n    }\r\n    // eslint-disable-next-line\r\n    let buttonStyle = props.mobileOnly ? classes[\"Button\",\"DrawerButton\"] : classes[\"Button\"];\r\n    return (\r\n        <button title={props.title} onClick={props.onClick} className={buttonStyle}>\r\n            <FontAwesome\r\n                name={props.iconName}\r\n                size='2x'\r\n                className={iconStyle}\r\n            />\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default button;","import React from 'react';\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport classes from \"./ButtonSeparator.module.css\";\r\n\r\nconst buttonSeparator = () => {\r\n    return (\r\n        <div className={classes.ButtonSeparator}>\r\n            <FontAwesome\r\n                name='ellipsis-v'\r\n                size='2x'\r\n                className={classes.IconSeparator}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default buttonSeparator;","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Separator from '../../../components/UI/ButtonSeparator/ButtonSeparator';\r\n\r\nimport classes from './ToolbarComponent.module.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\nclass ToolbarComponent extends Component {\r\n    openJobButtonClicked = () => this.refs.browseFiles.click();\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes[\"App-toolbar\"]}>\r\n                <Button type=\"trigger\" mobileOnly title=\"Show layers list\" iconName='list' onClick={this.props.onLayerListButtonClicked} />\r\n\r\n                {/*<h4>Toolbar</h4>*/}\r\n                <Button type=\"trigger\" title=\"Open files\" iconName='folder-open'\r\n                        onClick={this.openJobButtonClicked}\r\n                />\r\n\r\n                <input style={{fontSize: 16, marginTop: 5, marginBottom: 5, display: \"none\"}}\r\n                       type=\"file\" id=\"browseFiles\" ref=\"browseFiles\" name=\"files[]\" multiple\r\n                       onChange={this.props.onFileSelected}\r\n                />\r\n\r\n                {/*<Button type=\"trigger\" title=\"Save document on cloud\" iconName='save'*/}\r\n                        {/*onClick={this.props.onSaveDocumentButtonClicked}*/}\r\n                {/*/>*/}\r\n\r\n                <Button type=\"trigger\" title=\"Clean current document\" iconName='broom'\r\n                        onClick={this.props.onClearAllButtonClicked}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"trigger\" title=\"Zoom and pan to home view\" iconName='home'\r\n                        onClick={this.props.onHomeButtonPressed}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"mode\" title=\"Pan by drag\" iconName='hand-paper'\r\n                        active={!this.props.measurePointsActive}\r\n                        onClick={this.props.onPanByDragPressed}\r\n                />\r\n\r\n                <Button type=\"mode\" title=\"Measure distance\" iconName='hand-lizard'\r\n                        active={this.props.measurePointsActive}\r\n                        onClick={this.props.onMeasurePointsButtonPressed}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"trigger\" title=\"Measure distance between shapes\" iconName='ruler'\r\n                        onClick={this.props.onMeasureBetweenShapesButtonPressed}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Display solid or wire\" iconName='fill-drip'\r\n                        onClick={this.props.onToggleWidthModePressed}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Display vertices on/off\" iconName='draw-polygon'\r\n                        onClick={this.props.onToggleVerticesPressed}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Display labels on/off\" iconName='tag'\r\n                        onClick={this.props.onToggleLabelsPressed}\r\n                />\r\n\r\n                {this.props.showSkeletonRecognitionButton ? (\r\n                    <Button type=\"trigger\" title=\"Skeleton Recognition Demo\" iconName='tree'\r\n                            onClick={this.props.onSkeletonRecognitionButtonPressed}\r\n                    />\r\n                ) : null}\r\n\r\n                <Separator/>\r\n\r\n                <button className={classes[\"App-toolbar-units\"]}\r\n                        onClick={this.props.onUnitClicked}\r\n                >\r\n                    {this.props.units}\r\n                </button>\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"trigger\" title=\"About\" iconName='info'\r\n                        onClick={this.props.onShowAboutPopupPressed}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolbarComponent;","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\nimport {Box} from '@flatten-js/core';\r\nimport { Stage as CreatejsStage, Touch } from \"@createjs/easeljs\";\r\n\r\nclass Stage extends CreatejsStage {\r\n    constructor(canvas) {\r\n        super(canvas);\r\n\r\n        Touch.enable(this);\r\n        this.mouseMoveOutside = false;   // true;\r\n        // this.enableDOMEvents(false);\r\n        this.enableMouseOver(20);\r\n\r\n        if (this.canvas.clientWidth > 0 && this.canvas.clientHeight > 0) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n            // this.updateViewport(this.canvas.width, this.canvas.height);\r\n        }\r\n        this.origin = {x: this.canvas.width / 2, y: this.canvas.height / 2};\r\n        this.resolution = 0.00001;          // MM 2 Pixels when zoomFactor = 1;\r\n        this.zoomFactor = 1.0;\r\n\r\n        this.oldOrigin = {x: undefined, y: undefined};   // used by pan\r\n        // used by zoom by pinch\r\n        this.oldZoomFactor = undefined;\r\n        this.pinchAnchorX = undefined;\r\n        this.pinchAnchorY = undefined;\r\n        this.pinchStarted = false;\r\n    }\r\n\r\n    get box() {\r\n        let minX = this.C2W_X(0);\r\n        let minY = this.C2W_Y(this.canvas.height);\r\n        let maxX = this.C2W_X(this.canvas.width);\r\n        let maxY = this.C2W_Y(0);\r\n\r\n        return ( new Box(minX, minY, maxX, maxY) );\r\n    }\r\n\r\n    clone() {\r\n        let stage = new Stage(this.canvas);\r\n        return Object.assign(stage, this);\r\n    }\r\n\r\n    add(shape) {\r\n        this.addChild(shape);\r\n        return this;\r\n    }\r\n\r\n    scalingFactor() {\r\n        return this.resolution * this.zoomFactor;\r\n    }\r\n\r\n    C2W_Scalar(scalar) {\r\n        return (scalar / this.scalingFactor());\r\n    }\r\n\r\n    W2C_Scalar(scalar) {\r\n        return (this.scalingFactor() * scalar);\r\n    }\r\n\r\n    C2W_X(canvasX) {\r\n        return ((canvasX - this.origin.x) / this.scalingFactor());\r\n    }\r\n\r\n    C2W_Y(canvasY) {\r\n        return ((this.origin.y - canvasY) / this.scalingFactor());\r\n    }\r\n\r\n    W2C_X(worldX) {\r\n        return (this.scalingFactor() * worldX + this.origin.x);\r\n    }\r\n\r\n    W2C_Y(worldY) {\r\n        return (this.origin.y - this.scalingFactor() * worldY);\r\n    }\r\n\r\n    W2C(point) {\r\n        return {x: this.W2C_X(point.x), y: this.W2C_Y(point.y)}\r\n    }\r\n\r\n    panTo(newOrigin) {\r\n        this.origin = {x: newOrigin.x, y: newOrigin.y}\r\n    }\r\n\r\n    panBy(deltaX, deltaY) {\r\n        this.origin = {\r\n            x: this.origin.x + deltaX,\r\n            y: this.origin.y + deltaY\r\n        }\r\n    }\r\n\r\n    // zoom by 10% each time\r\n    zoomIn(ratio) {\r\n        let curRatio = ratio || 1.1;\r\n        this.zoomFactor = Math.min(10000000, curRatio * this.zoomFactor);\r\n    }\r\n\r\n    zoomOut(ratio) {\r\n        let curRatio = ratio || 1.1;\r\n        this.zoomFactor = Math.max(0.001, this.zoomFactor / curRatio);\r\n    }\r\n\r\n    // ZoomIn/Out + \"Focus follows mouse\"\r\n    zoom(focusX, focusY, bIn, ratio) {\r\n        let worldX = this.C2W_X(focusX);    // world coordinate of mouse focus before zoom\r\n        let worldY = this.C2W_Y(focusY);\r\n\r\n        bIn ? this.zoomIn(ratio) : this.zoomOut(ratio);\r\n\r\n        let newFocusX = this.W2C_X(worldX); // canvas coordinate after zoom\r\n        let newFocusY = this.W2C_Y(worldY);\r\n\r\n        this.panBy(focusX - newFocusX, focusY - newFocusY);\r\n\r\n        return [newFocusX, newFocusY];\r\n    }\r\n\r\n    zoomByMouse(focusX, focusY, bIn, ratio) {\r\n        this.zoom(focusX, focusY, bIn, ratio);\r\n    }\r\n\r\n    zoomToLimits(width, height) {\r\n        // prevent zero division in case of single point box\r\n        if (width === 0) width = 400000;\r\n        if (height === 0) height = 400000;\r\n        let resolution = Math.min(this.canvas.width / (1.1*width), this.canvas.height / (1.1*height));\r\n        let zoomFactor = resolution / this.resolution;\r\n        let ratio = zoomFactor / this.zoomFactor;\r\n        let bIn = true; //ratio > 1;\r\n\r\n        let focusX = this.canvas.width/2;\r\n        let focusY = this.canvas.height/2;\r\n        this.zoom(focusX, focusY, bIn, ratio);\r\n    }\r\n\r\n    resize() {\r\n        // this.origin.x = this.canvas.width / 2;\r\n        // this.origin.y = this.canvas.height / 2;\r\n        if (this.canvas.clientWidth > 0 && this.canvas.clientHeight > 0) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n        }\r\n    }\r\n\r\n    // drawSomething() {\r\n    //     let shape = new Shape();\r\n    //     shape.graphics.beginFill('red').drawRect(0, 0, 20, 20);\r\n    //     this.addChild(shape);\r\n    //     this.update();\r\n    // }\r\n\r\n    panByMouseStart() {\r\n        this.oldOrigin.x = this.origin.x;\r\n        this.oldOrigin.y = this.origin.y;\r\n        this.zoomByPinchStop();\r\n    }\r\n\r\n    panByMouseMove(dx, dy) {\r\n        if (this.pinchStarted) return;\r\n        if (dx !== undefined && dy !== undefined &&\r\n            this.oldOrigin.x !== undefined && this.oldOrigin.y !== undefined) {\r\n            this.origin = {\r\n                    x: this.oldOrigin.x + dx,\r\n                    y: this.oldOrigin.y + dy\r\n                };\r\n        }\r\n    }\r\n\r\n    panByMouseStop() {\r\n        this.oldOrigin.x = undefined;\r\n        this.oldOrigin.y = undefined;\r\n    }\r\n\r\n    panToCoordinate(x, y) {\r\n        let canvasX = this.W2C_X(x);\r\n        let canvasY = this.W2C_Y(y);\r\n\r\n        let dx = this.canvas.width / 2 - canvasX;\r\n        let dy = this.canvas.height / 2 - canvasY;\r\n        this.panBy(dx, dy);\r\n    }\r\n\r\n    zoomByPinchStart(canvasX, canvasY) {\r\n        this.oldZoomFactor = this.zoomFactor;\r\n        this.pinchAnchorX = this.C2W_X(canvasX);\r\n        this.pinchAnchorY = this.C2W_Y(canvasY);\r\n        this.pinchStarted = true;\r\n        this.panByMouseStop();\r\n    }\r\n\r\n    zoomByPinchMove(canvasX, canvasY, ratio) {\r\n        this.zoomFactor = ratio * this.oldZoomFactor;\r\n        this.origin = {\r\n            x: canvasX - this.scalingFactor() * this.pinchAnchorX,\r\n            y: canvasY + this.scalingFactor() * this.pinchAnchorY\r\n        }\r\n    }\r\n\r\n    zoomByPinchStop() {\r\n        this.oldZoomFactor = undefined;\r\n        this.pinchAnchorX = undefined;\r\n        this.pinchAnchorY = undefined;\r\n        this.pinchStarted = false;\r\n    }\r\n\r\n    clear() {\r\n        this.canvas.getContext('2d').clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n}\r\n\r\nexport default Stage;\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const registerStage = (stage) => {\r\n    return {\r\n        type: ActionTypes.NEW_STAGE_CREATED,\r\n        stage: stage\r\n    }\r\n};\r\n\r\nexport const handleMouseDown = (stage, x, y) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_DOWN_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y\r\n    }\r\n};\r\n\r\nexport const handleMouseUp = (stage, x, y) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_UP_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y\r\n    }\r\n};\r\n\r\nexport const handleMouseMove = (stage, x, y, dx, dy) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_MOVED_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y,\r\n        dx: dx,\r\n        dy: dy\r\n    }\r\n};\r\n\r\nexport const handleMouseWheelMove = (stage, x, y, delta) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_WHEEL_MOVE_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y,\r\n        delta: delta\r\n    }\r\n};\r\n\r\nexport const handlePinchDown = (stage, touchPoints) => {\r\n    return {\r\n        type: ActionTypes.PINCH_DOWN_ON_STAGE,\r\n        stage: stage,\r\n        x1: touchPoints[0].x,\r\n        y1: touchPoints[0].y,\r\n        x2: touchPoints[1].x,\r\n        y2: touchPoints[1].y\r\n    }\r\n};\r\n\r\nexport const handlePinchMove = (stage, touchPoints) => {\r\n    return {\r\n        type: ActionTypes.PINCH_MOVED_ON_STAGE,\r\n        stage: stage,\r\n        x1: touchPoints[0].x,\r\n        y1: touchPoints[0].y,\r\n        x2: touchPoints[1].x,\r\n        y2: touchPoints[1].y\r\n    }\r\n};\r\n\r\nexport const handlePinchUp = (stage) => {\r\n    return {\r\n        type: ActionTypes.PINCH_UP_ON_STAGE,\r\n        stage\r\n    }\r\n};\r\n\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport styles from \"./CanvasComponent.module.css\";\r\nimport Stage from '../../../models/stage';\r\nimport { connect } from \"react-redux\";\r\n// import * as ActionTypes from \"../../../store/actionTypes\";\r\nimport * as actions from '../../../store/actions/stageActions';\r\n\r\nclass CanvasComponent extends Component {\r\n    canvasElement = React.createRef();\r\n\r\n    handleMouseMove = (event) => {\r\n        this.props.stage.canvas.focus();\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n            this.props.handleMouseMove(\r\n                this.props.stage,\r\n                event.stageX,\r\n                event.stageY,\r\n                this.props.mouse.startX ? event.stageX - this.props.mouse.startX : undefined,\r\n                this.props.mouse.startY ? event.stageY - this.props.mouse.startY : undefined\r\n            );\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            let touchPoints = [\r\n                {\r\n                    x: event.nativeEvent.touches[0].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[0].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n                {\r\n                    x: event.nativeEvent.touches[1].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[1].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n            ];\r\n            this.props.handlePinchMove(this.props.stage, touchPoints);\r\n        }\r\n\r\n        // if (this.props.stage.pinchStarted) {\r\n        //     this.props.handleSecondTouchMove(this.props.stage, event.stageX, event.stageY);\r\n        // }\r\n        // else {\r\n        //     this.props.handleMouseMove(\r\n        //         this.props.stage,\r\n        //         event.stageX,\r\n        //         event.stageY,\r\n        //         this.props.mouse.startX ? event.stageX - this.props.mouse.startX : undefined,\r\n        //         this.props.mouse.startY ? event.stageY - this.props.mouse.startY : undefined\r\n        //     );\r\n        // }\r\n    };\r\n\r\n    handleMouseDown = (event) => {\r\n        // if (event.pointerID === -1 || event.pointerID === 0) {\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n            this.props.handleMouseDown(this.props.stage, event.stageX, event.stageY);\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            let touchPoints = [\r\n                {\r\n                    x: event.nativeEvent.touches[0].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[0].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n                {\r\n                    x: event.nativeEvent.touches[1].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[1].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n            ];\r\n            this.props.handlePinchDown(this.props.stage, touchPoints);\r\n        }\r\n    };\r\n\r\n    handleMouseUp = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n            this.props.handleMouseUp(this.props.stage);\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            this.props.handlePinchUp(this.props.stage);\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = (event) => {   // nothing works except click\r\n        this.props.stage.canvas.blur();\r\n        document.body.focus();\r\n    };\r\n\r\n    handleMouseWheel = (event) => {\r\n        /*event.preventDefault();*/\r\n\r\n        let delta = event.detail || event.wheelDelta;\r\n        if (delta !== 0) {\r\n            this.props.handleMouseWheelMove(this.props.stage, event.offsetX, event.offsetY, delta);\r\n        }\r\n    };\r\n\r\n    handleMouseWheelFox = (event) => {\r\n        /*event.preventDefault();*/\r\n        if (event.detail !== 0) {\r\n            this.props.handleMouseWheelMove(this.props.stage, event.layerX, event.layerY, -event.detail);\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        let stage = new Stage(this.canvasElement.current);\r\n\r\n        // stage.setClearColor(\"#FFFFFF\");\r\n        // stage.update();\r\n\r\n        stage.on(\"stagemousedown\", this.handleMouseDown);\r\n        stage.on(\"stagemousemove\", this.handleMouseMove);\r\n        // stage.on(\"click\", this.handleMouseDown);\r\n        stage.on(\"stagemouseup\", this.handleMouseUp);\r\n        stage.on(\"mouseleave\", this.handleMouseLeave);\r\n        stage.canvas.addEventListener(\"mousewheel\", this.handleMouseWheel, {passive: true});\r\n        stage.canvas.addEventListener(\"DOMMouseScroll\", this.handleMouseWheelFox, {passive: true});\r\n\r\n        this.props.registerStage(stage);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <canvas\r\n                tabIndex=\"1\"\r\n                ref={this.canvasElement}\r\n                id=\"mainCanvas\"\r\n                className={styles[\"App-canvas\"]}\r\n                width=\"100\"\r\n                height=\"100\"\r\n            >\r\n            </canvas>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        stage: state.app.stage,\r\n        mouse: state.mouse\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        registerStage: (stage) => dispatch(actions.registerStage(stage)),\r\n        handleMouseDown: (stage, x, y) => dispatch(actions.handleMouseDown(stage, x, y)),\r\n        handleMouseUp: (stage, x, y) => dispatch(actions.handleMouseUp(stage, x, y)),\r\n        handleMouseMove: (stage, x, y, dx, dy) => dispatch(actions.handleMouseMove(stage, x, y, dx, dy)),\r\n        handleMouseWheelMove: (stage, x, y, delta) => dispatch(actions.handleMouseWheelMove(stage, x, y, delta)),\r\n        handlePinchDown: (stage, touchPoints) => dispatch(actions.handlePinchDown(stage, touchPoints)),\r\n        handlePinchMove: (stage, touchPoints) => dispatch(actions.handlePinchMove(stage, touchPoints)),\r\n        handlePinchUp: (stage) => dispatch(actions.handlePinchUp(stage))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CanvasComponent);\r\n","/**\r\n * Created by alexanderbol on 17/06/2017.\r\n */\r\nimport React from 'react';\r\nimport styles from './StatusComponent.module.css';\r\n\r\nconst StatusComponent = () => {\r\n    return (\r\n        <div className={styles[\"App-status-bar\"]}>\r\n            <div>\r\n                <h5>\r\n                    &nbsp;\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusComponent;","import React, {Component} from 'react';\r\n// import Utils from \"../utils\";\r\n\r\nclass StageComponent extends Component {\r\n    // shouldComponentUpdate useless because always returns \"true\",\r\n    // Don't know why, maybe because of children?\r\n    // ----------------------------------------------------------\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     if (Utils.is_equal(this.props, nextProps)) {\r\n    //         return false;\r\n    //     }\r\n    //     return true;\r\n    // }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.stage.canvas && this.props.stage.canvas.getContext('2d')) {\r\n\r\n            let origin = this.props.stage.origin;\r\n            let zoomFactor = this.props.stage.zoomFactor*this.props.stage.resolution;\r\n            this.props.stage.setTransform(origin.x, origin.y, zoomFactor, -zoomFactor);\r\n\r\n            this.props.stage.update();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onStageUnmounted();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StageComponent;","import {Point, Segment, Circle, Arc, Polygon, Box} from '@flatten-js/core';\r\nimport {Graphics} from '@createjs/easeljs';\r\n\r\n/* Provide conversion methods from FlattenJS objects to CreateJS Graphics */\r\nexport function graphics(shape, style = undefined) {\r\n    if (shape instanceof Point) {\r\n        return graphics_point(shape, style);\r\n    }\r\n    if (shape instanceof Segment) {\r\n        return graphics_segment(shape, style);\r\n    }\r\n    if (shape instanceof Arc) {\r\n        return graphics_arc(shape, style);\r\n    }\r\n    if (shape instanceof Circle) {\r\n        return graphics_circle(shape, style);\r\n    }\r\n    if (shape instanceof Box) {\r\n        return graphics_box(shape, style);\r\n    }\r\n    if (shape instanceof Polygon) {\r\n        return graphics_polygon(shape, style);\r\n    }\r\n    return null;\r\n}\r\n\r\n// Point.prototype.graphics = function(style) {\r\nfunction graphics_point(point, style) {\r\n    let radius = (style && style.radius) ? style.radius : 3;\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    let graphics = new Graphics();\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n    graphics.circle = graphics.drawCircle(point.x, point.y, radius).command;\r\n    return graphics;\r\n};\r\n\r\n// Segment.prototype.graphics = function(style) {\r\nfunction graphics_segment(segment, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle !== undefined ? style.strokeStyle : 2;\r\n    let ignoreScale = style && style.ignoreScale !== undefined ? style.ignoreScale : true;\r\n    let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    return graphics\r\n        .setStrokeStyle(strokeStyle,1,0,10,ignoreScale)\r\n        .beginStroke(stroke)\r\n        .moveTo(segment.ps.x, segment.ps.y)\r\n        .lineTo(segment.pe.x, segment.pe.y)\r\n        .endStroke();\r\n};\r\n\r\n// Arc.prototype.graphics = function(style) {\r\nfunction graphics_arc(arc, style) {\r\n    // let startAngle = 2 * Math.PI - this.startAngle;\r\n    // let endAngle =  2 * Math.PI - this.endAngle;\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 2;\r\n    let ignoreScale = style && style.ignoreScale !== undefined ? style.ignoreScale : true;\r\n    let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    return graphics\r\n        .setStrokeStyle(strokeStyle,1,0,10,ignoreScale)\r\n        .beginStroke(stroke)\r\n        .arc(arc.pc.x, arc.pc.y, arc.r, arc.startAngle, arc.endAngle, !arc.counterClockwise)\r\n        .endStroke();\r\n};\r\n\r\n// Circle.prototype.graphics = function(style) {\r\nfunction graphics_circle(circle, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    // let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    let stroke = style && style.stroke ? style.stroke : \"#FF0303\";\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    graphics.setStrokeStyle(strokeStyle,0,0,10,true);\r\n    graphics.stroke = graphics.beginStroke(stroke).command;\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n\r\n    // graphics.setStrokeStyle(2).beginStroke(\"black\").beginFill(\"red\").drawCircle(pcx, pcy, r);\r\n    return graphics\r\n        .setStrokeStyle(strokeStyle,0,0,10,true)\r\n        .beginStroke(stroke)\r\n        .drawCircle(circle.pc.x, circle.pc.y, circle.r)\r\n        .endStroke();\r\n};\r\n\r\n// Box.prototype.graphics = function(style) {\r\nfunction graphics_box(box, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    // graphics.setStrokeStyle(2).beginStroke(\"black\").beginFill(\"red\").drawCircle(pcx, pcy, r);\r\n    return graphics\r\n        .setStrokeStyle(strokeStyle,0,0,10,true)\r\n        .beginStroke(stroke)\r\n        .drawRect(box.xmin, box.ymin, box.xmax-box.xmin, box.ymax-box.ymin);\r\n};\r\n\r\nfunction setGraphicsEdgeSegment(graphics, segment) {\r\n    graphics.lineTo(segment.pe.x, segment.pe.y);\r\n}\r\n\r\nfunction setGraphicsEdgeArc(graphics, arc) {\r\n    // let startAngle = 2 * Math.PI - arc.startAngle;\r\n    // let endAngle = 2 * Math.PI - arc.endAngle;\r\n    graphics.arc(arc.pc.x, arc.pc.y, arc.r, arc.startAngle, arc.endAngle, !arc.counterClockwise);\r\n}\r\n\r\nfunction setGraphicsEdge(graphics, edge) {\r\n    if (edge.shape instanceof Segment) {\r\n        setGraphicsEdgeSegment(graphics, edge.shape);\r\n    }\r\n    else if (edge.shape instanceof Arc) {\r\n        setGraphicsEdgeArc(graphics, edge.shape);\r\n    }\r\n}\r\n\r\nfunction setGraphicsFace(graphics, face) {\r\n    let ps = face.first.start;\r\n    graphics.moveTo(ps.x, ps.y);\r\n\r\n    for (let edge of face) {\r\n        setGraphicsEdge(graphics, edge);\r\n    }\r\n}\r\n\r\n// Polygon.prototype.graphics = function(style) {\r\nfunction graphics_polygon(polygon, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    let stroke = style && style.stroke ? style.stroke : \"#FF0303\";\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    graphics.setStrokeStyle(strokeStyle,0,0,10,true);\r\n    graphics.stroke = graphics.beginStroke(stroke).command;\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n\r\n    for (let face of polygon.faces) {\r\n        setGraphicsFace(graphics, face);\r\n    }\r\n\r\n    graphics.endStroke();\r\n    return graphics;\r\n};\r\n\r\n","const Utils = {\r\n    is_equal: (obj1, obj2) => {\r\n        let equal = true;\r\n        for (let key of Object.keys(obj2)) {\r\n            if (obj2[key] !== obj1[key]) {\r\n                equal = false;\r\n                break;\r\n            }\r\n        }\r\n        return equal;\r\n    }\r\n};\r\n\r\nexport default Utils;","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Shape} from '@createjs/easeljs';\r\nimport {graphics} from '../../../../models/graphics';\r\nimport Utils from '../../../../models/utils';\r\n\r\nexport class ShapeComponent extends Component {\r\n    constructor(params) {\r\n        super();\r\n\r\n        this.shape = new Shape();\r\n        params.stage.addChild(this.shape);\r\n\r\n        this.vertexShapes = [];\r\n\r\n        if (params.model.geom.vertices) {\r\n            for (let vertex of params.model.geom.vertices) {\r\n                let vertexShape = new Shape();\r\n                vertexShape.geom = vertex;   // augment Shape with geom struct\r\n                vertexShape.mouseEnabled = false;\r\n                params.stage.addChild(vertexShape);\r\n                this.vertexShapes.push(vertexShape);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleMouseOver = (event) => {\r\n        this.props.onMouseOver(this.props.model);\r\n    };\r\n\r\n    handleMouseOut = (event) => {\r\n        this.props.onMouseOut();\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        this.props.onClick(this.props.model, this.props.layer);\r\n    };\r\n\r\n    redrawVertices(stroke, fill, alpha) {\r\n        let stage = this.props.stage;\r\n\r\n        for (let vertexShape of this.vertexShapes) {\r\n            let vertex = vertexShape.geom;\r\n            if (vertexShape.graphics.isEmpty()) {\r\n                vertexShape.graphics = graphics(vertex,   // vertex.graphics({\r\n                    {\r\n                        stroke: stroke,     // this.props.color,\r\n                        fill: fill,\r\n                        radius: 3. / (stage.zoomFactor * stage.resolution)\r\n                    });\r\n            }\r\n            else {\r\n                vertexShape.graphics.circle.radius = 3. / (stage.zoomFactor * stage.resolution);\r\n                vertexShape.graphics.fill.style = fill;\r\n            }\r\n            vertexShape.alpha = alpha;\r\n        }\r\n    }\r\n\r\n    redraw() {\r\n        // Draw shape\r\n        let stage = this.props.stage;\r\n        let color = (this.props.hovered || this.props.selected) ? \"black\" : this.props.color;\r\n        let alpha = (this.props.hovered || this.props.selected) ? 1.0 : 0.6;\r\n        let widthOn = this.props.widthOn;\r\n\r\n        let strokeStyle = this.props.model.geom.aperture ? this.props.model.geom.aperture : undefined;\r\n        let fill = (widthOn && !this.props.displayVertices) ? this.props.color : \"white\";\r\n\r\n        if (this.shape.graphics.isEmpty()) {\r\n            this.shape.graphics = graphics(this.props.model.geom,{\r\n                strokeStyle: strokeStyle,\r\n                ignoreScale: true,\r\n                stroke: color,\r\n                fill: fill,\r\n                radius: 3. / (stage.zoomFactor * stage.resolution)\r\n            });\r\n\r\n            // this.skeletonShape = new Shape();\r\n            // this.skeletonShape.graphics = this.props.model.geom.graphics({\r\n            //     strokeStyle: 1,\r\n            //     ignoreScale: true,\r\n            //     stroke: color,\r\n            //     fill: fill,\r\n            //     radius: 3. / (stage.zoomFactor * stage.resolution)\r\n            // });\r\n            // this.skeletonShape.alpha = 1;\r\n            // this.props.stage.addChild(this.skeletonShape);\r\n        }\r\n        else {\r\n            if (this.shape.graphics.stroke) this.shape.graphics.stroke.style = color;\r\n            if (this.shape.graphics.fill) this.shape.graphics.fill.style = fill;\r\n            if (this.shape.graphics.circle) this.shape.graphics.circle.radius =\r\n                3. / (stage.zoomFactor * stage.resolution);\r\n        }\r\n        this.shape.alpha = this.props.displayed ? alpha : 0.0;\r\n\r\n        // let box = this.props.model.geom.box;\r\n        // this.shape.cache(box.xmin, box.ymin, box.xmax - box.xmin, box.ymax - box.ymin);\r\n\r\n        // Draw vertices\r\n        alpha = this.props.displayed && this.props.displayVertices ? 1.0 : 0.0;\r\n        this.redrawVertices(color, color, alpha);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.shape.on(\"mouseover\", this.handleMouseOver);\r\n        this.shape.on(\"mouseout\", this.handleMouseOut);\r\n        this.shape.on(\"click\", this.handleClick);\r\n\r\n        // this.shape.mouseEnabled = false;\r\n\r\n        this.redraw();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (Utils.is_equal(this.props, nextProps)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.redraw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.shape.off(\"mouseover\", this.handleMouseOver);\r\n        this.shape.off(\"mouseout\", this.handleMouseOut);\r\n        this.shape.off(\"click\", this.handleClick);\r\n        this.props.stage.removeChild(this.shape);\r\n        this.shape.graphics.clear();\r\n        for (let vertexShape of this.vertexShapes) {\r\n            this.props.stage.removeChild(vertexShape);\r\n        }\r\n        this.vertexShapes = [];\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Bitmap} from '@createjs/easeljs';\r\nimport '../../../../models/graphics';\r\nimport Utils from '../../../../models/utils';\r\n// import storage from '../../../../firebase-storage';\r\n\r\nexport class ImageComponent extends Component {\r\n    handleMouseOver = (event) => {\r\n        this.props.onMouseOver(this.props.model);\r\n    };\r\n\r\n    handleMouseOut = (event) => {\r\n        this.props.onMouseOut();\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        this.props.onClick(this.props.model, this.props.layer);\r\n    };\r\n\r\n    redraw() {\r\n        if (!this.bitmap) return;\r\n        // Draw shape\r\n        let alpha = 1; // (this.props.hovered || this.props.selected) ? 1.0 : 0.6;\r\n        this.bitmap.alpha = this.props.displayed ? alpha : 0.0;\r\n\r\n        let width = this.props.model.geom.width;\r\n        let ratio = this.bitmap.image.naturalWidth/this.bitmap.image.naturalHeight;\r\n        this.props.model.geom.height = this.props.model.geom.width / ratio;\r\n        let scaleX = width/this.bitmap.image.naturalWidth; // 1. / (stage.zoomFactor * stage.resolution);\r\n        let scaleY = width/(this.bitmap.image.naturalHeight*ratio);\r\n        let tx = this.props.model.geom.center.x; // stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n        let ty = this.props.model.geom.center.y; // -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n\r\n        this.bitmap.setTransform(tx, ty, scaleX, -scaleY);\r\n\r\n        this.bitmap.regX = this.bitmap.image.naturalWidth/2;\r\n        this.bitmap.regY = this.bitmap.image.naturalHeight/2;\r\n\r\n        // let box = this.state.polygon.geom.box;\r\n        // this.shape.cache(box.xmin, box.ymin, box.xmax - box.xmin, box.ymax - box.ymin);\r\n    }\r\n\r\n    loadImage() {\r\n        const img = new Image();\r\n\r\n        img.onload = () => {\r\n            // img.crossOrigin=\"Anonymous\";\r\n            this.bitmap = new Bitmap(img);\r\n            this.props.stage.addChild(this.bitmap);\r\n\r\n            // this.bitmap.on(\"mouseover\", this.handleMouseOver);\r\n            // this.bitmap.on(\"mouseout\", this.handleMouseOut);\r\n            // this.bitmap.on(\"click\", this.handleClick);\r\n\r\n            // this.shape.mouseEnabled = false;\r\n            this.redraw();\r\n\r\n            this.props.onImageLoaded(this.props.model, this.props.layer, img);\r\n        };\r\n        img.setAttribute('crossOrigin', 'anonymous'); // works for me\r\n\r\n        // Create a reference from a Google Cloud Storage URI\r\n        //const ref = storage.refFromURL(this.props.model.geom.uri);\r\n\r\n        // ref.getDownloadURL()\r\n        //    .then( url => {\r\n        //\r\n        //         img.src = url;\r\n        //     })\r\n        //     .catch( error => console.log(error))\r\n\r\n        img.src = this.props.model.geom.uri;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadImage()\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (Utils.is_equal(this.props, nextProps)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.redraw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // this.bitmap.off(\"mouseover\", this.handleMouseOver);\r\n        // this.bitmap.off(\"mouseout\", this.handleMouseOut);\r\n        // this.bitmap.off(\"click\", this.handleClick);\r\n\r\n        this.props.stage.removeChild(this.bitmap);\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {ShapeComponent} from './graphics/shapeComponent';\r\nimport {ImageComponent} from \"./graphics/imageComponent\";\r\n\r\nexport class LayerComponent extends Component {\r\n    render() {\r\n        return (\r\n            this.props.layer.shapes.map((shape, index) => {\r\n                return shape.geom.uri ? (\r\n                    <ImageComponent\r\n                        key={index}\r\n                        stage={this.props.stage}\r\n                        layer={this.props.layer}\r\n                        model={shape}\r\n                        displayed={this.props.layer.displayed}\r\n                        hovered={shape === this.props.hoveredShape}\r\n                        selected={\r\n                            shape === this.props.firstMeasuredShape ||\r\n                            shape === this.props.secondMeasuredShape\r\n                        }\r\n                        color={this.props.layer.color}\r\n                        widthOn={this.props.widthOn}\r\n                        displayLabels={this.props.displayLabels}\r\n                        zoomFactor={this.props.zoomFactor}\r\n                        onMouseOver={this.props.onMouseOver}\r\n                        onMouseOut={this.props.onMouseOut}\r\n                        onClick={this.props.onClick}\r\n                        onImageLoaded={this.props.onImageLoaded}\r\n                    />\r\n                    ) : (\r\n                    <ShapeComponent\r\n                        key={index}\r\n                        stage={this.props.stage}\r\n                        layer={this.props.layer}\r\n                        model={shape}\r\n                        displayed={this.props.layer.displayed}\r\n                        hovered={shape === this.props.hoveredShape}\r\n                        selected={\r\n                            shape === this.props.firstMeasuredShape ||\r\n                            shape === this.props.secondMeasuredShape\r\n                        }\r\n                        color={this.props.layer.color}\r\n                        widthOn={this.props.widthOn}\r\n                        displayVertices={this.props.displayVertices}\r\n                        zoomFactor={this.props.zoomFactor}\r\n                        onMouseOver={this.props.onMouseOver}\r\n                        onMouseOut={this.props.onMouseOut}\r\n                        onClick={this.props.onClick}\r\n                    /> )\r\n                }\r\n            )\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport classes from '../LabelsLayerComponent/labelsLayer.module.css';\r\n\r\nconst labelComponent = ( {stage, shape} ) => {\r\n    let center = shape.geom.center || shape.geom;  // Point has no method center\r\n    let left = stage.canvas.offsetLeft + stage.W2C_X(center.x) + 6;\r\n    let top = stage.canvas.offsetTop + stage.W2C_Y(center.y) - 4;\r\n    let inside = left > stage.canvas.offsetLeft && left < stage.canvas.offsetLeft + stage.canvas.width &&\r\n        top > stage.canvas.offsetTop && top < stage.canvas.offsetTop + stage.canvas.height;\r\n\r\n    return inside ? (\r\n        <div style={{position:\"absolute\", left:left+\"px\", top: top+\"px\"}} className={classes.LabelComponent}>\r\n            <h5>{shape.label}</h5>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default labelComponent;","import React from 'react';\r\nimport LabelComponent from '../domelements/labelComponent';\r\n\r\nconst labelsLayerComponent = ({stage, layer, displayLabels}) => {\r\n    return (layer.displayed && displayLabels) ? (\r\n        layer.shapes.map((shape, index) => {\r\n                return (shape.label && shape.label.trim() !== \"\") ? (\r\n                    <LabelComponent\r\n                        key={index}\r\n                        stage={stage}\r\n                        shape={shape}\r\n                    />) : null;\r\n            }\r\n        )\r\n    ) : null;\r\n};\r\n\r\nexport default labelsLayerComponent;","import React, {Component} from 'react';\r\nimport {LayerComponent} from \"./layerComponent\";\r\nimport LabelsLayerComponent from \"./LabelsLayerComponent/labelsLayerComponent\";\r\nimport Layers from \"../../../models/layers\";\r\n\r\nclass LayersComponent extends Component {\r\n    componentDidMount() {\r\n        if (this.props.layers.length > 0 && this.props.stage) {\r\n            let affectedLayer = Layers.getAffected(this.props.layers);\r\n            if (affectedLayer) {\r\n                this.props.setHomeView(this.props.stage, affectedLayer);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return this.props.layers.map((layer) =>\r\n            <React.Fragment key={layer.name}>\r\n                <LayerComponent\r\n                    stage={this.props.stage}\r\n                    layer={layer}\r\n                    color={layer.color}\r\n                    displayed={layer.displayed}\r\n                    displayVertices={this.props.displayVertices}\r\n                    displayLabels={this.props.displayLabels}\r\n                    widthOn={this.props.widthOn}\r\n                    hoveredShape={this.props.hoveredShape}\r\n                    firstMeasuredShape={this.props.firstMeasuredShape}\r\n                    secondMeasuredShape={this.props.secondMeasuredShape}\r\n                    zoomFactor={this.props.zoomFactor}\r\n                    onMouseOver={this.props.onMouseOver}\r\n                    onMouseOut={this.props.onMouseOut}\r\n                    onClick={this.props.onClick}\r\n                    onImageLoaded={this.props.onImageLoaded}\r\n                />\r\n                <LabelsLayerComponent\r\n                    stage={this.props.stage}\r\n                    layer={layer}\r\n                    displayed={layer.displayed}\r\n                    displayLabels={this.props.displayLabels}\r\n\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LayersComponent;\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Stage from \"../models/stage\";\r\nimport * as actions from '../store/actions/stageActions';\r\n\r\nclass MeasurePointsTool extends Component {\r\n    measureCanvas = React.createRef();\r\n    measureStage = null;\r\n\r\n    state = {\r\n        startX: undefined,\r\n        startY: undefined,\r\n        endX: undefined,\r\n        endY: undefined,\r\n        measureStarted: false\r\n    };\r\n\r\n    handleMouseDown = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.measureStage.clear();\r\n\r\n        if (this.state.measureStarted) {   // second click - clear measurement\r\n            this.setState({\r\n                startX: undefined,\r\n                startY: undefined,\r\n                endX: undefined,\r\n                endY: undefined,\r\n                measureStarted: false\r\n            });\r\n            this.measureStage.canvas.style.cursor = \"auto\";\r\n        }\r\n        else {                       // first click - start measurment\r\n            this.setState({\r\n                startX: this.measureStage.C2W_X(event.stageX),\r\n                startY: this.measureStage.C2W_Y(event.stageY),\r\n                measureStarted: true\r\n            });\r\n            this.measureStage.canvas.style.cursor = \"crosshair\";\r\n        }\r\n    };\r\n\r\n    handleMouseMove = (event) => {\r\n        if (this.state.measureStarted) {\r\n            this.setState({\r\n                endX: this.measureStage.C2W_X(event.stageX),\r\n                endY: this.measureStage.C2W_Y(event.stageY)\r\n            })\r\n        }\r\n    };\r\n\r\n    handleMouseUp = (event) => {\r\n    }\r\n\r\n    handleMouseWheel = (event) => {\r\n        event.preventDefault();\r\n\r\n        let delta = event.detail || event.wheelDelta;\r\n        if (delta !== 0) {\r\n            // this.props.onMouseWheelMove(event.offsetX, event.offsetY, delta);\r\n            this.props.handleMouseWheelMove(this.props.stage, event.offsetX, event.offsetY, delta);\r\n\r\n            this.draw();\r\n        }\r\n    };\r\n\r\n    handleMouseWheelFox = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (event.detail !== 0) {\r\n            // this.props.onMousewheelMove(event.layerX, event.layerY, -event.detail);\r\n            this.props.handleMouseWheelMove(this.props.stage, event.layerX, event.layerY, -event.detail);\r\n\r\n            this.draw();\r\n        }\r\n    };\r\n\r\n    draw() {\r\n        // let canvas = this.measureCanvas.current;\r\n        let stage = this.measureStage; // this.props.stage;\r\n        let canvas = stage.canvas;\r\n        let context = canvas.getContext('2d');\r\n\r\n        this.measureStage.origin = this.props.stage.origin;\r\n        this.measureStage.resolution = this.props.stage.resolution;\r\n        this.measureStage.zoomFactor = this.props.stage.zoomFactor;\r\n\r\n        this.measureStage.clear();\r\n\r\n        // Draw rectangle\r\n        let pllX = Math.min(stage.W2C_X(this.state.startX), stage.W2C_X(this.state.endX));\r\n        let pllY = Math.min(stage.W2C_Y(this.state.startY), stage.W2C_Y(this.state.endY));\r\n        let width = Math.abs(stage.W2C_Scalar(this.state.startX - this.state.endX));\r\n        let height = Math.abs(stage.W2C_Scalar(this.state.startY - this.state.endY));\r\n\r\n        context.beginPath();\r\n        context.rect(pllX, pllY, width, height);\r\n\r\n        // Draw segment\r\n        context.moveTo(stage.W2C_X(this.state.startX), stage.W2C_Y(this.state.startY));\r\n        context.lineTo(stage.W2C_X(this.state.endX), stage.W2C_Y(this.state.endY));\r\n\r\n        context.lineWidth = 1;\r\n        context.strokeStyle = 'black';\r\n        context.stroke();\r\n\r\n        // Draw text\r\n        let textX, textY, textHeight, textWidth;\r\n        let backX, backY;                      // background rectangle\r\n        let text = this.measurement();\r\n\r\n        context.font = \"12pt Arial\";\r\n\r\n        textHeight = 12;\r\n        /* font size*/\r\n        textWidth = context.measureText(text).width;\r\n\r\n        // Rectangle to the right of current point, text aligned left\r\n        if (Math.abs(stage.W2C_X(this.state.endX) - pllX) <= 2) {\r\n            context.textAlign = \"left\";\r\n            textX = pllX + 3;\r\n            backX = pllX;\r\n        }\r\n        // Rectangle to the left of current point, text aligned right\r\n        else {\r\n            context.textAlign = \"right\";\r\n            textX = pllX + width - 3;\r\n            backX = textX - textWidth - 3;\r\n        }\r\n\r\n        if (Math.abs(stage.W2C_Y(this.state.endY) - pllY) <= 2) {\r\n            textY = pllY - 3;\r\n        }\r\n        else {\r\n            textY = pllY + height + textHeight + 3;\r\n        }\r\n        backY = textY - textHeight - 3;\r\n\r\n        context.fillStyle = 'white';\r\n        context.globalAlpha = 0.4;\r\n        context.fillRect(backX, backY, textWidth + 6, textHeight + 6);\r\n\r\n        context.fillStyle = \"black\";\r\n        context.globalAlpha = 1;\r\n        context.fillText(this.measurement(), textX, textY);\r\n    }\r\n\r\n    measurement() {\r\n        let dx = this.state.endX - this.state.startX;\r\n        let dy = this.state.endY - this.state.startY;\r\n        let dist = Math.sqrt(dx * dx + dy * dy);\r\n        let message = \"DX=\" + this.format(dx) + \",DY=\" + this.format(dy) + \",D=\" + this.format(dist);\r\n        return message;\r\n    }\r\n\r\n    format(num) {\r\n        return (num / this.props.divisor).toFixed(this.props.decimals);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // let canvas = this.measureCanvas.current;\r\n        this.measureStage = new Stage(this.measureCanvas.current);\r\n        this.measureStage.origin = this.props.stage.origin;\r\n        this.measureStage.resolution = this.props.stage.resolution;\r\n        this.measureStage.zoomFactor = this.props.stage.zoomFactor;\r\n\r\n        this.measureStage.on(\"stagemousedown\", this.handleMouseDown);\r\n        this.measureStage.on(\"stagemousemove\", this.handleMouseMove);\r\n        this.measureStage.on(\"stagemouseup\", this.handleMouseUp);\r\n\r\n        this.measureStage.canvas.addEventListener(\"mousewheel\", this.handleMouseWheel);\r\n        this.measureStage.canvas.addEventListener(\"DOMMouseScroll\", this.handleMouseWheelFox);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.measureStarted) {\r\n            this.draw();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.measureStage.clear();\r\n        this.measureStage.removeAllChildren();\r\n        this.measureStage.removeAllEventListeners();\r\n    }\r\n\r\n    render() {\r\n        let mainCanvas = this.props.stage.canvas;\r\n        let width = mainCanvas.width;\r\n        let height = mainCanvas.height;\r\n        let top = mainCanvas.offsetTop;\r\n        let left = mainCanvas.offsetLeft;\r\n        return (\r\n            <canvas tabIndex=\"1\" ref={this.measureCanvas}\r\n                    width={width}\r\n                    height={height}\r\n                    style={{position: 'absolute', top: top, left: left}}\r\n            >\r\n            </canvas>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({app}) => {\r\n    return {\r\n        stage: app.stage,\r\n        divisor: app.divisor,\r\n        decimals: app.decimals\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleMouseWheelMove: (stage, x, y, delta) => dispatch(actions.handleMouseWheelMove(stage, x, y, delta))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MeasurePointsTool);\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Shape, Text} from '@createjs/easeljs';\r\nimport {graphics} from '../models/graphics';\r\n\r\nclass MeasureShapesTool extends Component {\r\n    constructor(params) {\r\n        super();\r\n        this.segment = new Shape();\r\n        params.stage.addChild(this.segment);\r\n\r\n        this.labelShape = new Text();\r\n        this.labelShape.x = 0;\r\n        this.labelShape.y = 0;\r\n        params.stage.addChild(this.labelShape);\r\n\r\n        // var html = document.createElement('div');\r\n        // html.innerText = \"\"; // params.model.label;\r\n        // html.style.position = \"absolute\";\r\n        // html.style.top = 0;\r\n        // html.style.left = 0;\r\n        //\r\n        // document.body.appendChild(html);\r\n        // this.labelShape = new createjs.DOMElement(html);\r\n        // params.stage.addChild(this.labelShape);\r\n    }\r\n\r\n    // redrawLabel() {\r\n    //     if (!this.labelShape) return;\r\n    //\r\n    //     let stage = this.props.stage;\r\n    //\r\n    //     this.labelShape.htmlElement.style.display = \"block\";\r\n    //\r\n    //     let box = this.props.shortestSegment.box;\r\n    //     let point = {x: (box.xmin + box.xmax) / 2, y: (box.ymin + box.ymax) / 2};\r\n    //     let dx = 6. / (stage.zoomFactor * stage.resolution);\r\n    //     let dy = 4. / (stage.zoomFactor * stage.resolution);\r\n    //\r\n    //     this.labelShape.htmlElement.style.font = \"16px Arial\";\r\n    //     this.labelShape.htmlElement.innerText = this.props.shortestSegment.length;\r\n    //\r\n    //     let unscale = 1. / (stage.zoomFactor * stage.resolution);\r\n    //     let tx = stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n    //     let ty = -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n    //     this.labelShape.setTransform(tx, ty, unscale, -unscale);\r\n    // }\r\n\r\n    format(num) {\r\n        return (num/this.props.divisor).toFixed(this.props.decimals);\r\n    }\r\n\r\n    redrawLabel() {\r\n        if (!this.labelShape) return;\r\n\r\n        let stage = this.props.stage;\r\n\r\n        let box = this.props.shortestSegment.box;\r\n        let point = {x: (box.xmin + box.xmax) / 2, y: (box.ymin + box.ymax) / 2};\r\n        let dx = 6. / (stage.zoomFactor * stage.resolution);\r\n        let dy = 4. / (stage.zoomFactor * stage.resolution);\r\n\r\n        if (box.ymin === box.ymax) {\r\n            dx = 0;\r\n            dy = -dy;\r\n        }\r\n\r\n        // this.labelShape.htmlElement.style.display = \"block\";\r\n        // this.labelShape.htmlElement.style.font = \"16px Arial\";\r\n        // this.labelShape.htmlElement.innerText = this.props.shortestSegment.length;\r\n\r\n        this.labelShape.text = this.format(this.props.shortestSegment.length);\r\n\r\n        let fontSize = 14.; // / (stage.zoomFactor * stage.resolution);\r\n        this.labelShape.font = `${fontSize}px Arial`;\r\n\r\n        let unscale = 1. / (stage.zoomFactor * stage.resolution);\r\n        // let tx = stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n        // let ty = -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n        let tx = point.x + dx;\r\n        let ty = point.y + dy;\r\n        this.labelShape.setTransform(tx, ty, unscale, -unscale);\r\n    }\r\n\r\n    draw() {\r\n        if (this.props.shortestSegment) {\r\n            this.segment.graphics = graphics(this.props.shortestSegment);\r\n            this.redrawLabel();\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.draw();\r\n    }\r\n    componentDidUpdate() {\r\n        this.segment.graphics.clear();\r\n        if (this.props.firstMeasuredShape && this.props.secondMeasuredShape &&\r\n            this.props.firstMeasuredLayer.displayed &&\r\n            this.props.secondMeasuredLayer.displayed) {\r\n\r\n            this.draw();\r\n            this.redrawLabel();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.stage.removeChild(this.segment);\r\n        this.segment.graphics.clear();\r\n        this.props.stage.removeChild(this.labelShape);\r\n        this.labelShape.text = \"\";\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default MeasureShapesTool;","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\nimport React from 'react';\r\nconst DisplayCoordsTool = ({stage, coordX, coordY, divisor, decimals}) => {\r\n    const format = (num) => {\r\n        return (num/divisor).toFixed(decimals);\r\n    };\r\n\r\n    let mainCanvas = stage.canvas;\r\n    let top = mainCanvas.offsetTop + 10;\r\n    let left = mainCanvas.offsetLeft + 10;\r\n    let x = stage.C2W_X(coordX);\r\n    let y = stage.C2W_Y(coordY);\r\n    return (\r\n        <div style={{position: 'absolute', top: top, left: left}}>\r\n            <h5 style={{margin: 0, padding: 3}}>\r\n                X: {format(x)} Y: {format(y)}\r\n            </h5>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DisplayCoordsTool;\r\n","import {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\n// A Modal component that is an abstraction around the portal API.\r\nclass Modal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Create a div that we'll render the modal into. Because each\r\n        // Modal component has its own element, we can render multiple\r\n        // modal components into the modal container.\r\n        this.el = document.createElement('div');\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Append the element into the DOM on mount. We'll render\r\n        // into the modal container element (see the HTML tab).\r\n        modalRoot.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // Remove the element from the DOM when we unmount\r\n        modalRoot.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        // Use a portal to render the children into the element\r\n        return ReactDOM.createPortal(\r\n            // Any valid React child: JSX, strings, arrays, etc.\r\n            this.props.children,\r\n            // A DOM element\r\n            this.el,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, {Component} from 'react';\r\nimport Modal from '../Modal';\r\nimport classes from './ModalPopup.module.css';\r\n\r\nclass ModalPopup extends Component {\r\n    offsetX;\r\n    offsetY;\r\n    dragX;\r\n    dragY;\r\n\r\n    onBackDropClicked = (ev) => {\r\n        if (ev.target.id === \"backDrop\") {\r\n            this.props.closePopup();\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (ev) => {\r\n        if (ev.code === \"Escape\") {\r\n            this.props.closePopup();\r\n        }\r\n    };\r\n\r\n    elementDrag = (ev) => {\r\n        ev = ev || window.event;\r\n        // calculate the new cursor position:\r\n        this.offsetX = this.dragX - ev.clientX;\r\n        this.offsetY = this.dragY - ev.clientY;\r\n        this.dragX = ev.clientX;\r\n        this.dragY = ev.clientY;\r\n        // set the element's new position:\r\n        let element = ev.target;\r\n        element.style.top = (element.offsetTop - this.offsetY) + \"px\";\r\n        element.style.left = (element.offsetLeft - this.offsetX) + \"px\";\r\n    };\r\n\r\n    closeDragElement = (ev) => {\r\n        /* stop moving when mouse button is released:*/\r\n        ev.target.onmouseup = null;\r\n        ev.target.onmousemove = null;\r\n    };\r\n\r\n    dragMouseDown = (ev) => {\r\n        ev = ev || window.event;\r\n        // get the mouse cursor position at startup:\r\n        this.dragX = ev.clientX;\r\n        this.dragY = ev.clientY;\r\n        ev.target.onmouseup = this.closeDragElement;\r\n        // call a function whenever the cursor moves:\r\n        ev.target.onmousemove = this.elementDrag;\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    render() {\r\n        return this.props.showPopup ? (\r\n            <Modal>\r\n                <div\r\n                    id=\"backDrop\"\r\n                    className={classes.BackDrop}\r\n                    onClick={this.onBackDropClicked}\r\n                >\r\n                    <div className={classes.ModalPopup}\r\n                         onMouseDown={this.dragMouseDown}\r\n                    >\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default ModalPopup;","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\n\r\nimport React from 'react';\r\nimport classes from './AboutPopup.module.css';\r\nimport ModalPopup from \"../UI/ModalPopup/ModalPopup\";\r\n\r\nconst AboutPopup = (props) => {\r\n    return (\r\n        <ModalPopup\r\n            showPopup={props.showAboutPopup}\r\n            closePopup={props.toggleAboutPopup}\r\n        >\r\n            <div className={classes.AboutPopup}>\r\n                <h2>{props.title} v{props.version}</h2>\r\n\r\n                <label>{`Build date: `}</label>\r\n                <span>April 2019</span>\r\n                <br/>\r\n\r\n                <label>{`Github depository: `}</label>\r\n                <a href=\"https://github.com/alexbol99/debug-viewer1\" >\r\n                    https://github.com/alexbol99/debug-viewer1\r\n                </a>\r\n                <br/>\r\n\r\n                <label>{`3d party graphics library: `}</label>\r\n                <a href=\"https://github.com/CreateJS/EaselJS/tree/2.0\" >\r\n                    https://github.com/CreateJS/EaselJS/tree/2.0\r\n                </a>\r\n                <br/>\r\n\r\n            </div>\r\n        </ModalPopup>\r\n\r\n    )\r\n};\r\n\r\nexport default AboutPopup;","import /*React,*/ {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as cloudActions from '../../store/actions/cloudStorageActions';\r\n\r\nclass CloudDocument extends Component {\r\n    state={\r\n        done:false\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.stage && !this.state.done) {\r\n            this.props.fetchDocumentFromDatabase(this.props.stage, this.props.match.params.id);\r\n            this.setState({done:true});\r\n        }\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({app}) => {\r\n    return {\r\n        stage: app.stage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchDocumentFromDatabase: (stage, id) => dispatch(cloudActions.fetchDocumentFromDatabase(stage, id)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CloudDocument);\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ToolbarComponent from '../../components/MainComponent/ToolbarComponent/ToolbarComponent';\r\nimport CanvasComponent from '../../components/MainComponent/CanvasComponent/CanvasComponent';\r\nimport StatusComponent from '../../components/Layout/StatusComponent/StatusComponent';\r\n\r\nimport StageComponent from \"../../components/MainComponent/GraphicsComponent/stageComponent\";\r\nimport LayersComponent from '../../components/MainComponent/GraphicsComponent/layersComponent';\r\n\r\nimport * as actions from '../../store/actions/appActions';\r\nimport * as layerActions from \"../../store/actions/layersActions\";\r\nimport * as cloudActions from '../../store/actions/cloudStorageActions';\r\n\r\nimport Layers from '../../models/layers';\r\nimport MeasurePointsTool from '../../tools/measurePointsTool';\r\nimport MeasureShapesTool from \"../../tools/measureShapesTool\";\r\nimport DisplayCoordsTool from \"../../tools/displayCoordsTool\";\r\n\r\nimport AboutPopup from \"../../components/AboutPopup/AboutPopup\";\r\nimport CloudDocument from '../../components/Constructions/CloudDocument';\r\n\r\nimport styles from './MainComponent.module.css';\r\n\r\nclass MainComponent extends Component {\r\n    handleFileSelect = (event) => {\r\n        if (!(File && FileReader && FileList)) return;\r\n        let files = event.target.files; // FileList object\r\n        this.props.handleFileSelect(files, this.props.stage, this.props.layers);\r\n    };\r\n\r\n    setHomeView = () => {\r\n        let layer = Layers.getAffected(this.props.layers);\r\n        if (!layer) return;\r\n        this.props.setHomeView(this.props.stage, layer);\r\n        this.forceUpdate();       // ??? unclear why on Home button click not updated\r\n    };\r\n\r\n    onSaveDocumentButtonClicked = () => {\r\n        if (this.props.layers.length === 0) return;   // nothing to save\r\n        // this.props.stage.img.crossOrigin=\"anonymous\";\r\n        let dataURL = null;\r\n        try {\r\n            dataURL = this.props.stage.toDataURL();\r\n        }\r\n        catch(e) {\r\n            console.log(e)\r\n        }\r\n        let payload = {\r\n            name: this.props.document.name === \"\" ?\r\n                cloudActions.getNewName(this.props.documentsList) : this.props.document.name,\r\n            dataURL: dataURL,\r\n            lastUpdated: new Date().toLocaleDateString() + \" \" + new Date().toLocaleTimeString(),\r\n            // token: this.props.token,\r\n            userId: this.props.userId\r\n        };\r\n\r\n        if (this.props.document.id) {\r\n            this.props.updateDocumentInDatabase(this.props.document.id, payload, this.props.layers);\r\n        }\r\n        else {\r\n            this.props.addDocumentToDatabase(payload, this.props.layers, this.props.history);\r\n        }\r\n    };\r\n\r\n    clearCurrentDocument = () => {\r\n        this.props.clearCurrentDocument();\r\n        this.props.clearAllLayers();\r\n        this.props.history.push(\"/\");\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        // let ctrl = e.ctrlKey;\r\n        if (e.target.id !== \"mainCanvas\")\r\n            return;\r\n        switch (e.code) {\r\n            case \"KeyH\":\r\n                this.setHomeView();\r\n                break;\r\n\r\n            case \"KeyW\":\r\n                this.props.toggleWidthMode();     // toggle width On/Off in graphics model\r\n                break;\r\n\r\n            case \"KeyE\":\r\n                this.props.toggleDisplayVertices();  // toggle vertices On/Off\r\n                break;\r\n\r\n            case \"ArrowRight\":\r\n                break;\r\n\r\n            case \"ArrowLeft\":\r\n                break;\r\n            case \"ArrowUp\":\r\n                break;\r\n            case \"ArrowDown\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onImageLoaded = (model, layer, image) => {\r\n        this.props.setHomeView(this.props.stage, layer);\r\n        this.forceUpdate();       // ??? unclear why on Home button click not updated\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onresize = this.props.resizeStage;\r\n        // Keyboard event\r\n        // var _keydown = _.throttle(this.keydown, 100);\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n        // var _keyup = _.throttle(this.keyup, 500);\r\n        document.addEventListener('keyup', this.handleKeyUp);\r\n\r\n        // if (this.props.document.id === undefined) {\r\n        //     this.props.history.push(\"/\");\r\n        // }\r\n        // if (this.props.document.id !== undefined) {\r\n        //     this.props.history.push(\"/documents/\" + this.props.document.id)\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        let displayCoordsTool = this.props.stage ? (\r\n            <DisplayCoordsTool\r\n                key=\"displayCoordinatedTool\"\r\n                stage={this.props.stage}\r\n                units={this.props.units}\r\n                divisor={this.props.divisor}\r\n                decimals={this.props.decimals}\r\n                coordX={this.props.mouse.x}\r\n                coordY={this.props.mouse.y}\r\n            />\r\n        ) : null;\r\n\r\n        let measurePointsTool = this.props.measurePointsActive ? <MeasurePointsTool /> : null;\r\n\r\n        let measuredLayersDisplayed = this.props.measureShapesTool.firstMeasuredShape &&\r\n            this.props.measureShapesTool.secondMeasuredShape &&\r\n            this.props.measureShapesTool.firstMeasuredLayer.displayed &&\r\n            this.props.measureShapesTool.secondMeasuredLayer.displayed;\r\n\r\n        let measureShapesTool = this.props.measureShapesTool.distance &&\r\n        this.props.measureShapesTool.shortestSegment && measuredLayersDisplayed ? (\r\n            <MeasureShapesTool\r\n                key=\"MeasureShapesTool\"\r\n                stage={this.props.stage}\r\n                firstMeasuredShape={this.props.measureShapesTool.firstMeasuredShape}\r\n                secondMeasuredShape={this.props.measureShapesTool.secondMeasuredShape}\r\n                firstMeasuredLayer={this.props.measureShapesTool.firstMeasuredLayer}\r\n                secondMeasuredLayer={this.props.measureShapesTool.secondMeasuredLayer}\r\n                distance={this.props.measureShapesTool.distance}\r\n                shortestSegment={this.props.measureShapesTool.shortestSegment}\r\n                divisor={this.props.divisor}\r\n                decimals={this.props.decimals}\r\n            />\r\n        ) : null;\r\n\r\n        return (\r\n            <main className={styles[\"Main-content\"]}>\r\n                <ToolbarComponent\r\n                    measurePointsActive={this.props.measurePointsActive}\r\n                    units={this.props.units}\r\n                    showSkeletonRecognitionButton={this.props.showSkeletonRecognitionButton}\r\n                    onFileSelected={this.handleFileSelect}\r\n                    onHomeButtonPressed={this.setHomeView}\r\n                    onPanByDragPressed={this.props.togglePanByDrag}\r\n                    onMeasurePointsButtonPressed={this.props.toggleMeasureBetweenPoints}\r\n                    onMeasureBetweenShapesButtonPressed={this.props.toggleMeasureBetweenShapes}\r\n                    onToggleWidthModePressed={this.props.toggleWidthMode}\r\n                    onToggleVerticesPressed={this.props.toggleDisplayVertices}\r\n                    onToggleLabelsPressed={this.props.toggleDisplayLabels}\r\n                    onShowAboutPopupPressed={this.props.toggleAboutPopup}\r\n                    onSkeletonRecognitionButtonPressed={this.props.applySkeletonRecognition}\r\n                    onUnitClicked={this.props.toggleUnits}\r\n                    onSaveDocumentButtonClicked={this.onSaveDocumentButtonClicked}\r\n                    onClearAllButtonClicked={this.clearCurrentDocument}\r\n                    onLayerListButtonClicked={this.props.toggleLayerList}\r\n                />\r\n\r\n                <CanvasComponent />\r\n\r\n                { this.props.stage ? (\r\n                <StageComponent\r\n                    stage={this.props.stage}\r\n                    onStageUnmounted={this.props.destroyStage}\r\n                >\r\n                    <LayersComponent\r\n                        stage={this.props.stage}\r\n                        layers={this.props.layers}\r\n                        displayVertices={this.props.displayVertices}\r\n                        displayLabels={this.props.displayLabels}\r\n                        widthOn={this.props.widthOn}\r\n                        zoomFactor={this.props.zoomFactor}\r\n                        hoveredShape={this.props.measureShapesTool.hoveredShape}\r\n                        firstMeasuredShape={this.props.measureShapesTool.firstMeasuredShape}\r\n                        secondMeasuredShape={this.props.measureShapesTool.secondMeasuredShape}\r\n                        onMouseOver={this.props.handleMouseRollOverShape}\r\n                        onMouseOut={this.props.handleMouseRollOutShape}\r\n                        onClick={this.props.handleClickOnShape}\r\n                        setHomeView={this.props.setHomeView}\r\n                        onImageLoaded={this.onImageLoaded}\r\n                    />\r\n                    {displayCoordsTool}\r\n                    {measurePointsTool}\r\n                    {measureShapesTool}\r\n                </StageComponent> ) : null }\r\n\r\n                <StatusComponent />\r\n\r\n                <AboutPopup\r\n                    showAboutPopup={this.props.showAboutPopup}\r\n                    toggleAboutPopup={this.props.toggleAboutPopup}\r\n                    title={this.props.title}\r\n                    version={this.props.version}\r\n                    build={this.props.build}\r\n                />\r\n\r\n                <Route path=\"/documents/:id\" component={CloudDocument}/>\r\n\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stage: state.app.stage,\r\n        title: state.app.title,\r\n        version: state.app.version,\r\n        build: state.app.build,\r\n        displayVertices: state.app.displayVertices,\r\n        displayLabels: state.app.displayLabels,\r\n        widthOn: state.app.widthOn,\r\n        zoomFactor: state.app.zoomFactor,\r\n        units: state.app.units,\r\n        showSkeletonRecognitionButton: state.app.showSkeletonRecognitionButton,\r\n        divisor: state.app.divisor,\r\n        decimals: state.app.decimals,\r\n        measurePointsActive: state.app.measurePointsActive,\r\n        showAboutPopup: state.app.showAboutPopup,\r\n        layers: state.layers,\r\n        mouse: state.mouse,\r\n        measureShapesTool: state.measureShapesTool,\r\n\r\n        document: state.cloudStorage.document,\r\n        documentsList: state.cloudStorage.documentsList,\r\n        // onManageCloudStorageButtonClicked: ownProps.onManageCloudStorageButtonClicked\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        resizeStage: () => dispatch(actions.resizeStage()),\r\n        destroyStage: () => dispatch(actions.destroyStage()),\r\n        handleFileSelect: (files, stage, layers) => dispatch(actions.handleFileSelect(files, stage, layers)),\r\n        setHomeView: (stage, shape) => dispatch(actions.setHomeView(stage, shape)),\r\n        toggleUnits: () => dispatch(actions.toggleUnits()),\r\n        toggleWidthMode: () => dispatch(actions.toggleWidthMode()),\r\n        toggleDisplayVertices: () => dispatch(actions.toggleDisplayVertices()),\r\n        toggleDisplayLabels: () => dispatch(actions.toggleDisplayLabels()),\r\n        toggleAboutPopup: () => dispatch(actions.toggleAboutPopup()),\r\n        toggleMeasureBetweenPoints: () => dispatch(actions.toggleMeasureBetweenPoints()),\r\n        toggleMeasureBetweenShapes: () => dispatch(actions.toggleMeasureBetweenShapes()),\r\n        togglePanByDrag: () => dispatch(actions.togglePanByDrag()),\r\n        toggleLayerList: () => dispatch(actions.toggleLayerList()),\r\n        applySkeletonRecognition: () => dispatch(actions.applySkeletonRecognition()),\r\n        handleMouseRollOverShape: (shape) => dispatch(actions.handleMouseRollOverShape(shape)),\r\n        handleMouseRollOutShape: () => dispatch(actions.handleMouseRollOutShape()),\r\n        handleClickOnShape: (shape, layer) => dispatch(actions.handleClickOnShape(shape, layer)),\r\n\r\n        clearAllLayers: () => dispatch(layerActions.deleteAllLayers()),\r\n\r\n        addDocumentToDatabase: (payload, layers, history) => dispatch(cloudActions.addDocumentToDatabase(payload, layers, history)),\r\n        updateDocumentInDatabase: (id, payload, layers) => dispatch(cloudActions.updateDocumentInDatabase(id, payload, layers)),\r\n        clearCurrentDocument: () => dispatch(cloudActions.clearCurrentDocument())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent);\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\nimport React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nimport styles from './LayerListToolbar.module.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\nconst LayerListToolbar = (props) => {\r\n    return (\r\n        <div className={styles[\"Layer-list-toolbar\"]}>\r\n            <button title=\"Add layer\" onClick={props.onAddLayerButtonClicked}>\r\n                <FontAwesome\r\n                    name='plus'\r\n                    size='2x'\r\n                    style={{color: \"grey\"}}\r\n                />\r\n            </button>\r\n            <button title=\"Edit selected layer's name and info\" onClick={props.onEditLayerButtonClicked}>\r\n                <FontAwesome\r\n                    name='pencil-alt'\r\n                    size='2x'\r\n                    style={{color: \"grey\"}}\r\n                />\r\n            </button>\r\n            <button title=\"Delete selected layer\" onClick={props.onDeleteLayerButtonClicked}>\r\n                <FontAwesome\r\n                    name='times'\r\n                    size='2x'\r\n                    style={{color: \"grey\"}}\r\n                />\r\n            </button>\r\n            <button title=\"Sort layer list\" onClick={props.onSortLayersButtonClicked}>\r\n                <FontAwesome\r\n                    name='sort-alpha-down'\r\n                    size='2x'\r\n                    style={{color: \"grey\"}}\r\n                />\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LayerListToolbar;","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './LayerEditForm.module.css';\r\n\r\nconst LayerEditForm = (props) => {\r\n    let onSubmitLayerEditForm = (ev) => {\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n        let form = ev.target.parentElement;\r\n        let newLayer = Object.assign({}, props.layer, {\r\n            name: form.layerName.value,\r\n            title: form.layerTitle.value\r\n        });\r\n        props.onSubmitLayerEditForm(newLayer);\r\n        return false;\r\n    };\r\n\r\n    let setFocus = (ev) => {\r\n        ev.stopPropagation();\r\n        ev.target.focus();\r\n    };\r\n\r\n    let onCancelLayerEditForm = () => {\r\n        props.onEscapeLayerEditForm();\r\n    };\r\n\r\n    return (\r\n        <form className={styles[\"Layer-edit-form\"]}\r\n              id=\"layerEditForm\"\r\n              onSubmit={onSubmitLayerEditForm}\r\n        >\r\n            <label>Layer name:</label><br/>\r\n            <input type=\"text\" id=\"layer-name\" name=\"layerName\" size=\"80\" defaultValue={props.layer.name}\r\n                   onClick={setFocus}/><br/>\r\n            <label>Layer info:</label><br/>\r\n            <textarea id=\"layer-title\" name=\"layerTitle\" cols=\"78\" rows=\"3\" defaultValue={props.layer.title}\r\n                      onClick={setFocus}></textarea><br/>\r\n            <button onClick={onCancelLayerEditForm}>Cancel</button>\r\n            <button onClick={onSubmitLayerEditForm}>OK</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default LayerEditForm;","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport ModalPopup from \"../../UI/ModalPopup/ModalPopup\";\r\nimport LayerEditForm from \"../LayerEditForm/LayerEditForm\";\r\nimport styles from './LayerListElement.module.css';\r\n\r\nclass LayerListElement extends Component {\r\n    componentDidUpdate() {\r\n        if (document.activeElement.nodeName === \"CANVAS\")\r\n            return;\r\n        let elem = this.refs.layerName;\r\n        if (this.props.layer.affected) {\r\n            elem.focus();\r\n        }\r\n    }\r\n\r\n    rgba(hex, opacity) {\r\n        let r, g, b, percent;\r\n        if (hex) {\r\n            hex = hex.replace('#', '');\r\n            r = parseInt(hex.substring(0, 2), 16);\r\n            g = parseInt(hex.substring(2, 4), 16);\r\n            b = parseInt(hex.substring(4, 6), 16);\r\n            percent = opacity;\r\n        }\r\n        else {\r\n            r = 147;\r\n            g = 128;\r\n            b = 108;\r\n            percent = 0;\r\n        }\r\n        let result = `rgba(${r},${g},${b},${percent / 100})`;\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        // let style = this.props.layer.displayed ?\r\n        //     styleSheet.displayed : styleSheet.undisplayed;\r\n\r\n        let displayed = this.props.layer.displayed ? \"Layer-displayed\" : \"Layer-undisplayed\";\r\n        let color = displayed ? this.rgba(this.props.layer.color, 100) : this.rgba();\r\n        let bgcolor = displayed ? this.rgba(this.props.layer.color, 30) : this.rgba();\r\n        let alpha = this.props.layer.affected ? 1 : 0;\r\n        let layerNameOpacity = this.props.layer.shapes.length === 0 ? 0.6 : 1.0;\r\n        return [\r\n            <li key={1}\r\n                className={styles.Layer}\r\n                onClick={this.props.onLayerClicked}\r\n                onDoubleClick={this.props.onLayerDoubleClicked}>\r\n\r\n                <div className={styles.LayerSelectionBox}\r\n                     onClick={this.props.onAffectedBoxClicked}\r\n                >\r\n                    <h4 className={styles.LayerSelectionMark}\r\n                        style={{opacity: alpha, color: color}}>\r\n                        ✓\r\n                    </h4>\r\n                </div>\r\n\r\n                <div className={styles.LayerNameBox}\r\n                     style={{backgroundColor: bgcolor, opacity: layerNameOpacity}}>\r\n                    <h4 ref=\"layerName\"\r\n                        title={this.props.layer.name}\r\n                        tabIndex='1'\r\n                    >\r\n                        {this.props.layer.name}\r\n                    </h4>\r\n                </div>\r\n\r\n            </li>,\r\n\r\n            <ModalPopup\r\n                key={2}\r\n                showPopup={this.props.layer.edited}\r\n                closePopup={this.props.onEscapeLayerEditForm}\r\n            >\r\n                <LayerEditForm\r\n                    layer={this.props.layer}\r\n                    onSubmitLayerEditForm={this.props.onSubmitLayerEditForm}\r\n                    onEscapeLayerEditForm={this.props.onEscapeLayerEditForm}\r\n                />\r\n            </ModalPopup>\r\n        ]\r\n    }\r\n}\r\n\r\nexport default LayerListElement;\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport LayerListToolbar from \"../../components/LayersList/LayerListToolbar/LayerListToolbar\";\r\nimport LayerListElement from '../../components/LayersList/LayerListElement/LayerListElement';\r\nimport * as actions from '../../store/actions/layersActions';\r\nimport { connect } from 'react-redux';\r\nimport styles from './LayersList.module.css';\r\n\r\nclass LayersList extends Component {\r\n    height = 0;\r\n\r\n    handleKeyDown = (e) => {\r\n        // e.stopPropagation();\r\n        // e.preventDefault();\r\n\r\n        if (e.target.parentElement.parentElement &&\r\n            e.target.parentElement.parentElement.parentElement &&\r\n            e.target.parentElement.parentElement.parentElement.id &&\r\n            e.target.parentElement.parentElement.parentElement.id === \"layersList\") {\r\n\r\n\r\n            switch (e.code) {\r\n                case \"ArrowRight\":\r\n                case \"ArrowDown\":\r\n                    this.props.setAffectedNextLayer();\r\n                    break;\r\n                case \"ArrowLeft\":\r\n                case \"ArrowUp\":\r\n                    this.props.setAffectedPrevLayer();\r\n                    break;\r\n                /* tab does not work properly\r\n            case \"Tab\":\r\n                if (e.shiftKey) {\r\n                    this.dispatch({\r\n                        type: ActionTypes.LAYERS_LIST_ARROW_UP_PRESSED\r\n                    });\r\n                }\r\n                else {\r\n                    this.dispatch({\r\n                        type: ActionTypes.LAYERS_LIST_ARROW_DOWN_PRESSED\r\n                    });\r\n                }\r\n                break;\r\n                */\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    onLayerListClicked = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Keyboard event\r\n        // var _keydown = _.throttle(this.keydown, 100);\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n        // var _keyup = _.throttle(this.keyup, 500);\r\n        // document.addEventListener('keyup', this.handleKeyUp);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.height = this.refs.layersComponent.clientHeight;\r\n    }\r\n\r\n    render() {\r\n        const style = this.props.showLayerList ? styles[\"App-layers-displayed\"] : styles[\"App-layers\"];\r\n        return (\r\n            <div className={style}\r\n                 ref=\"layersComponent\"\r\n                 onClick={this.onLayerListClicked}\r\n            >\r\n                {/*<h5>Layers</h5>*/}\r\n                <LayerListToolbar\r\n                    onAddLayerButtonClicked={() => this.props.onAddLayerButtonClicked(this.props.stage)}\r\n                    onEditLayerButtonClicked={this.props.onEditLayerButtonClicked}\r\n                    onDeleteLayerButtonClicked={this.props.onDeleteLayerButtonClicked}\r\n                    onSortLayersButtonClicked={this.props.onSortLayersButtonClicked}\r\n                />\r\n                <ul id=\"layersList\"\r\n                    style={{maxHeight:0.82*(this.height-40)}}>\r\n                { this.props.layers.map((layer) =>\r\n                    <LayerListElement\r\n                        key={layer.name}\r\n                        layer={layer}\r\n                        onLayerClicked={() => this.props.onLayerClicked(layer)}\r\n                        onAffectedBoxClicked={(event) => this.props.onAffectedBoxClicked(event, layer)}\r\n                        onSubmitLayerEditForm={this.props.onSubmitLayerEditForm}\r\n                        onEscapeLayerEditForm={this.props.onEscapeLayerEditForm}\r\n                    />)\r\n                }\r\n                </ul>\r\n                {/*{addLayer}*/}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage,\r\n        showLayerList: state.app.showLayerList         // on mobile device\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddLayerButtonClicked: (stage) => dispatch(actions.addEmptyLayer(stage)),\r\n        onEditLayerButtonClicked: () => dispatch(actions.openAffectedLayerEditForm()),\r\n        onDeleteLayerButtonClicked: () => dispatch(actions.deleteAffectedLayer()),\r\n        onSortLayersButtonClicked: () => dispatch(actions.sortLayers()),\r\n        onLayerClicked: (layer) => dispatch(actions.toggleDisplayLayer(layer)),\r\n        onAffectedBoxClicked: (event, layer) => dispatch(actions.toggleAffectedLayer(event, layer)),\r\n        onSubmitLayerEditForm: (newLayer) => dispatch(actions.updateLayer(newLayer)),\r\n        onEscapeLayerEditForm: () => dispatch(actions.closeEditLayerForm()),\r\n        setAffectedNextLayer: () => dispatch(actions.setAffectedNextLayer()),\r\n        setAffectedPrevLayer: () => dispatch(actions.setAffectedPrevLayer())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LayersList);\r\n\r\n// export default LayersList;","/**\r\n * Created by alexanderbol on 06/05/2017.\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './AsideComponent.module.css';\r\n\r\nconst AsideComponent = () => {\r\n    return (\r\n        <aside className={styles[\"App-aside\"]}>\r\n            <h5>&nbsp;</h5>\r\n        </aside>\r\n    )\r\n};\r\n\r\nexport default AsideComponent;\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as ActionTypes from \"./store/actionTypes\";\r\nimport * as cloudActions from \"./store/actions/cloudStorageActions\";\r\nimport MainComponent from \"./containers/MainComponent/MainComponent\";\r\nimport LayersList from \"./containers/LayerList/LayersList\";\r\nimport AsideComponent from \"./components/Layout/AsideComponent/AsideComponent\";\r\n// import DocumentName from \"./components/MainComponent/DocumentName/DocumentName\";\r\n\r\nconst appBody = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            {/*<DocumentName name={props.document.name}*/}\r\n                          {/*username={props.username}*/}\r\n                          {/*updateDocumentName={props.updateDocumentName} />*/}\r\n            <div className=\"App-body\" onPaste={props.pasteDataFromBuffer}>\r\n                <MainComponent history={props.history}\r\n                               onManageCloudStorageButtonClicked={props.onManageCloudStorageButtonClicked}\r\n                />\r\n                <LayersList/>\r\n                <AsideComponent/>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({cloudStorage, auth}) => {\r\n    return {\r\n        document: cloudStorage.document,\r\n        username: auth.username\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        pasteDataFromBuffer: (event) => dispatch({\r\n            type: ActionTypes.DATA_FROM_BUFFER_PASTED,\r\n            data: event.clipboardData\r\n        }),\r\n        updateDocumentName: (name) => dispatch(cloudActions.updateDocumentName(name))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(appBody);\r\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classes from './HeaderComponent.module.css';\r\n// import Logo from './Logo/Logo';\r\n// import Navigation from './Navigation/Navigation';\r\n\r\nconst HeaderComponent = (props) => {\r\n    const style = props.location.pathname === \"/documents\" ?\r\n        classes[\"App-header-documents-page\"] :\r\n        classes[\"App-header\"];\r\n    return (\r\n        <header className={style}>\r\n            <h2>Debug Viewer</h2>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default withRouter(HeaderComponent);\r\n\r\n/*\r\n<header className={style}>\r\n    <Logo />\r\n    <Navigation isAuthenticated={props.isAuthenticated} />\r\n    {props.isAuthenticated ? <span>Hello {props.username}</span> : null}\r\n    {props.location.pathname === \"/documents\" ? <hr/> : null}\r\n</header>\r\n*/","import {Box} from '@flatten-js/core';\r\n\r\nexport class Job {\r\n    constructor() {\r\n        this.filename = \"\";\r\n        this.title = \"\";\r\n        this.profiles = [];   // array of FlattenJS Polygons\r\n        this.materials = [];  // array of FlattenJS Polygons\r\n        this.shapes = [];     // array of other FlattenJS shapes\r\n    }\r\n\r\n    get box() {\r\n        let b = new Box();\r\n        for (let shape of this.profiles) {\r\n            b.merge(shape.box);\r\n        }\r\n        for (let shape of this.materials) {\r\n            b.merge(shape.box);\r\n        }\r\n        for (let shape of this.shapes) {\r\n            b.merge(shape.box);\r\n        }\r\n        return b;\r\n    }\r\n}","import { Job } from '../models/job';\r\nimport {Point, Segment, Arc, Polygon, Utils, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\n\r\nconst inch2pixels = 10160000;\r\nconst mils2pixels = 10160;\r\nfunction InchToPixels(str) {\r\n    return Math.round(Number(str)*inch2pixels,0);\r\n}\r\nfunction MilsToPixels(str) {\r\n    return Math.round(Number(str)*mils2pixels,0);\r\n}\r\n\r\nfunction parsePolygon(lines, start) {\r\n    let shapes = [];\r\n    let i = start;\r\n    let line = lines[i];\r\n    let terms = line.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe;\r\n    let pc;\r\n    let end_of_face = false;\r\n    while(true) {\r\n        line = lines[i];\r\n        terms = line.split(' ');\r\n        switch (terms[0]) {\r\n            case 'OS':\r\n                pe = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n                shapes.push( new Segment(ps, pe));\r\n\r\n                ps = pe.clone();\r\n                break;\r\n            case 'OC':\r\n                pe = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n                pc = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n\r\n                let cwStr = terms[5];\r\n                let counterClockwise = cwStr === 'Y' ? Flatten.CW : Flatten.CCW; /* sic ! */\r\n\r\n                let startAngle = vector(pc,ps).slope;\r\n                let endAngle = vector(pc, pe).slope;\r\n                if (Utils.EQ(startAngle, endAngle)) {\r\n                    endAngle += 2*Math.PI;\r\n                    counterClockwise = true;\r\n                }\r\n                let r = vector(pc, ps).length;\r\n\r\n                shapes.push(new Arc(pc, r, startAngle, endAngle, counterClockwise));\r\n\r\n                ps = pe.clone();\r\n                break;\r\n            case 'OE':\r\n                end_of_face = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (end_of_face) {\r\n            break;\r\n        }\r\n\r\n        i++;\r\n    }\r\n    return shapes;\r\n}\r\n\r\nfunction parseLine(str, apertures) {\r\n    let terms = str.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n    let segment = new Segment(ps, pe);\r\n    let ap_key = Number(terms[5]);\r\n    let ap_value = apertures[ap_key];\r\n    segment.aperture = ap_value;     // augmentation\r\n    return segment;\r\n}\r\n\r\nfunction parseArc(str, apertures) {\r\n    let terms = str.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n    let pc = new Point( InchToPixels(terms[5]), InchToPixels(terms[6]) );\r\n\r\n    let cwStr = terms[10];\r\n    let counterClockwise = cwStr === 'Y' ? Flatten.CW : Flatten.CCW; /* sic ! */\r\n\r\n    let startAngle = vector(pc,ps).slope;\r\n    let endAngle = vector(pc, pe).slope;\r\n    if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(pc, ps).length;\r\n\r\n    let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n    let ap_key = Number(terms[7]);\r\n    let ap_value = apertures[ap_key];\r\n    arc.aperture = ap_value;     // augmentation\r\n\r\n    return arc;\r\n}\r\n\r\nexport function parseODB(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n    let polygon;\r\n\r\n    let apertures = [];\r\n\r\n    for (let i=0; i < arrayOfLines.length; i++) {\r\n        let line = arrayOfLines[i];\r\n        let terms = line.split(' ');\r\n\r\n        if (terms[0].substr(0,1) === '$') {\r\n            let ap_key = Number(terms[0].substr(1));\r\n            let ap_value = MilsToPixels(terms[1].substr(1));\r\n            apertures[ap_key] = ap_value;\r\n            continue;\r\n        }\r\n\r\n        switch (terms[0]) {\r\n            case 'S':                  // surface started\r\n                polygon = new Polygon();\r\n                let termArr = line.split(' ');\r\n                let polarity = termArr[1];      // consider later\r\n                polygon.polarity = polarity;\r\n                break;\r\n            case 'OB':                  // polygon started\r\n                let start = i;\r\n                let shapes = parsePolygon(arrayOfLines, start);\r\n                polygon.addFace(shapes);\r\n                i = start + shapes.length + 1;\r\n                break;\r\n            case 'SE':     // surface ended\r\n                job.shapes.push(polygon);\r\n                break;\r\n            case 'L':                  // line\r\n                let odbLine = parseLine(line, apertures);\r\n                job.shapes.push(odbLine);\r\n                break;\r\n            case 'A':                  // Arc\r\n                let odbArc = parseArc(line, apertures);\r\n                job.shapes.push(odbArc);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return job;\r\n}","import /*React,*/ {Component} from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport Layers from \"../../models/layers\";\r\nimport {parseODB} from \"../../dataParsers/parserODB\";\r\nimport Model from \"../../models/model\";\r\nimport * as ActionTypes from \"../../store/actionTypes\";\r\nimport * as actions from '../../store/actions/appActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Demo extends Component {\r\n    state={\r\n        done:false\r\n    };\r\n    componentDidUpdate() {\r\n        if (this.props.stage && !this.state.done) {\r\n            let stage = this.props.stage;\r\n            let layers = this.props.layers;\r\n\r\n            let layer = Layers.newLayer(stage, layers);\r\n            layer.color = Layers.getNextColor(layers);\r\n            layer.name = \"features\";\r\n            layer.title = \"features\";\r\n            layer.affected = true;\r\n            layer.displayed = true;\r\n\r\n            axios(\"https://gist.githubusercontent.com/alexbol99/825fdf2dd508467cc852eb22aa36183d/raw/d10e853338afd8294eeb3ffdebe3bc380477a978/features\")\r\n                .then( (resp) => {\r\n                    let job = parseODB(\"features\", resp.data);\r\n\r\n                    for (let shape of job.shapes) {\r\n                        let model = new Model(shape, undefined, shape.label);\r\n                        layer.add(model);\r\n                    }\r\n\r\n                    this.props.panAndZoomToShape(stage, layer);\r\n                    this.props.addNewLayer(layer);\r\n                    this.props.asyncOperationEnded();\r\n                });\r\n            this.setState({done:true});\r\n            this.props.asyncOperationStarted();\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        panAndZoomToShape: (stage, layer) => dispatch({\r\n            type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n            stage: stage,\r\n            shape: layer\r\n        }),\r\n        addNewLayer: (layer) => dispatch({\r\n            type: ActionTypes.ADD_NEW_LAYER,\r\n            layer: layer\r\n        }),\r\n        asyncOperationStarted: () => dispatch(actions.asyncOperationStarted()),\r\n        asyncOperationEnded: () => dispatch(actions.asyncOperationEnded())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Demo);\r\n","import /*React,*/ {Component} from 'react';\r\nimport * as ActionTypes from \"../../store/actionTypes\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass SkeletonRecognition extends Component {\r\n    componentDidMount() {\r\n        this.props.applySkeletonRecognition();\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        applySkeletonRecognition: () => dispatch({type: ActionTypes.SKELETON_RECOGNITION_URI})\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SkeletonRecognition);\r\n","import Flatten from \"@flatten-js/core\";\r\nimport {Vector, Segment, Arc, Line, Box, Polygon} from \"@flatten-js/core\";\r\n// let Flatten = require('flatten-js');\r\n\r\n// let {Vector, Segment, Arc, Line, Box, Polygon} = Flatten;\r\n\r\nclass CollisionDistance {\r\n    static apply(polygon1, polygon2) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        for (let edge of [...polygon2.edges]) {\r\n            let distance = CollisionDistance.edge2polygon(edge, polygon1);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static edge2polygon(edge2, polygon1) {\r\n        let shapeBox = edge2.shape.box;\r\n        let box = new Box(\r\n            Number.NEGATIVE_INFINITY,\r\n            shapeBox.ymin,\r\n            Number.POSITIVE_INFINITY,\r\n            shapeBox.ymax\r\n        );\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        let resp_edges =  polygon1.edges.search(box);\r\n        for (let edge1 of resp_edges) {\r\n            let distance;\r\n            if (edge1.shape instanceof Segment && edge2.shape instanceof Segment) {\r\n                distance = CollisionDistance.segment2segment(edge1.shape, edge2.shape);\r\n            }\r\n            else if (edge1.shape instanceof Arc && edge2.shape instanceof Segment) {\r\n                distance = CollisionDistance.segment2arc(edge2.shape, edge1.shape);\r\n            }\r\n            else if (edge1.shape instanceof Segment && edge2.shape instanceof Arc) {\r\n                distance = CollisionDistance.segment2arc(edge1.shape, edge2.shape);\r\n            }\r\n            else if (edge1.shape instanceof Arc && edge2.shape instanceof Arc) {\r\n                distance = CollisionDistance.arc2arc(edge1.shape, edge2.shape);\r\n            }\r\n\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static point2shape(point, shape) {\r\n        let line = new Line(point, new Vector(0,1));\r\n        let intersections = line.intersect(shape);          // segment or arc\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        for (let ip of intersections) {\r\n            // eslint-disable-next-line\r\n            let [distance, shortest_segment] = point.distanceTo(ip);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static segment2segment(segment1, segment2) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        for (let point of segment1.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, segment2);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        for (let point of segment2.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, segment1);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static segment2arc(segment, arc) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        let v_s = new Vector(segment.start, segment.end);\r\n        v_s = v_s.normalize();\r\n\r\n        let v_n = [v_s.rotate90CCW().multiply(arc.r), v_s.rotate90CW().multiply(arc.r)];\r\n        let distance;\r\n\r\n        // Distance between tangent point and segment\r\n        for (let v of v_n) {\r\n            let tangent_point = arc.center.translate(v);  // tangent point in direction of the normal vector\r\n            if (tangent_point.on(arc)) {\r\n                distance = CollisionDistance.point2shape(tangent_point, segment);\r\n                if (distance < collision_distance) {\r\n                    collision_distance = distance;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let point of arc.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, segment);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        for (let point of segment.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, arc);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static arc2arc(arc1, arc2) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        let distance;\r\n\r\n        // test translation of arc2.center to arc1 enlarged by r2\r\n        let arc_enlarged = arc1.clone();\r\n        arc_enlarged.r += arc2.r;\r\n        distance = CollisionDistance.point2shape(arc2.center, arc_enlarged);\r\n        if (distance < collision_distance) {\r\n            // additional check that transformed arc actually touching\r\n            // eslint-disable-next-line\r\n            let [dist_tmp, shortest_segment_tmp] =\r\n                arc1.distanceTo( CollisionDistance.translateArc(arc2, new Vector(-distance,0)));\r\n            if (Flatten.Utils.EQ_0(dist_tmp)) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n\r\n        // test translation of arc2.center to arc1 reduced by r2\r\n        if (Flatten.Utils.GE(arc1.r, arc2.r)) {\r\n            let arc_reduced = arc1.clone();\r\n            arc_reduced.r -= arc2.r;\r\n            distance = CollisionDistance.point2shape(arc2.center, arc_reduced);\r\n            if (distance < collision_distance) {\r\n                // additional check that transformed arc actually touching\r\n                // eslint-disable-next-line\r\n                let [dist_tmp, shortest_segment_tmp] =\r\n                    arc1.distanceTo( CollisionDistance.translateArc(arc2, new Vector(-distance,0)));\r\n                if (Flatten.Utils.EQ_0(dist_tmp)) {\r\n                    collision_distance = distance;\r\n                }\r\n            }\r\n        }\r\n\r\n        // test translation of arc1.center to arc2 reduced by r1\r\n        if (Flatten.Utils.LT(arc1.r, arc2.r)) {\r\n            let arc_reduced = arc2.clone();\r\n            arc_reduced.r -= arc1.r;\r\n            distance = CollisionDistance.point2shape(arc1.center, arc_reduced);\r\n            if (distance < collision_distance) {\r\n                // additional check that transformed arc actually touching\r\n                // eslint-disable-next-line\r\n                let [dist_tmp, shortest_segment_tmp] =\r\n                    arc1.distanceTo( CollisionDistance.translateArc(arc2, new Vector(-distance,0)));\r\n                if (Flatten.Utils.EQ_0(dist_tmp)) {\r\n                    collision_distance = distance;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let point of arc1.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, arc2);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        for (let point of arc2.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, arc1);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static translateArc(arc, vec) {\r\n        let arc_tmp = arc.clone();\r\n        arc_tmp.pc = arc_tmp.pc.translate(vec);\r\n        return arc_tmp;\r\n    }\r\n\r\n    static translate(polygon, vec) {\r\n        let newPolygon = new Polygon();\r\n        for (let face of polygon.faces) {\r\n            let shapes = [];\r\n            for (let edge of face) {\r\n                if (edge.shape instanceof Segment) {\r\n                    shapes.push(\r\n                        new Segment(edge.shape.ps.translate(vec), edge.shape.pe.translate(vec))\r\n                    )\r\n                }\r\n                else if (edge.shape instanceof  Arc) {\r\n                    let arc_trans = edge.shape.clone();\r\n                    arc_trans.pc = edge.shape.pc.translate(vec);\r\n                    shapes.push(arc_trans);\r\n                }\r\n            }\r\n            newPolygon.addFace(shapes);\r\n        }\r\n        return newPolygon;\r\n    }\r\n\r\n};\r\n\r\nCollisionDistance.Flatten = Flatten;\r\n\r\nexport default CollisionDistance;\r\n","import /*React,*/ {Component} from 'react';\r\nimport Flatten from '@flatten-js/core';\r\nimport CollisionDistance from \"../../models/collisionDistance\";\r\nimport axios from \"axios\";\r\nimport Layers from \"../../models/layers\";\r\n// import {Model} from \"../../models/model\";\r\nimport * as ActionTypes from \"../../store/actionTypes\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/appActions\";\r\n\r\nlet {vector} = Flatten;\r\n\r\nclass CollisionDemo extends Component {\r\n    state={\r\n        done:false,\r\n        data:[]\r\n    };\r\n    componentDidUpdate() {\r\n        if (this.props.stage && !this.state.done) {\r\n            let stage = this.props.stage;\r\n            let layers = this.props.layers;\r\n\r\n            let layer = Layers.newLayer(stage, layers);\r\n            layer.color = Layers.getNextColor(layers);\r\n            layer.name = \"collision_demo\";\r\n            layer.title = \"collision_demo\";\r\n            layer.affected = true;\r\n            layer.displayed = true;\r\n\r\n            axios(\"https://gist.githubusercontent.com/alexbol99/81893d40ec5eaa00d0336c35e069dd73/raw/b9328a4c6d7d6a44f375c68b4ec207690f40fd19/Block_53388_2parts_Cont.txt\")\r\n                .then( (resp) => {\r\n                    let parser = this.props.parser;\r\n                    let polygon1 = parser.parseToPolygon(resp.data);\r\n                    layer.add(polygon1);\r\n\r\n                    let vec = vector( 2*(polygon1.box.xmax - polygon1.box.xmin), 0 );\r\n                    let polygon2 = polygon1.translate(vec);\r\n                    layer.add(polygon2);\r\n\r\n                    let collision = CollisionDistance.apply(polygon2, polygon1);\r\n                    let polygon3 = polygon2.translate(vector(-collision, 0));\r\n                    layer.add(polygon3);\r\n\r\n                    // layers.push(layer);\r\n\r\n                    this.props.panAndZoomToShape(stage, layer);\r\n                    this.props.addNewLayer(layer);\r\n                    this.props.applyCollisionDemo();\r\n                    this.props.asyncOperationEnded();\r\n                });\r\n            this.setState({done:true});\r\n            this.props.asyncOperationStarted();\r\n        }\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage,\r\n        parser: state.app.parser\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        panAndZoomToShape: (stage, layer) => dispatch({\r\n            type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n            stage: stage,\r\n            shape: layer\r\n        }),\r\n        addNewLayer: (layer) => dispatch({\r\n            type: ActionTypes.ADD_NEW_LAYER,\r\n            layer: layer\r\n        }),\r\n        applyCollisionDemo: () => dispatch({\r\n            type: ActionTypes.COLLISION_DEMO_URI\r\n        }),\r\n        asyncOperationStarted: () => dispatch(actions.asyncOperationStarted()),\r\n        asyncOperationEnded: () => dispatch(actions.asyncOperationEnded())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CollisionDemo);\r\n","import React from 'react';\r\nimport Modal from '../Modal';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <Modal>\r\n            <div className={classes.BackDrop} >\r\n                <div className={classes.Loader}>Loading ...</div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default spinner;","import * as actionTypes from '../actionTypes';\r\nimport axios from 'axios';\r\n\r\nconst apiKey = \"AIzaSyDMUAcjgolAlapdpFmPEz8SaId1DZw7MpQ\";\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_STARTED\r\n    }\r\n};\r\n\r\nexport const authSucceed = (token, userId, username=null) => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_SUCCEED,\r\n        token,\r\n        userId,\r\n        username\r\n    }\r\n};\r\n\r\nexport const authFailed = (error) => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_FAILED,\r\n        error\r\n    }\r\n};\r\n\r\nexport const authSetUsername = (username) => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_SET_USERNAME,\r\n        username\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_LOGOUT\r\n    }\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            const email = localStorage.getItem('email');\r\n            const password = localStorage.getItem('password');\r\n            if (email && password) {\r\n                dispatch(logIn(email, password))\r\n            }\r\n            else {\r\n                dispatch(logout())\r\n            }\r\n        }, expirationTime * 1000)\r\n    }\r\n};\r\n\r\nexport const logIn = (email, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        };\r\n        localStorage.setItem('email', email);\r\n        localStorage.setItem('password', password);\r\n        const url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=\" + apiKey;\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n\r\n                dispatch(authSucceed(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n                const queryParams = '?auth=' + response.data.idToken + '&orderBy=\"userId\"&equalTo=\"' + response.data.localId + '\"';\r\n                return axios.get(\"https://debug-viewer.firebaseio.com/users.json\" + queryParams);\r\n            })\r\n            .then(response => {\r\n                if (Object.values(response.data.length > 0)) {\r\n                    const username = Object.values(response.data)[0].username;\r\n                    localStorage.setItem('username', username);\r\n                    dispatch(authSetUsername(Object.values(response.data)[0].username))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(authFailed(error.response.data.error))\r\n            })\r\n    }\r\n};\r\n\r\nexport const signUp = (username, email, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        };\r\n        const url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=\" + apiKey;\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                localStorage.setItem('username', username);\r\n\r\n                dispatch(authSucceed(response.data.idToken, response.data.localId, username));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n\r\n                const user = {\r\n                    userId: response.data.localId,\r\n                    username: username\r\n                };\r\n                return axios.post(\"https://debug-viewer.firebaseio.com/users.json\", user);\r\n            })\r\n            .then(response => {\r\n                // do nothing\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response.data.error);\r\n                dispatch(authFailed(error.response.data.error))\r\n            })\r\n    }\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        }\r\n        else {\r\n            const userId = localStorage.getItem('userId');\r\n            const username = localStorage.getItem('username');\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate > new Date()) {\r\n                const timeLeft = expirationDate.getTime() - new Date().getTime()\r\n                dispatch(authSucceed(token, userId, username));\r\n                dispatch(checkAuthTimeout(timeLeft / 1000));\r\n            }\r\n            else {\r\n                dispatch(logout());\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\n\r\nimport AppBody from './AppBody';\r\nimport HeaderComponent from './components/Layout/HeaderComponent/HeaderComponent';\r\n// import Signup from './containers/Auth/SignUp/Signup';\r\n// import Login from './containers/Auth/Login/Login';\r\n// import Logout from './containers/Auth/Logout';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './App.css';\r\n\r\n// import CloudDocument from './components/Constructions/CloudDocument';\r\nimport Demo from './components/Constructions/Demo';\r\n// import BooleanTest from './components/Constructions/BooleanTest';\r\nimport SkeletonRecognition from './components/Constructions/SkeletonRecognition';\r\nimport CollisionDemo from \"./components/Constructions/CollisionDemo\";\r\nimport Spinner from \"./components/UI/Spinner/Spinner\";\r\n// import DocumentsComponent from \"./containers/DocumentsComponent/DocumentsComponent\";\r\nimport * as authActions from \"./store/actions/auth\";\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.authCheckState();\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.location.pathname === '/' && this.props.document.id !== undefined) {\r\n            this.props.history.push(\"/documents/\" + this.props.document.id)\r\n        }\r\n\r\n        // if (this.props.location.pathname.split('/').length > 2 &&\r\n        //     this.props.location.pathname.split('/')[2].length > 0 &&\r\n        //     this.props.document.id === undefined) {\r\n        //     this.props.history.push(\"/\");\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <HeaderComponent\r\n                    title={this.props.title}\r\n                    version={this.props.version}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                    username={this.props.username}\r\n                />\r\n\r\n                <Switch>\r\n                    {/*<Route path=\"/documents\" exact component={DocumentsComponent}/>*/}\r\n                    {/*<Route path=\"/signup\" component={Signup} />*/}\r\n                    {/*<Route path=\"/login\" component={Login} />*/}\r\n                    {/*<Route path=\"/logout\" component={Logout} />*/}\r\n\r\n                    <Route path=\"/\" component={AppBody}/>\r\n\r\n                    {/*<Route path=\"/documents/:id\" component={CloudDocument}/>*/}\r\n\r\n                    <Route path=\"/demo\" component={Demo}/>\r\n                    <Route path=\"/skeleton\" component={SkeletonRecognition}/>\r\n                    <Route path=\"/collision-distance\" component={CollisionDemo}/>\r\n\r\n                </Switch>\r\n\r\n                {this.props.showSpinner ? <Spinner/> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({auth, app, cloudStorage}) => {\r\n    return {\r\n        title: app.title,\r\n        version: app.version,\r\n        showSpinner: app.showSpinner,\r\n        document: cloudStorage.document,\r\n        isAuthenticated: auth.token !== null,\r\n        username: auth.username\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authCheckState: () => dispatch(authActions.authCheckState())\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n\r\n/*\r\n                    <Route path=\"/boolean-test\" component={BooleanTest}/>\r\n */","import * as ActionTypes from '../store/actionTypes';\r\n\r\nconst log = ({ getState, dispatch }) => next => action => {\r\n\r\n    if(action.type !== ActionTypes.MOUSE_MOVED_ON_STAGE) {\r\n        console.log('ACTION: ' + action.type, action);\r\n    }\r\n\r\n    next(action);\r\n};\r\n\r\nexport default log;","import { Job } from '../models/job';\r\nimport {Point, Segment, Arc, Polygon, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\n\r\nFlatten.Image = class Image {\r\n    constructor() {\r\n        this.uri = \"\";\r\n        /**\r\n         * Center in world coordinates\r\n         * @type {Flatten.Point}\r\n         */\r\n        this.center = new Flatten.Point();\r\n        /**\r\n         * Width in world units (inch/mm)\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * Height in world units (inch/mm)\r\n         */\r\n        this.height = 0;\r\n    }\r\n    get box() {\r\n        return new Flatten.Box(\r\n            this.center.x - this.width/2,\r\n            this.center.y - this.height/2,\r\n            this.center.x + this.height/2,\r\n            this.center.y + this.height/2\r\n        );\r\n\r\n    }\r\n};\r\n\r\nfunction parseEdges(edgesXML) {\r\n    let edges = [];\r\n\r\n    for (let edge of Array.from(edgesXML)) {\r\n        let type = edge.getAttribute('type');\r\n\r\n        if (type === \"segment\") {\r\n            let ps = new Point(parseInt(edge.getAttribute('xs'),10), parseInt(edge.getAttribute('ys'),10));\r\n            let pe = new Point(parseInt(edge.getAttribute('xe'),10), parseInt(edge.getAttribute('ye'),10));\r\n\r\n            edges.push(new Segment(ps, pe));\r\n        }\r\n\r\n        if (type === \"curve\") {\r\n            let ps = new Point(parseInt(edge.getAttribute('xs'),10), parseInt(edge.getAttribute('ys'),10));\r\n            let pe = new Point(parseInt(edge.getAttribute('xe'),10), parseInt(edge.getAttribute('ye'),10));\r\n            let pc = new Point(parseInt(edge.getAttribute('xc'),10), parseInt(edge.getAttribute('yc'),10));\r\n\r\n            let counterClockwise = edge.getAttribute('cw') === 'no' ? true : false;\r\n\r\n            let startAngle = vector(pc,ps).slope;\r\n            let endAngle = vector(pc, pe).slope;\r\n\r\n            if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n                endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n            }\r\n\r\n            let r = vector(pc, ps).length;\r\n\r\n            edges.push(new Arc(pc, r, startAngle, endAngle, counterClockwise));\r\n        }\r\n    }\r\n\r\n    return edges;\r\n}\r\n\r\nfunction parsePolygon(polygonsXML) {\r\n    let polygon = new Polygon();\r\n\r\n    // let nedges = parseInt(profile.getAttribute(\"n_edges\"), 10);\r\n\r\n    // Augment Flatten object with style\r\n    let color = polygonsXML.getAttribute(\"color\");\r\n    polygon.style = {\r\n        stroke: color || undefined,\r\n        fill: color || undefined,\r\n        alpha: 1.0\r\n    };\r\n\r\n    // Augment Flatten object with label\r\n    let label = polygonsXML.getAttribute(\"label\");\r\n    polygon.label = label;\r\n\r\n    // Add islands\r\n    let islands = polygonsXML.getElementsByTagName('island');\r\n    for (let island of Array.from(islands)) {\r\n        let edgesXML = island.getElementsByTagName('edge');\r\n        polygon.addFace(parseEdges(edgesXML));\r\n    }\r\n\r\n    // Add holes\r\n    let holes = polygonsXML.getElementsByTagName('hole');\r\n    for (let hole of Array.from(holes)) {\r\n        let edgesXML = hole.getElementsByTagName('edge');\r\n        polygon.addFace(parseEdges(edgesXML));\r\n    }\r\n\r\n    return polygon;\r\n}\r\n\r\nfunction parseSegment(segmentXML) {\r\n    let ps = new Point(parseInt(segmentXML.getAttribute('xs'),10), parseInt(segmentXML.getAttribute('ys'),10));\r\n    let pe = new Point(parseInt(segmentXML.getAttribute('xe'),10), parseInt(segmentXML.getAttribute('ye'),10));\r\n\r\n    let segment = new Segment(ps, pe);\r\n\r\n    // Augment Flatten object with label property\r\n    let label = segmentXML.getAttribute(\"label\");\r\n    segment.label = label;\r\n\r\n    return segment;\r\n}\r\n\r\nfunction parseCurve(curveXML) {\r\n    let ps = new Point(parseInt(curveXML.getAttribute('xs'),10), parseInt(curveXML.getAttribute('ys'),10));\r\n    let pe = new Point(parseInt(curveXML.getAttribute('xe'),10), parseInt(curveXML.getAttribute('ye'),10));\r\n    let pc = new Point(parseInt(curveXML.getAttribute('xc'),10), parseInt(curveXML.getAttribute('yc'),10));\r\n\r\n    let counterClockwise = curveXML.getAttribute('cw') === 'no' ? true : false;\r\n\r\n    let startAngle = vector(pc,ps).slope;\r\n    let endAngle = vector(pc, pe).slope;\r\n\r\n    if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n        endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n    }\r\n\r\n    let r = vector(pc, ps).length;\r\n\r\n    let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n    // Augment Flatten object with label property\r\n    let label = curveXML.getAttribute(\"label\");\r\n    arc.label = label;\r\n\r\n    return arc;\r\n}\r\n\r\nfunction parsePoint(pointXML) {\r\n    let point = new Point(parseInt(pointXML.getAttribute('x'),10), parseInt(pointXML.getAttribute('y'),10));\r\n\r\n    // Augment Flatten object with label property\r\n    let label = pointXML.getAttribute(\"label\");\r\n    point.label = label;\r\n\r\n    return point;\r\n}\r\n\r\nfunction parseImage(imageXML) {\r\n    let img = new Flatten.Image();\r\n    img.center = new Point(parseInt(imageXML.getAttribute('xc'),10), parseInt(imageXML.getAttribute('yc'),10));\r\n    img.width = parseInt(imageXML.getAttribute('width'),10);\r\n    img.height = parseInt(imageXML.getAttribute('height'),10);\r\n    img.uri = imageXML.getAttribute('uri');\r\n    return img;\r\n}\r\n\r\nexport function parseXML(filename, str) {\r\n    let job = new Job();\r\n\r\n    job.filename = filename;\r\n\r\n    let parser = new DOMParser();\r\n    let xmlDoc = parser.parseFromString(str, \"text/xml\");\r\n\r\n    // Parse document title\r\n    let titles = xmlDoc.getElementsByTagName('title');\r\n    if (titles && titles.length > 0) {\r\n        job.title = titles[0].firstChild.nodeValue;          // take the first title if more than one\r\n    }\r\n\r\n    // Parse profiles and add polygons to the job\r\n    let profilesXML = xmlDoc.getElementsByTagName('profile');\r\n    for (let profileXML of Array.from(profilesXML)) {\r\n        let polygon = parsePolygon(profileXML);\r\n        job.profiles.push(polygon);\r\n    }\r\n\r\n    // Parse materials and add polygons to the job\r\n    let materialXML = xmlDoc.getElementsByTagName('material');\r\n    for (let shapeXML of Array.from(materialXML)) {\r\n        let polygon = parsePolygon(shapeXML);\r\n        job.materials.push(polygon);\r\n    }\r\n\r\n    // Parse segments\r\n    let segmentsXML = xmlDoc.getElementsByTagName('segment');\r\n    for (let segmentXML of Array.from(segmentsXML)) {\r\n        let segment = parseSegment(segmentXML);\r\n        job.shapes.push(segment);\r\n    }\r\n\r\n    // Parse segments\r\n    let curvesXML = xmlDoc.getElementsByTagName('curve');\r\n    for (let curveXML of Array.from(curvesXML)) {\r\n        let curve = parseCurve(curveXML);\r\n        job.shapes.push(curve);\r\n    }\r\n\r\n    // Parse points\r\n    let pointsXML = xmlDoc.getElementsByTagName('point');\r\n    for (let pointXML of Array.from(pointsXML)) {\r\n        let point = parsePoint(pointXML);\r\n        job.shapes.push(point);\r\n    }\r\n\r\n    // Parse images\r\n    let imagesXML = xmlDoc.getElementsByTagName('picture');\r\n    for (let imageXML of Array.from(imagesXML)) {\r\n        let image = parseImage(imageXML);\r\n        job.shapes.push(image);\r\n    }\r\n\r\n    return job;\r\n}\r\n","import {Point,Box} from '@flatten-js/core';\r\n\r\nconst pgmResolution = 25.500025;\r\nconst microns2pixels = 400;\r\n// const inch2pixels = 10160;\r\n// const offsetX = 12.322830;\r\n// const offsetY = 8.326776;\r\nconst sizeX = 3.0303;\r\n\r\nfunction toPixels(str) {\r\n    let num = Number(str);\r\n    return Math.round(num*pgmResolution*microns2pixels,0);\r\n}\r\n\r\nexport function parseImage(file) {\r\n    let image = {};          // TODO: to be Flatten.Image\r\n\r\n    let terms = file.name.split('_');\r\n    let yStr = terms[0].substr(1);\r\n    let xStr = terms[1] ? terms[1].substr(1) : undefined;\r\n\r\n    let x = isNaN(xStr) ? 0 : toPixels(xStr) + 90000;\r\n    let y = isNaN(yStr) ? 0 : toPixels(yStr) - 40000;\r\n\r\n    image.center = new Point(x,y);\r\n    image.width = sizeX*microns2pixels*1000;    // 2 mm\r\n    image.box = new Box(\r\n        image.center.x - image.width/2,\r\n        image.center.y - image.width/2,\r\n        image.center.x + image.width/2,\r\n        image.center.y + image.width/2,\r\n    );\r\n\r\n    return image;\r\n}","import { Job } from '../models/job';\r\nimport {point} from '@flatten-js/core';\r\n\r\nconst micron2pixels = 400;\r\nfunction micronToPixels(str) {\r\n    return Math.round(Number(str)*micron2pixels,0);\r\n}\r\n\r\nexport function parseCSV(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n\r\n    for (let i = 0; i < arrayOfLines.length; i++) {\r\n        let line = arrayOfLines[i];\r\n        let terms = line.split(',');\r\n\r\n        let px = micronToPixels(terms[0]);\r\n        let py = micronToPixels(terms[1]);\r\n        let nx = Number(terms[2]);\r\n        let ny = Number(terms[3]);\r\n        let shape = point(px,py);\r\n        shape.nx = nx;\r\n        shape.ny = ny;\r\n        job.shapes.push(shape)\r\n    }\r\n\r\n    return job\r\n}","import * as ActionTypes from '../store/actionTypes';\r\nimport Layers from '../models/layers';\r\n// import { Shape } from '../models/shape';\r\nimport Model from \"../models/model\";\r\nimport { parseXML } from '../dataParsers/parserXML';\r\nimport { parseODB } from \"../dataParsers/parserODB\";\r\nimport { parseImage } from \"../dataParsers/parsePGM\";\r\nimport { parseCSV } from \"../dataParsers/parseCSV\";\r\nimport { parseTXT } from \"../dataParsers/parseTXT\";\r\n\r\nconst readAsText = (reader, file, stage, layers, dispatch, files) => {\r\n\r\n    // Closure to capture file information and parameters\r\n    reader.onload = (function(theFile, stage, layers, dispatch, files) {\r\n        return (event) => {\r\n            let string = event.target.result;\r\n\r\n            let namesplitted = theFile.name.split('.');\r\n            let extension = namesplitted[namesplitted.length-1];\r\n            let job;\r\n            if (extension === 'xml') {\r\n                job = parseXML(theFile.name, string);\r\n            }\r\n            else if (extension === 'csv') {\r\n                job = parseCSV(theFile.name, string);\r\n            }\r\n            else if (extension === 'txt') {\r\n                job = parseTXT(theFile.name, string);\r\n            }\r\n            else {\r\n                job = parseODB(theFile.name, string);\r\n            }\r\n            let layer = Layers.newLayer(stage, layers);\r\n            if (theFile.name !== \"\") {\r\n                layer.name = theFile.name;\r\n            }\r\n            layer.title = job.title;\r\n\r\n            for (let polygon of job.profiles) {\r\n                if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n                    // let watch = undefined; //  parser.parseToWatchArray(string);\r\n                    // let shape = new Shape(polygon, stage, polygon.style, watch);\r\n                    let shape = new Model(polygon, undefined, polygon.label);\r\n\r\n                    layer.add(shape);\r\n                }\r\n            }\r\n\r\n            for (let polygon of job.materials) {\r\n                if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n                    // let watch = undefined; //  parser.parseToWatchArray(string);\r\n                    // let shape = new Shape(polygon, stage, polygon.style, watch);\r\n                    let shape = new Model(polygon, undefined, polygon.label);\r\n\r\n                    layer.add(shape);\r\n                }\r\n            }\r\n\r\n            for (let shape of job.shapes) {\r\n                let model = new Model(shape, undefined, shape.label);\r\n                layer.add(model);\r\n            }\r\n\r\n            // layers.push(layer);\r\n\r\n            if (theFile === files[0]) {\r\n                Layers.setAffected(layers, layer);\r\n                layer.color = Layers.getNextColor(layers);\r\n                layer.displayed = true;\r\n                dispatch({\r\n                    type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                    stage: stage,\r\n                    shape: layer\r\n                });\r\n            }\r\n            dispatch({\r\n                type: ActionTypes.ADD_NEW_LAYER,\r\n                layer: layer\r\n            });\r\n\r\n            dispatch({\r\n                type: ActionTypes.ASYNC_OPERATION_ENDED\r\n            });\r\n        }\r\n    })(file, stage, layers, dispatch, files);\r\n\r\n    reader.readAsText(file);\r\n\r\n    dispatch({\r\n        type: ActionTypes.ASYNC_OPERATION_STARTED\r\n    })\r\n\r\n};\r\n\r\nconst readAsImage = (reader, file, stage, layers, dispatch, files) => {\r\n    reader.addEventListener(\"load\", function () {\r\n        // let image = {};          // TODO: to be Flatten.Image\r\n        // image.uri = this.result;\r\n        // image.center = new Flatten.Point(0,0);\r\n        // image.width = 2*400000;    // 2 micron\r\n        // image.box = new Flatten.Box(\r\n        //     image.center.x - image.width/2,\r\n        //     image.center.y - image.width/2,\r\n        //     image.center.x + image.width/2,\r\n        //     image.center.y + image.width/2,\r\n        // );\r\n\r\n        let image = parseImage(file);\r\n        image.uri = this.result;\r\n\r\n        let model = new Model(image);\r\n\r\n        let layer = Layers.newLayer(stage, layers);\r\n        if (file.name !== \"\") {\r\n            layer.name = file.name;\r\n        }\r\n\r\n        layer.add(model);\r\n\r\n        // layers.push(layer);\r\n\r\n        if (file === files[0]) {\r\n            Layers.setAffected(layers, layer);\r\n            layer.color = Layers.getNextColor(layers);\r\n            layer.displayed = true;\r\n            dispatch({\r\n                type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                stage: stage,\r\n                shape: layer\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: ActionTypes.ADD_NEW_LAYER,\r\n            layer: layer\r\n        });\r\n\r\n        dispatch({\r\n            type: ActionTypes.ASYNC_OPERATION_ENDED\r\n        });\r\n\r\n    }, false);\r\n\r\n    reader.readAsDataURL(file);\r\n};\r\n\r\nconst readFile = (file, stage, layers, dispatch, files) => {\r\n    if (file.type !== \"\" &&\r\n        !(file.type.match('text.*') || file.type.match('application.*') ||\r\n        file.type.match('image.*')) ) return;   // validate type is text\r\n\r\n    let reader = new FileReader();\r\n\r\n    if (file.type.match('text.*') || file.type.match('application.*') || file.name.match('features*')) {\r\n        readAsText(reader, file, stage, layers, dispatch, files);\r\n    }\r\n\r\n    else if (file.type.match('image.*')) {\r\n        readAsImage(reader, file, stage, layers, dispatch, files);\r\n    }\r\n\r\n};\r\n\r\nconst readFiles = ({ dispatch, getState }) => next => action => {\r\n\r\n    if (action.type !== ActionTypes.FILENAME_LIST_SELECTED) {\r\n        return next(action);\r\n    }\r\n\r\n    let stage = action.stage;\r\n    let layers = action.layers;\r\n\r\n    // Load and parse files\r\n    // in MS Edge FilesList is not array. It is indexable but not iterable\r\n    // for (let i=0; i < action.files.length; i++) {\r\n    //     readFile(action.files[i], stage, layers, dispatch, action.files);\r\n    // }\r\n    for (let file of Array.from(action.files)) {\r\n        readFile(file, stage, layers, dispatch, action.files);\r\n    }\r\n};\r\n\r\nexport default readFiles;\r\n\r\n","import { Job } from '../models/job';\r\nimport {Parser} from './parser';\r\n\r\nexport function parseTXT(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let parser = new Parser();\r\n\r\n    let shapesArray = parser.parse(str);\r\n\r\n    if (shapesArray.length > 0) {\r\n        for (let shape of shapesArray) {\r\n            job.shapes.push(shape)\r\n        }\r\n    }\r\n\r\n    return job\r\n}","import * as ActionTypes from \"../store/actionTypes\";\r\nimport Layers from \"../models/layers\";\r\n\r\nconst pasteData = ({ dispatch, getState }) => next => action => {\r\n\r\n    if (action.type !== ActionTypes.DATA_FROM_BUFFER_PASTED) {\r\n        return next(action);\r\n    }\r\n\r\n    let state = getState();\r\n    let stage = state.app.stage;\r\n    let layers = state.layers;\r\n    let parser = state.app.parser;\r\n\r\n    let layer = undefined;\r\n    if (state.app.importDataToNewLayer) {   // import data to new layer\r\n        layer = Layers.newLayer(stage, layers);\r\n        layers.push(layer);\r\n    }\r\n    else {                                  // import data to affected layer\r\n        layer = layers.find((lay) => lay.affected);\r\n        if (!layer) {                       // if no layer affected, add new\r\n            layer = Layers.newLayer(stage, layers);\r\n            layers.push(layer);\r\n        }\r\n    }\r\n\r\n    // Paste data from ClipBoard\r\n    for (let item of action.data.items) {\r\n        item.getAsString((string) => {\r\n            let shapesArray = parser.parse(string);\r\n\r\n            // TODO: add something like poly.valid()\r\n\r\n            if (shapesArray.length > 0) {\r\n                for (let shape of shapesArray) {\r\n                    layer.add(shape);\r\n                }\r\n            }\r\n\r\n            if (layer.shapes.length > 0) {\r\n                dispatch({\r\n                    type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                    shape: layer,\r\n                    stage: stage\r\n                });\r\n                dispatch({\r\n                    type: ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED,\r\n                    layer: layer\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n        break;\r\n    }\r\n\r\n};\r\n\r\nexport default pasteData;\r\n","import * as ActionTypes from '../store/actionTypes';\r\n\r\nconst stageController = ({getState, dispatch}) => next => action => {\r\n\r\n    const mouse = getState().mouse;\r\n    let stage = action.stage;\r\n\r\n\r\n    if (stage) {\r\n        switch (action.type) {\r\n            case ActionTypes.STAGE_RESIZED:\r\n                stage.resize();\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_DOWN_ON_STAGE:\r\n                stage.panByMouseStart();\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_MOVED_ON_STAGE:\r\n                if (action.dx !== undefined && action.dy !== undefined) {\r\n                    stage.panByMouseMove(action.dx, action.dy);\r\n                }\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_UP_ON_STAGE:\r\n                stage.panByMouseStop();\r\n                break;\r\n\r\n            case ActionTypes.PAN_AND_ZOOM_TO_SHAPE:\r\n                let center = action.shape.center;\r\n                let box = action.shape.box;\r\n                if (isNaN(center.x) || isNaN(center.y)) return;\r\n                stage.panToCoordinate(center.x, center.y);\r\n                stage.zoomToLimits(box.xmax - box.xmin, box.ymax - box.ymin);\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_WHEEL_MOVE_ON_STAGE:\r\n                let bIn = action.delta > 0;\r\n                // stage.zoomByMouse(action.x, action.y, bIn, 1 + Math.abs(action.delta)/100.);\r\n                stage.zoomByMouse(action.x, action.y, bIn, 1.2);\r\n                break;\r\n\r\n            case ActionTypes.CLEAR_ALL:\r\n                stage.removeAllChildren();\r\n                stage.removeAllListeners();\r\n                break;\r\n\r\n            case ActionTypes.PINCH_DOWN_ON_STAGE:\r\n                stage.zoomByPinchStart(action.x1, action.y1);\r\n                break;\r\n\r\n            case ActionTypes.PINCH_MOVED_ON_STAGE:\r\n                if (mouse.touchPoints) {\r\n                    let dx = mouse.touchPoints[0].x - mouse.touchPoints[1].x;\r\n                    let dy = mouse.touchPoints[0].y - mouse.touchPoints[1].y;\r\n                    let distStart = Math.sqrt(dx*dx + dy*dy);\r\n\r\n                    dx = action.x2 - action.x1;\r\n                    dy = action.y2 - action.y1;\r\n                    let distCurrent = Math.sqrt(dx*dx + dy*dy);\r\n                    let ratio = distCurrent / distStart;\r\n                    stage.zoomByPinchMove(action.x1, action.y1, ratio);\r\n                }\r\n                break;\r\n\r\n            case ActionTypes.PINCH_UP_ON_STAGE:\r\n                stage.zoomByPinchStop();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n\r\nexport default stageController;","import * as ActionTypes from '../store/actionTypes';\r\nimport Layers from \"../models/layers\";\r\nimport {point, arc, segment} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\nlet Algorithmia = window.Algorithmia;\r\n\r\n// function zoomHome(shape, stage) {\r\n//     let box = shape.box;\r\n//     let x = (box.xmin + box.xmax)/2;\r\n//     let y = (box.ymin + box.ymax)/2;\r\n//     stage.panToCoordinate(x, y);\r\n//     stage.zoomToLimits(box.xmax - box.xmin, box.ymax - box.ymin);\r\n// }\r\n\r\nconst skeleton_recognition = ({dispatch, getState}) => next => action => {\r\n\r\n    if (action.type === ActionTypes.SKELETON_RECOGNITION_BUTTON_PRESSED) {\r\n\r\n        let state = getState();\r\n        let stage = state.app.stage;\r\n\r\n        let layers = state.layers;\r\n        let currentLayer = Layers.getAffected(layers);\r\n        let shapes = currentLayer.shapes;\r\n        let input = shapes.map(shape =>\r\n            [shape.geom.x / 400., shape.geom.y / 400., shape.geom.nx, shape.geom.ny]\r\n        );\r\n\r\n        let client = Algorithmia.client(\"simby4RUwqQmtMDaHAPj5wsQwlD1\");\r\n        let algorithm = \"alexbol99/SeketonRecognition\";\r\n\r\n        client.algo(algorithm)\r\n            .pipe(input)\r\n            .then(function (output) {\r\n                if (output.error) return console.error(\"error: \" + output.error);\r\n\r\n                let newLayer = Layers.newLayer(stage, layers);\r\n                newLayer.name = \"recognized\";\r\n                newLayer.title = \"recognized\";\r\n                // newLayer.displayed = true;\r\n\r\n                for (let row of output.result) {\r\n                    let shape;\r\n                    if (row[0] instanceof Array && row[0].length === 2) {\r\n                        let pc = point(row[0][0] * 400, row[0][1] * 400);\r\n                        let r = row[1] * 400;\r\n                        /********center radius startAng endAng **********/\r\n                        shape = arc(pc, r, row[2], row[3], Flatten.CCW)\r\n                    }\r\n                    else {\r\n                        shape = segment(\r\n                            point(row[0] * 400, row[1] * 400),\r\n                            point(row[2] * 400, row[3] * 400))\r\n                    }\r\n                    if (row[4]) {\r\n                        shape.label = row[4]\r\n                    }\r\n                    newLayer.add(shape)\r\n                }\r\n                layers.push(newLayer);\r\n\r\n                dispatch({\r\n                    type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                    stage: stage,\r\n                    shape: currentLayer\r\n                })\r\n            });\r\n    }\r\n\r\n    return next(action);\r\n};\r\n\r\n\r\nexport default skeleton_recognition;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport reducer from './store/reducer';\r\n\r\nimport App from './App';\r\nimport log from './middleware/log';\r\nimport readFiles from './middleware/readFiles';\r\nimport pasteData from './middleware/pasteData';\r\nimport stageController from './middleware/stageController';\r\nimport skeleton_recognition from './middleware/skeleton_recognition';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer,\r\n    composeEnhancers(\r\n        applyMiddleware(log, readFiles, pasteData, skeleton_recognition, stageController, thunk)\r\n    )\r\n);\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <App/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default Preloader;\r\n\r\n"],"sourceRoot":""}