{"version":3,"sources":["serviceWorker.js","store/actionTypes.js","store/reducers/auth.js","models/createArcs.js","models/polygonOffset.js","models/job.js","dataParsers/parseFlighta.js","dataParsers/parser.js","store/reducers/app.js","models/model.js","models/layer.js","models/layers.js","store/reducers/layers.js","store/reducers/mouse.js","store/reducers/measureShapesTool.js","store/reducers/cloudStorage.js","store/reducers/upload.js","store/reducer.js","middleware/log.js","dataParsers/parseJSON.js","middleware/pasteData.js","middleware/stageController.js","middleware/skeleton_recognition.js","axios-database.js","store/actions/appActions.js","store/actions/layersActions.js","store/actions/cloudStorageActions.js","components/UI/Button/Button.js","components/UI/ButtonSeparator/ButtonSeparator.js","components/MainComponent/ToolbarComponent/ToolbarComponent.js","models/stage.js","store/actions/stageActions.js","components/MainComponent/CanvasComponent/CanvasComponent.js","components/Layout/StatusComponent/StatusComponent.js","components/MainComponent/GraphicsComponent/stageComponent.js","models/graphics.js","models/utils.js","components/MainComponent/GraphicsComponent/graphics/shapeComponent.js","components/MainComponent/GraphicsComponent/graphics/imageComponent.js","components/MainComponent/GraphicsComponent/layerComponent.js","components/MainComponent/GraphicsComponent/domelements/labelComponent.js","components/MainComponent/GraphicsComponent/LabelsLayerComponent/labelsLayerComponent.js","components/MainComponent/GraphicsComponent/domelements/VertexLabel/VertexLabel.js","components/MainComponent/GraphicsComponent/graphics/vertexComponent.js","components/MainComponent/GraphicsComponent/graphics/verticesComponent.js","components/MainComponent/GraphicsComponent/verticesLayerComponent.js","components/MainComponent/GraphicsComponent/layersComponent.js","tools/measurePointsTool.js","tools/measureShapesTool.js","tools/displayCoordsTool.js","components/UI/Modal.js","components/UI/ModalPopup/ModalPopup.js","components/AboutPopup/AboutPopup.js","dataParsers/createXML.js","components/DownloadPopup/DownloadPopup.js","components/UI/Snackbar/Snackbar.js","dataParsers/parserXML.js","dataParsers/parserODB.js","dataParsers/parsePGM.js","dataParsers/parseCSV.js","dataParsers/parseTXT.js","store/actions/upload.js","components/UploadPopup/UploadPopup.js","components/Constructions/CloudDocument.js","containers/MainComponent/MainComponent.js","components/LayersList/LayerListToolbar/LayerListToolbar.js","components/LayersList/LayerEditForm/LayerEditForm.js","components/LayersList/LayerListElement/LayerListElement.js","containers/LayerList/LayersList.js","components/Layout/AsideComponent/AsideComponent.js","AppBody.js","components/Layout/HeaderComponent/HeaderComponent.js","components/Constructions/Demo.js","components/Constructions/SkeletonRecognition.js","models/collisionDistance.js","components/Constructions/CollisionDemo.js","components/UI/Spinner/Spinner.js","store/actions/auth.js","App.js","index.js","components/UI/Button/Button.module.css","components/UploadPopup/UploadPopup.module.css","components/LayersList/LayerListElement/LayerListElement.module.css","components/UI/ButtonSeparator/ButtonSeparator.module.css","components/MainComponent/ToolbarComponent/ToolbarComponent.module.css","components/UI/ModalPopup/ModalPopup.module.css","containers/LayerList/LayersList.module.css","components/Layout/HeaderComponent/HeaderComponent.module.css","components/UI/Spinner/Spinner.module.css","components/MainComponent/CanvasComponent/CanvasComponent.module.css","components/Layout/StatusComponent/StatusComponent.module.css","components/MainComponent/GraphicsComponent/LabelsLayerComponent/labelsLayer.module.css","components/MainComponent/GraphicsComponent/domelements/VertexLabel/VertexLabel.module.css","components/AboutPopup/AboutPopup.module.css","components/DownloadPopup/DownloadPopup.module.css","components/UI/Snackbar/Snackbar.module.css","containers/MainComponent/MainComponent.module.css","components/LayersList/LayerListToolbar/LayerListToolbar.module.css","components/LayersList/LayerEditForm/LayerEditForm.module.css","components/Layout/AsideComponent/AsideComponent.module.css"],"names":["Boolean","window","location","hostname","match","NEW_STAGE_CREATED","STAGE_RESIZED","STAGE_UNMOUNTED","PAN_BY_DRAG_BUTTON_CLICKED","MEASURE_POINTS_BUTTON_PRESSED","MEASURE_SHAPES_BUTTON_PRESSED","TOGGLE_ABOUT_POPUP_CLICKED","TOGGLE_UNITS_CLICKED","TOGGLE_WIDTH_MODE_CLICKED","TOGGLE_DISPLAY_VERTICES_CLICKED","TOGGLE_DISPLAY_LABELS_CLICKED","TOGGLE_SHOW_LAYER_LIST_CLICKED","TOGGLE_DOWNLOAD_POPUP_CLICKED","TOGGLE_UPLOAD_POPUP_CLICKED","MOUSE_MOVED_ON_STAGE","MOUSE_DOWN_ON_STAGE","MOUSE_UP_ON_STAGE","MOUSE_WHEEL_MOVE_ON_STAGE","MOUSE_ROLL_OVER_SHAPE","MOUSE_ROLL_OUT_SHAPE","MOUSE_CLICKED_ON_SHAPE","PINCH_DOWN_ON_STAGE","PINCH_MOVED_ON_STAGE","PINCH_UP_ON_STAGE","PAN_AND_ZOOM_TO_SHAPE","ADD_LAYER_BUTTON_PRESSED","ADD_NEW_LAYER","DELETE_LAYER_BUTTON_PRESSED","SORT_LAYERS_BUTTON_PRESSED","TOGGLE_DISPLAY_LAYER_PRESSED","TOGGLE_AFFECTED_LAYER_PRESSED","OPEN_LAYER_EDIT_FORM_PRESSED","SUBMIT_LAYER_EDIT_FORM_PRESSED","ESCAPE_LAYER_EDIT_FORM_PRESSED","LAYERS_LIST_ARROW_DOWN_PRESSED","LAYERS_LIST_ARROW_UP_PRESSED","FILES_UPLOAD_COMPLETED","INITIALIZE_UPLOAD_STATE","DATA_FROM_BUFFER_PASTED","AABB_TREE_NEXT_LEVEL","SKELETON_RECOGNITION_URI","SKELETON_RECOGNITION_BUTTON_PRESSED","ASYNC_OPERATION_STARTED","ASYNC_OPERATION_ENDED","REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED","REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED","REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED","REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED","DELETE_DOCUMENT_FROM_DATABASE_SUCCEED","DOCUMENT_SELECTED_FROM_LIST","DOCUMENT_NAME_UPDATED","CLEAR_ALL_BUTTON_CLICKED","AUTHENTICATION_STARTED","AUTHENTICATION_SUCCEED","AUTHENTICATION_FAILED","AUTHENTICATION_LOGOUT","AUTHENTICATION_SET_USERNAME","initialState","token","userId","username","error","loading","auth","state","action","type","actionTypes","arcSE","center","start","end","counterClockwise","startAngle","vector","slope","endAngle","Utils","EQ","Math","PI","r","length","Arc","Flatten","BooleanOperations","BOOLEAN_UNION","unify","subtract","addToIntPoints","getSortedArray","splitByIntersections","removeNotRelevantChains","removeOldFaces","restoreFaces","offsetArc","arc","value","arc_cap1","arc_cap2","w","abs","polygon","Polygon","arc_outer","clone","sweep","arcStartSweep","arcEndSweep","arc_inner","undefined","pc","CW","CCW","Segment","addFace","faces","setArcLength","ips","Face","getSelfIntersections","edges","slice","edge_cap1","edge_cap2","int_points","pt","int_points_sorted","bv","OUTSIDE","int_point","edge_before","edge_after","INSIDE","num","next","prev","orientation","ORIENTATION","reverse","offsetSegment","seg","v_seg_unit","x","y","normalize","v_left","rotate90CCW","multiply","v_right","rotate90CW","seg_left","translate","seg_right","cap1","cap2","Job","this","filename","title","profiles","materials","shapes","b","Box","shape","merge","box","parseComplexShape","row_lines","loop_start","ps","pe","loop","poly","i","terms","split","point","parseInt","includes","segment","push","equalTo","parseToFlightaShapes","str","line","parseFlighta","job","Parser","arrayOfLines","watchArray","substring","indexOf","parenth","isNaN","trim","Point","label","termArr","psArr","peArr","pcArr","Circle","pllArr","xmin","ymin","width","height","search","nedgesStr","nedges","j","parseToSegment","parseToArc","points","pointArr","parseToPoint","parseToCircle","parseToRectangle","parseToODBLine","parseToODBArc","parseToPolygon","size","parseToShapes","parseToPoints","unitsList","name","decimals","divisor","defaultAppState","version","process","build","units","parser","widthOn","displayVertices","displayLabels","measurePointsActive","zoomFactor","originX","originY","showAboutPopup","importDataToNewLayer","showSkeletonRecognitionButton","applySkeletonRecognition","stage","showSpinner","showLayerList","showDownloadPopup","showUploadPopup","app","ActionTypes","Object","assign","resolution","origin","curUnitsId","findIndex","newUnits","defaultStyle","strokeStyle","stroke","fill","alpha","Model","geom","style","model","Layer","color","displayed","edited","affected","layer","newShape","add","xmax","ymax","JSON","stringify","colors","Layers","layers","getNewName","defaultName","inc","comparator","find","lay","currentAffectedLayer","getAffected","col","index","l","newLayers","filter","getNextColor","sort","l1","l2","name1","toUpperCase","name2","map","toJSON","newLayer","affectedLayer","affectedLayerId","delete","setAffected","toggleDisplayed","setEdited","setNameAndTitle","nextLayer","newCurLayer","newNextLayer","defaultMouseState","startX","startY","touchPoints","mouse","x1","y1","x2","y2","defaultMeasureShapesTool","measureShapesActive","measureShapesFirstClick","hoveredShape","firstMeasuredShape","secondMeasuredShape","firstMeasuredLayer","secondMeasuredLayer","distance","shortestSegment","is_mobile","mobilecheck","measureShapesTool","shape1","shape2","Distance","documentDefaultState","id","owner","lastUpdated","cloudStorageDefaultState","document","documentsList","isUpToDate","stateDocumentsList","actionDocumentsList","keys","key","hasOwnProperty","cloudStorage","newList","defaultState","uploadStarted","uploadCompleted","uploadedFiles","upload","reducer","combineReducers","log","getState","dispatch","console","parseJSONShape","jsonShape","parseJSON","jsonArray","parse","e","Error","Array","faceArray","Image","uri","pasteData","data","items","getAsString","string","shapesArray","message","stageController","resize","panByMouseStart","dx","dy","panByMouseMove","panByMouseStop","panToCoordinate","zoomToLimits","bIn","delta","zoomByMouse","removeAllChildren","removeAllListeners","zoomByPinchStart","distStart","sqrt","ratio","zoomByPinchMove","zoomByPinchStop","Algorithmia","skeleton_recognition","currentLayer","input","nx","ny","client","algo","pipe","then","output","result","row","instance","axios","create","baseURL","setHomeView","asyncOperationStarted","asyncOperationEnded","addNewLayer","toggleDisplayLayer","deleteAllLayers","documents","values","fetchDocumentFromDatabase","layerActions","appActions","firstLayer","docUrl","geomUrl","Promise","all","get","responses","layerData","requestFetchDocumentFromDatabaseSucceed","catch","alert","addDocumentToDatabase","payload","history","post","response","layersJSON","geomPayload","registerDocumentAddedToDatabase","Date","now","updateDocumentInDatabase","put","url","geomId","reponse","button","props","iconStyle","classes","IconTrigger","active","IconModeActive","IconModeNotActive","buttonStyle","mobileOnly","onClick","className","iconName","buttonSeparator","ButtonSeparator","IconSeparator","ToolbarComponent","Button","onShowUploadPopupPressed","onLayerListButtonClicked","onSortLayersButtonClicked","onShowDownloadPopupPressed","onClearAllButtonClicked","onHomeButtonPressed","onPanByDragPressed","onMeasurePointsButtonPressed","onMeasureBetweenShapesButtonPressed","onToggleWidthModePressed","onToggleVerticesPressed","onToggleLabelsPressed","onSkeletonRecognitionButtonPressed","onUnitClicked","onShowAboutPopupPressed","Component","Stage","canvas","Touch","enable","mouseMoveOutside","enableMouseOver","clientWidth","clientHeight","oldOrigin","oldZoomFactor","pinchAnchorX","pinchAnchorY","pinchStarted","minX","C2W_X","minY","C2W_Y","maxX","maxY","addChild","scalar","scalingFactor","canvasX","canvasY","worldX","worldY","W2C_X","W2C_Y","newOrigin","deltaX","deltaY","curRatio","min","max","focusX","focusY","zoomIn","zoomOut","newFocusX","newFocusY","panBy","zoom","getContext","clearRect","CreatejsStage","handleMouseWheelMove","CanvasComponent","canvasElement","createRef","handleMouseMove","event","focus","nativeEvent","touches","clientX","target","offsetLeft","clientY","offsetTop","handlePinchMove","stageX","stageY","handleMouseDown","handlePinchDown","handleMouseUp","stopPropagation","preventDefault","handlePinchUp","handleMouseLeave","blur","body","handleMouseWheel","detail","wheelDelta","offsetX","offsetY","handleMouseWheelFox","layerX","layerY","current","on","addEventListener","passive","registerStage","tabIndex","ref","styles","connect","actions","StatusComponent","StageComponent","setTransform","update","onStageUnmounted","children","graphics","graphics_point","graphics_segment","graphics_arc","graphics_circle","graphics_box","graphics_polygon","radius","Graphics","beginFill","command","circle","drawCircle","ignoreScale","setStrokeStyle","beginStroke","moveTo","lineTo","endStroke","drawRect","setGraphicsEdge","edge","setGraphicsEdgeSegment","setGraphicsEdgeArc","setGraphicsFace","face","first","is_equal","obj1","obj2","equal","format","toFixed","ShapeComponent","params","handleMouseOver","onMouseOver","handleMouseOut","onMouseOut","handleClick","Shape","hovered","selected","aperture","isEmpty","redraw","nextProps","nextState","off","removeChild","clear","ImageComponent","bitmap","image","naturalWidth","naturalHeight","scaleX","scaleY","tx","ty","regX","regY","img","onload","Bitmap","onImageLoaded","setAttribute","src","loadImage","handleMouseRollOverShape","handleMouseRollOutShape","handleClickOnShape","labelComponent","left","top","position","LabelComponent","VertexLabel","vertex","VertexComponent","shadow","Shadow","setState","mouseEnabled","VerticesComponent","vertices","LayersComponent","MeasurePointsTool","measureCanvas","measureStage","endX","endY","measureStarted","cursor","draw","context","textX","textY","textWidth","backX","backY","pllX","pllY","W2C_Scalar","beginPath","rect","lineWidth","text","measurement","font","measureText","textAlign","fillStyle","globalAlpha","fillRect","textHeight","fillText","dist","removeAllEventListeners","mainCanvas","MeasureShapesTool","labelShape","Text","unscale","redrawLabel","DisplayCoordsTool","coordX","coordY","backgroundColor","opacity","margin","padding","modalRoot","getElementById","Modal","el","createElement","appendChild","ReactDOM","createPortal","BackDrop","backDropRef","useRef","ev","closePopup","ModalPopup","dragX","dragY","elementDrag","element","closeDragElement","onmouseup","onmousemove","useEffect","handleKeyDown","code","removeEventListener","showPopup","onMouseDown","header","AboutPopup","toggleAboutPopup","href","pointToXMLString","xw","startElement","writeAttribute","endElement","segmentToXMLString","arcToXMLString","round","circleToXMLString","polygonToXMlString","createXMLString","XMLWriter","startDocument","endDocument","toString","DownloadPopup","downloadData","xmlString","encodeURIComponent","download","Snackbar","onAnimationEnd","parseEdges","edgesXML","from","getAttribute","parsePolygon","polygonsXML","islands","getElementsByTagName","holes","parseSegment","segmentXML","parseCurve","curveXML","parsePoint","pointXML","parseImage","imageXML","InchToPixels","Number","MilsToPixels","lines","end_of_face","parseLine","apertures","ap_value","parseArc","toPixels","micronToPixels","parseTXT","readAsText","reader","file","files","promise","resolve","reject","theFile","namesplitted","extension","xmlDoc","DOMParser","parseFromString","titles","firstChild","nodeValue","profilesXML","materialXML","segmentsXML","curvesXML","curve","pointsXML","imagesXML","parseXML","px","py","parseCSV","substr","polarity","odbLine","odbArc","ap_key","parseODB","readAsImage","yStr","xStr","sizeX","readAsDataURL","readFile","FileReader","readFiles","promises","filesUploadCompleted","UploadPopup","inputElement","clipboardWindowRef","clipboardWindowWidth","clipboardWindowHeight","dragOver","clipboardData","openFilesButtonClicked","click","pasteHandler","onPaste","dropHandler","dataTransfer","kind","getAsFile","dragOverHandler","dragLeaveHandler","filesSelectedHandler","File","FileList","initUploadState","pX","pY","snackbarMessage","newFilesNum","UploadTarget","UploadTargetDragOver","UploadTargetDragLeave","paddingLeft","paddingRight","paddingTop","paddingBottom","onDrop","onDragOverCapture","onDragLeaveCapture","display","multiple","onChange","CloudDocument","done","cloudActions","MainComponent","forceUpdate","onSaveDocumentButtonClicked","dataURL","toDataURL","toLocaleDateString","toLocaleTimeString","clearCurrentDocument","clearAllLayers","toggleWidthMode","toggleDisplayVertices","handlePaste","currentTarget","activeElement","tagName","pasteDataFromBuffer","onresize","resizeStage","handleKeyUp","displayCoordsTool","measurePointsTool","measuredLayersDisplayed","toggleUploadPopup","toggleLayerList","sortLayersList","toggleDownloadPopup","togglePanByDrag","toggleMeasureBetweenPoints","toggleMeasureBetweenShapes","toggleDisplayLabels","toggleUnits","destroyStage","path","component","ownProps","LayerListToolbar","onEditLayerButtonClicked","onDeleteLayerButtonClicked","LayerEditForm","layerNameRef","layerTitleRef","onSubmitLayerEditForm","setFocus","onSubmit","onMouseMove","htmlFor","defaultValue","cols","rows","onEscapeLayerEditForm","parent","LayerListElement","nodeName","elem","refs","layerName","hex","g","percent","replace","rgba","bgcolor","layerNameOpacity","onLayerClicked","onDoubleClick","onLayerDoubleClicked","LayerSelectionBox","onAffectedBoxClicked","LayerSelectionMark","LayerNameBox","LayersList","parentElement","setAffectedNextLayer","setAffectedPrevLayer","onLayerListClicked","layersComponent","maxHeight","AsideComponent","updateDocumentName","Fragment","onManageCloudStorageButtonClicked","withRouter","pathname","Demo","resp","panAndZoomToShape","SkeletonRecognition","CollisionDistance","polygon1","polygon2","collision_distance","POSITIVE_INFINITY","edge2polygon","edge2","shapeBox","NEGATIVE_INFINITY","resp_edges","edge1","segment2segment","segment2arc","arc2arc","intersections","Line","Vector","intersect","ip","distanceTo","segment1","segment2","point2shape","v_s","v","tangent_point","arc1","arc2","arc_enlarged","translateArc","dist_tmp","EQ_0","GE","arc_reduced","LT","vec","arc_tmp","newPolygon","arc_trans","CollisionDemo","collision","apply","polygon3","applyCollisionDemo","spinner","Loader","authStart","authSucceed","authFailed","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","email","getItem","password","logIn","authData","returnSecureToken","setItem","expirationDate","getTime","expiresIn","idToken","localId","queryParams","authSetUsername","App","authCheckState","returnValue","isAuthenticated","AppBody","exact","Spinner","timeLeft","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","render","basename","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.917faf48.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nexport const NEW_STAGE_CREATED = \"NEW_STAGE_CREATED\";\r\nexport const STAGE_RESIZED = \"STAGE_RESIZED\";\r\nexport const NEW_SHAPE_PASTED = \"NEW_SHAPE_PASTED\";\r\nexport const CLEAR_ALL = \"CLEAR_ALL\";\r\nexport const STAGE_UNMOUNTED = \"STAGE_UNMOUNTED\";\r\n\r\n/** Toolbar buttons **/\r\nexport const PAN_BY_DRAG_BUTTON_CLICKED = \"PAN_BY_DRAG_BUTTON_CLICKED\";\r\n// export const SAVE_DOCUMENT_BUTTON_CLICKED = \"SAVE_DOCUMENT_BUTTON_CLICKED\";\r\nexport const MANAGE_CLOUD_STORAGE_BUTTON_CLICKED = \"MANAGE_CLOUD_STORAGE_BUTTON_CLICKED\";\r\n\r\nexport const MEASURE_POINTS_BUTTON_PRESSED = \"MEASURE_POINTS_BUTTON_PRESSED\";\r\nexport const MEASURE_SHAPES_BUTTON_PRESSED = \"MEASURE_SHAPES_BUTTON_PRESSED\";\r\nexport const TOGGLE_ABOUT_POPUP_CLICKED = \"TOGGLE_ABOUT_POPUP_CLICKED\";\r\n// export const CLOSE_ABOUT_POPUP_BUTTON_PRESSED = \"CLOSE_ABOUT_POPUP_BUTTON_PRESSED\";\r\nexport const TOGGLE_UNITS_CLICKED = \"TOGGLE_UNITS_CLICKED\";\r\nexport const TOGGLE_WIDTH_MODE_CLICKED = \"TOGGLE_WIDTH_MODE_CLICKED\";\r\nexport const TOGGLE_DISPLAY_VERTICES_CLICKED = \"TOGGLE_DISPLAY_VERTICES_CLICKED\";\r\nexport const TOGGLE_DISPLAY_LABELS_CLICKED = \"TOGGLE_DISPLAY_LABELS_CLICKED\";\r\nexport const TOGGLE_SHOW_LAYER_LIST_CLICKED = \"TOGGLE_SHOW_LAYER_LIST_CLICKED\";\r\nexport const TOGGLE_DOWNLOAD_POPUP_CLICKED = \"TOGGLE_DOWNLOAD_POPUP_CLICKED\";\r\nexport const TOGGLE_UPLOAD_POPUP_CLICKED=\"TOGGLE_UPLOAD_POPUP_CLICKED\";\r\n\r\nexport const MOUSE_MOVED_ON_STAGE = \"MOUSE_MOVED_ON_STAGE\";\r\nexport const MOUSE_DOWN_ON_STAGE = \"MOUSE_DOWN_ON_STAGE\";\r\nexport const MOUSE_UP_ON_STAGE = \"MOUSE_UP_ON_STAGE\";\r\nexport const MOUSE_WHEEL_MOVE_ON_STAGE = \"MOUSE_WHEEL_MOVE_ON_STAGE\";\r\n\r\nexport const MOUSE_ROLL_OVER_SHAPE = \"MOUSE_ROLL_OVER_SHAPE\";\r\nexport const MOUSE_ROLL_OUT_SHAPE = \"MOUSE_ROLL_OUT_SHAPE\";\r\nexport const MOUSE_CLICKED_ON_SHAPE = \"MOUSE_CLICKED_ON_SHAPE\";\r\n\r\nexport const PINCH_DOWN_ON_STAGE = \"PINCH_DOWN_ON_STAGE\";\r\nexport const PINCH_MOVED_ON_STAGE = \"PINCH_MOVED_ON_STAGE\";\r\nexport const PINCH_UP_ON_STAGE = \"PINCH_UP_ON_STAGE\";\r\n\r\n// export const HOME_BUTTON_CLICKED = \"HOME_BUTTON_CLICKED\";\r\nexport const PAN_TO_COORDINATE = \"PAN_TO_COORDINATE\";\r\nexport const PAN_AND_ZOOM_TO_SHAPE = \"PAN_AND_ZOOM_TO_SHAPE\";\r\n\r\nexport const LAYER_LIST_PANEL_PRESSED = \"LAYER_LIST_PANEL_PRESSED\";\r\nexport const ADD_LAYER_BUTTON_PRESSED = \"ADD_LAYER_BUTTON_PRESSED\";\r\nexport const ADD_NEW_LAYER = \"ADD_NEW_LAYER\";\r\nexport const DELETE_LAYER_BUTTON_PRESSED = \"DELETE_LAYER_BUTTON_PRESSED\";\r\nexport const SORT_LAYERS_BUTTON_PRESSED = \"SORT_LAYERS_BUTTON_PRESSED\";\r\nexport const CLEAN_AND_UPDATE_LAYERS = \"CLEAN_AND_UPDATE_LAYERS\";\r\n\r\nexport const TOGGLE_DISPLAY_LAYER_PRESSED = \"TOGGLE_DISPLAY_LAYER_PRESSED\";\r\nexport const TOGGLE_AFFECTED_LAYER_PRESSED=\"TOGGLE_AFFECTED_LAYER_PRESSED\";\r\nexport const OPEN_LAYER_EDIT_FORM_PRESSED = \"OPEN_LAYER_EDIT_FORM_PRESSED\";\r\nexport const SUBMIT_LAYER_EDIT_FORM_PRESSED = \"SUBMIT_LAYER_EDIT_FORM_PRESSED\";\r\nexport const ESCAPE_LAYER_EDIT_FORM_PRESSED = \"ESCAPE_LAYER_EDIT_FORM_PRESSED\";\r\n\r\nexport const LAYERS_LIST_ARROW_DOWN_PRESSED = \"LAYERS_LIST_ARROW_DOWN_PRESSED\";\r\nexport const LAYERS_LIST_ARROW_UP_PRESSED = \"LAYERS_LIST_ARROW_UP_PRESSED\";\r\n\r\n// export const TOGGLE_WATCH_EXPAND_CLICKED = \"TOGGLE_WATCH_EXPAND_CLICKED\";\r\n\r\n// export const FILENAME_LIST_SELECTED = \"FILENAME_LIST_SELECTED\";\r\nexport const FILES_UPLOAD_COMPLETED = \"FILES_UPLOAD_COMPLETED\";\r\nexport const INITIALIZE_UPLOAD_STATE = \"INITIALIZE_UPLOAD_STATE\";\r\nexport const DATA_FROM_BUFFER_PASTED = \"DATA_FROM_BUFFER_PASTED\";\r\n\r\n/** AABB Distance Measurement Demo **/\r\nexport const AABB_DEMO_URI = \"AABB_DEMO_URI\";\r\nexport const AABB_DEMO_NEXT_DIST_STEP = \"AABB_DEMO_NEXT_DIST_STEP\";\r\nexport const AABB_TREE_NEXT_LEVEL = \"AABB_TREE_NEXT_LEVEL\";\r\n\r\n/** Collision demo **/\r\nexport const COLLISION_DEMO_URI = \"COLLISION_DEMO_URI\";\r\nexport const COLLISION_DEMO_BUTTON_PRESSED = \"COLLISION_DEMO_BUTTON_PRESSED\";\r\n\r\n/** Skeleton recognition demo **/\r\nexport const SKELETON_RECOGNITION_URI = \"SKELETON_RECOGNITION_URI\";\r\nexport const SKELETON_RECOGNITION_BUTTON_PRESSED=\"SKELETON_RECOGNITION_BUTTON_PRESSED\";\r\n\r\nexport const ASYNC_OPERATION_STARTED = \"ASYNC_OPERATION_STARTED\";\r\nexport const ASYNC_OPERATION_ENDED = \"ASYNC_OPERATION_ENDED\";\r\n\r\n/** Documents list **/\r\nexport const REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED = \"REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED\";\r\nexport const REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED = \"REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED\";\r\nexport const REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED = \"REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED\";\r\nexport const REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED = \"REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED\";\r\nexport const DELETE_DOCUMENT_FROM_DATABASE_SUCCEED = \"DELETE_DOCUMENT_FROM_DATABASE_SUCCEED\";\r\nexport const DOCUMENT_SELECTED_FROM_LIST = \"DOCUMENT_SELECTED_FROM_LIST\";\r\nexport const DOCUMENT_NAME_UPDATED = \"DOCUMENT_NAME_UPDATED\";\r\nexport const CLEAR_ALL_BUTTON_CLICKED = \"CLEAR_ALL_BUTTON_CLICKED\";\r\n\r\n/* Authentication */\r\nexport const AUTHENTICATION_STARTED = \"AUTHENTICATION_STARTED\";\r\nexport const AUTHENTICATION_SUCCEED = \"AUTHENTICATION_SUCCEED\";\r\nexport const AUTHENTICATION_FAILED = \"AUTHENTICATION_FAILED\";\r\nexport const AUTHENTICATION_LOGOUT = \"AUTHENTICATION_LOGOUT\";\r\nexport const AUTHENTICATION_SET_USERNAME = \"AUTENTICATION_SET_USERNAME\";\r\n\r\n","import * as actionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    username: null,\r\n    error: null,\r\n    loading: false\r\n};\r\n\r\nconst auth = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTHENTICATION_STARTED:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                loading: true\r\n            };\r\n        case actionTypes.AUTHENTICATION_SUCCEED:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                token: action.token,\r\n                userId: action.userId,\r\n                username: action.username,\r\n                loading: false\r\n            };\r\n        case actionTypes.AUTHENTICATION_FAILED:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                token: null,\r\n                userId: null,\r\n                username: null,\r\n                loading: false\r\n            };\r\n        case actionTypes.AUTHENTICATION_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userId: null,\r\n                username: null\r\n            };\r\n        case actionTypes.AUTHENTICATION_SET_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.username\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default auth;","import {Utils, Arc, vector} from \"@flatten-js/core\";\r\n\r\nexport function arcSE(center, start, end, counterClockwise) {\r\n    let startAngle = vector(center,start).slope;\r\n    let endAngle = vector(center, end).slope;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, start).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\nexport function arcStartSweep(center, start, sweep, counterClockwise) {\r\n    let startAngle = vector(center,start).slope;\r\n    let endAngle = startAngle + sweep;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, start).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\nexport function arcEndSweep(center, end, sweep, counterClockwise) {\r\n    let endAngle = vector(center,end).slope;\r\n    let startAngle = endAngle - sweep;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, end).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\n","\r\n/**\r\n * Created by Alex Bol on 12/02/2018.\r\n */\r\nimport {Segment, Arc, Polygon, Face} from \"@flatten-js/core\";\r\nimport {CW, CCW, INSIDE, OUTSIDE, ORIENTATION} from \"@flatten-js/core\";\r\nimport {vector} from \"@flatten-js/core\";\r\nimport Flatten from \"@flatten-js/core\";\r\nimport {arcSE, arcStartSweep, arcEndSweep} from \"./createArcs\";\r\n\r\nconst {unify, subtract, BOOLEAN_UNION} = Flatten.BooleanOperations;\r\nconst {addToIntPoints, getSortedArray, splitByIntersections} = Flatten.BooleanOperations;\r\nconst {removeNotRelevantChains, removeOldFaces, restoreFaces} = Flatten.BooleanOperations;\r\n\r\n/**\r\n * Offset polygon by given value\r\n * @param {Polygon} polygon - input polygon\r\n * @param {number} value - offset value, may be positive or negative\r\n * @returns {Polygon} offsetPolygon\r\n */\r\n\r\n/**\r\n *\r\n * @param polygon\r\n * @param value\r\n *\r\n */\r\nexport function offset(polygon, value) {\r\n    let w = value;\r\n\r\n    let edges = [...polygon.edges];\r\n    let offsetPolygon = polygon.clone();\r\n    let offsetEdge;\r\n\r\n    if (w !== 0) {\r\n\r\n        for (let edge of edges) {\r\n            if (edge.isSegment()) {\r\n                offsetEdge = offsetSegment(edge.shape, w);\r\n            }\r\n            else {\r\n                offsetEdge = offsetArc(edge.shape, w);\r\n            }\r\n\r\n            if (w > 0) {\r\n                offsetPolygon = unify(offsetPolygon, offsetEdge);\r\n            }\r\n            else {\r\n                offsetPolygon = subtract(offsetPolygon, offsetEdge);\r\n            }\r\n        }\r\n    }\r\n\r\n    return offsetPolygon;\r\n}\r\n\r\nexport function offsetArc(arc, value) {\r\n\r\n    let w = Math.abs(value);\r\n\r\n    // Define outline polygon\r\n    let polygon = new Polygon();\r\n    let arc_cap1,arc_cap2;\r\n\r\n    let arc_outer = arc.clone();\r\n    arc_outer.r = arc.r + w;\r\n\r\n    arc_cap1 = arcStartSweep(arc.end, arc_outer.end, Math.PI, arc.counterClockwise);\r\n    arc_cap2 = arcEndSweep(arc.start, arc_outer.start, Math.PI, arc.counterClockwise);\r\n\r\n    let arc_inner = undefined;\r\n    if (arc.r > w) {\r\n        arc_inner = new Arc(arc.pc, arc.r - w, arc.endAngle, arc.startAngle,\r\n            arc.counterClockwise === CW ? CCW : CW);\r\n    }\r\n    else {\r\n        // arc_inner = new Arc(arc.pc, w - arc.r, arc.startAngle, arc.endAngle, arc.counterClockwise);\r\n        arc_inner = new Segment(arc_cap1.end, arc_cap2.start);\r\n    }\r\n\r\n    polygon.addFace([arc_outer, arc_cap1, arc_inner, arc_cap2]);\r\n    [...polygon.faces][0].setArcLength();\r\n\r\n    // Create intersection points\r\n    let ips = Face.getSelfIntersections([...polygon.faces][0], polygon.edges, false);\r\n\r\n    // TODO: getSelfIntersections returns points with correspondent edges - avoid duplication\r\n    ips = ips.slice(0,ips.length/2);    // for now slice array to avoid duplication in points\r\n\r\n    let int_points = [];\r\n    let edge_cap1;\r\n    let edge_cap2;\r\n\r\n    edge_cap1 = [...polygon.edges][1];\r\n    edge_cap2 = [...polygon.edges][3];\r\n\r\n    for (let pt of ips) {\r\n        addToIntPoints(edge_cap1, pt, int_points);\r\n        addToIntPoints(edge_cap2, pt, int_points);\r\n    }\r\n\r\n    // Sort intersection points and insert them as new vertices\r\n    let int_points_sorted = getSortedArray(int_points);\r\n    splitByIntersections(polygon, int_points_sorted);\r\n\r\n\r\n    // Set BV flags\r\n    let bv = OUTSIDE;\r\n    for (let int_point of int_points_sorted) {\r\n        int_point.edge_before.bv = bv;\r\n        int_point.edge_after.bv = (bv === OUTSIDE ? INSIDE : OUTSIDE);\r\n        bv = int_point.edge_after.bv;   // invert flag on each iteration\r\n    }\r\n\r\n    // Remove inner \"chains\"\r\n    let op = BOOLEAN_UNION;\r\n    removeNotRelevantChains(polygon, op, int_points_sorted, true);\r\n\r\n    // return int_points_sorted;\r\n    // Swap links\r\n    let num = int_points.length;\r\n    if (num > 0) {\r\n        let edge_before;\r\n        let edge_after;\r\n        // 0 => 3\r\n        edge_before = int_points_sorted[0].edge_before;\r\n        edge_after = int_points_sorted[num-1].edge_after;\r\n        edge_before.next = edge_after;\r\n        edge_after.prev = edge_before;\r\n\r\n        // Fill in missed links in intersection points\r\n        int_points_sorted[0].edge_after = int_points_sorted[num-1].edge_after;\r\n        int_points_sorted[num-1].edge_before = int_points_sorted[0].edge_before;\r\n\r\n        if (num === 4) {\r\n            // 2 => 1\r\n            edge_before = int_points_sorted[2].edge_before;\r\n            edge_after = int_points_sorted[1].edge_after;\r\n            edge_before.next = edge_after;\r\n            edge_after.prev = edge_before;\r\n\r\n            // Fill in missed links in intersection points\r\n            int_points_sorted[2].edge_after = int_points_sorted[1].edge_after;\r\n            int_points_sorted[1].edge_before = int_points_sorted[2].edge_before;\r\n        }\r\n\r\n        // remove old faces\r\n        removeOldFaces(polygon, int_points);\r\n        // restore faces\r\n        restoreFaces(polygon, int_points, int_points);\r\n    }\r\n\r\n    let face0 = [...polygon.faces][0];\r\n    if (face0.orientation() === ORIENTATION.CCW) {\r\n        polygon.reverse();\r\n    }\r\n    return polygon;\r\n}\r\n\r\nexport function offsetSegment(seg, value) {\r\n    let w = Math.abs(value);\r\n\r\n    let polygon = new Polygon();\r\n    let v_seg = vector(seg.end.x-seg.start.x, seg.end.y-seg.start.y);\r\n    let v_seg_unit = v_seg.normalize();\r\n    let v_left = v_seg_unit.rotate90CCW().multiply(w);\r\n    let v_right = v_seg_unit.rotate90CW().multiply(w);\r\n    let seg_left = seg.translate(v_left);\r\n    let seg_right = seg.translate(v_right).reverse();\r\n    let cap1 = arcSE(seg.end, seg_left.end, seg_right.start, CW);\r\n    let cap2 = arcSE(seg.start, seg_right.end, seg_left.start, CW);\r\n\r\n    polygon.addFace([seg_left, cap1, seg_right, cap2]);\r\n    return polygon;\r\n}\r\n","import {Box} from '@flatten-js/core';\r\n\r\nexport class Job {\r\n    constructor() {\r\n        this.filename = \"\";\r\n        this.title = \"\";\r\n        this.profiles = [];   // array of FlattenJS Polygons\r\n        this.materials = [];  // array of FlattenJS Polygons\r\n        this.shapes = [];     // array of other FlattenJS shapes\r\n    }\r\n\r\n    get box() {\r\n        let b = new Box();\r\n        for (let shape of this.profiles) {\r\n            b.merge(shape.box);\r\n        }\r\n        for (let shape of this.materials) {\r\n            b.merge(shape.box);\r\n        }\r\n        for (let shape of this.shapes) {\r\n            b.merge(shape.box);\r\n        }\r\n        return b;\r\n    }\r\n}","import { Job } from '../models/job';\r\nimport {point, segment, arc, Polygon, Utils, vector} from '@flatten-js/core';\r\n\r\nfunction arcSE(center, start, end, counterClockwise) {\r\n    let startAngle = vector(center, start).slope;\r\n    let endAngle = vector(center, end).slope;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2 * Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, start).length;\r\n\r\n    return arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\nfunction parseComplexShape(row_lines, start, end) {\r\n    let loop = [];\r\n    let loop_start;\r\n    let ps;\r\n    let pe;\r\n    let pc;\r\n    let shape;\r\n    let poly = new Polygon();\r\n\r\n    for (let i = start + 1; i < end; i++) {\r\n        let terms = row_lines[i].split(\" \");\r\n\r\n        if (terms[0] === \"A\") {\r\n            ps = point(parseInt(terms[5]), parseInt(terms[6]));\r\n            pe = point(parseInt(terms[7]), parseInt(terms[8]));\r\n            pc = point(parseInt(terms[9]), parseInt(terms[10]));\r\n            let counterClockwise = terms[12].includes(\"1\") ? true : false;\r\n            shape = arcSE(pc, ps, pe, counterClockwise);\r\n        } else if (terms[0] === \"L\") {\r\n            ps = point(parseInt(terms[1]), parseInt(terms[2]));\r\n            pe = point(parseInt(terms[3]), parseInt(terms[4]));\r\n            shape = segment(ps, pe);\r\n        }\r\n\r\n        if (loop.length === 0) {\r\n            loop_start = ps;\r\n        }\r\n\r\n        loop.push(shape);\r\n\r\n        if (pe.equalTo(loop_start)) {\r\n            poly.addFace(loop);\r\n            loop = [];\r\n        }\r\n    }\r\n\r\n    return poly;\r\n}\r\n\r\nexport function parseToFlightaShapes(str) {\r\n    let start = null;\r\n    let end = null;\r\n    let shapes = [];\r\n    let row_lines = str.match(/[^\\r\\n]+/g);\r\n    for (let i = 0; i < row_lines.length; i++) {\r\n        let line = row_lines[i].split(\" \");\r\n\r\n        if (line[0] === \"S\") {\r\n            start = i;\r\n            continue;\r\n        }\r\n\r\n        if (line[0] === \"E\" && start !== null) {\r\n            end = i;\r\n            let poly = parseComplexShape(row_lines, start, end);\r\n            start = null;\r\n            end = null;\r\n            shapes.push(poly)\r\n        }\r\n    }\r\n    return shapes;\r\n}\r\n\r\nexport function parseFlighta(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n    job.shapes = parseToFlightaShapes(str);\r\n    return job;\r\n}\r\n","/**\r\n * Created by alexanderbol on 01/05/2017.\r\n */\r\n\r\nimport {Point, Segment, Arc, Circle, Box, Polygon, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\nimport {offsetSegment, offsetArc} from \"../models/polygonOffset\";\r\nimport {parseToFlightaShapes} from \"./parseFlighta\";\r\n\r\n/*\r\nlet debug_str = `\r\n+\t\t[0]\t{nrec=27 nalloc=27 h_ind_id=-1 ...} mat_cont_hdr_struc\tmat_cont_struc\r\n+\t\t[1]\t{pmin=59146400,5973200 pmax=59606001,6438000} mat_cont_lim_struc\tmat_cont_struc\r\n+\t\t[2]\t{nedge=23 nalloc=25 ntop=2 ...} mat_cont_poly_struc\tmat_cont_struc\r\n+\t\t[3]\t{pmin=59146400,5973200 pmax=59606001,6438000} mat_cont_lim_struc\tmat_cont_struc\r\n+\t\t[4]\t{ps=59192738,6363124 pe=59216000,6372800 pc=59216000,6340000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[5]\t{ps=59216000,6372800 pe=59267652,6372800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[6]\t{ps=59267652,6372800 pe=59267652,6307200 pc=59360000,6340000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[7]\t{ps=59267652,6307200 pe=59229586,6307200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[8]\t{ps=59229586,6307200 pe=59212000,6289614} mat_seg_struc\tmat_cont_struc\r\n+\t\t[9]\t{ps=59212000,6289614 pe=59212000,6056386} mat_seg_struc\tmat_cont_struc\r\n+\t\t[10]\t{ps=59212000,6056386 pe=59229586,6038800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[11]\t{ps=59229586,6038800 pe=59469614,6038800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[12]\t{ps=59469614,6038800 pe=59487200,6056386} mat_seg_struc\tmat_cont_struc\r\n+\t\t[13]\t{ps=59487200,6056386 pe=59487200,6100500} mat_seg_struc\tmat_cont_struc\r\n+\t\t[14]\t{ps=59487200,6100500 pe=59434000,6180000 pc=59520000,6180000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[15]\t{ps=59434000,6180000 pe=59552800,6100500 pc=59520000,6180000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[16]\t{ps=59552800,6100500 pe=59552800,6042800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[17]\t{ps=59552800,6042800 pe=59543124,6019538 pc=59520000,6042800 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[18]\t{ps=59543124,6019538 pe=59506462,5982876} mat_seg_struc\tmat_cont_struc\r\n+\t\t[19]\t{ps=59506462,5982876 pe=59483200,5973200 pc=59483200,6006000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[20]\t{ps=59483200,5973200 pe=59216000,5973200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[21]\t{ps=59216000,5973200 pe=59192738,5982876 pc=59216000,6006000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[22]\t{ps=59192738,5982876 pe=59156076,6019538} mat_seg_struc\tmat_cont_struc\r\n+\t\t[23]\t{ps=59156076,6019538 pe=59146400,6042800 pc=59179200,6042800 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[24]\t{ps=59146400,6042800 pe=59146400,6303200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[25]\t{ps=59146400,6303200 pe=59156076,6326462 pc=59179200,6303200 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[26]\t{ps=59156076,6326462 pe=59192738,6363124} mat_seg_struc\tmat_cont_struc\r\n`;\r\n*/\r\n\r\n/*\r\n+\t\tcircle\t{pc=40445880,-10500080 r=41327880}\tmat_circle_struc\r\n+\t\tcircle\t{pc=38215880,-7700040 r=92456}\tmat_circle_struc\r\n+\t\trect\t{pll=38215880,-7700040 w=92456 h=50000}\tmat_rect_struc\r\n+\t\tshape1\t{type=512 s={...} }\t_mat_shape_struc\r\n+\t\tline\t{ps=-18423,529080 pe=1047776,480195 r=60000 cap=0}\tmat_line_struc\r\n+\t\tarc\t{ps=1001217,249728 pe=752127,51853 pc=853697,179712 cw=??? r=60000 cap=0}\tmat_arc_struc\r\n */\r\n\r\nexport class Parser {\r\n    parseToWatchArray(str) {\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n        let watchArray = [];\r\n        for (let line of arrayOfLines) {\r\n            watchArray.push(line.substring(line.indexOf('{')));\r\n        }\r\n        return watchArray;\r\n    }\r\n\r\n    parseToPoint(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let x, y;\r\n        // try to parse format: {p=7496986,-4460045}\r\n        x = parseInt(parenth.split('=')[1].split(',')[0],10);\r\n        y = parseInt(parenth.split('=')[1].split(',')[1],10);\r\n        if (isNaN(x) || isNaN(y)) {\r\n            // try to parse format: {x=7169200 y=3521200 }\r\n            x = parseInt(parenth.trim().split(' ')[0].split('=')[1],10);\r\n            y = parseInt(parenth.trim().split(' ')[1].split('=')[1],10);\r\n        }\r\n        //let pointArr = parenth.split('=')[1].split(',');\r\n        //let point = new Point(parseInt(pointArr[0],10), parseInt(pointArr[1],10));\r\n        let point = new Point(x,y);\r\n        point.label = line.split(/\\s+/)[1];\r\n        return point;\r\n    }\r\n\r\n    parseToSegment(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        return new Segment(ps, pe);\r\n    }\r\n\r\n    parseToArc(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let pcArr = termArr[2].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n\r\n        let cwStr = termArr[3].split('=')[1];\r\n        let counterClockwise = cwStr === '0' ? true : false;\r\n\r\n        let startAngle = vector(pc,ps).slope;\r\n        let endAngle = vector(pc, pe).slope;\r\n\r\n        if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n            // endAngle += 2*Math.PI;\r\n            endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n        }\r\n        let r = vector(pc, ps).length;\r\n\r\n        return new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n    }\r\n\r\n    parseToCircle(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let pcArr = termArr[0].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n        let r = parseInt(termArr[1].split('=')[1],10);\r\n        // let circle = new Circle(pc, r);\r\n        // let polygon = new Polygon();\r\n        // polygon.addFace(circle);\r\n        return new Circle(pc, r);;\r\n    }\r\n\r\n    parseToRectangle(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let pllArr = termArr[0].split('=')[1].split(',');\r\n        let xmin = parseInt(pllArr[0],10);\r\n        let ymin = parseInt(pllArr[1],10);\r\n        let width = parseInt(termArr[1].split('=')[1],10);\r\n        let height = parseInt(termArr[2].split('=')[1],10);\r\n\r\n        let box = new Box(xmin, ymin, xmin + width, ymin + height);\r\n        let polygon = new Polygon();\r\n        polygon.addFace(box);\r\n        return polygon;\r\n        // return new Box(xmin, ymin, xmin + width, ymin + height);\r\n    }\r\n\r\n    parseToODBLine(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let w = parseInt(termArr[2].split('=')[1],10);\r\n\r\n        let segment = new Segment(ps, pe);\r\n        let polygon = w > 0 ? offsetSegment(segment, w) : new Polygon();\r\n\r\n        return polygon;\r\n    }\r\n\r\n    parseToODBArc(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let pcArr = termArr[2].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n\r\n        let cwStr = termArr[3].split('=')[1];\r\n        let counterClockwise = cwStr === '0' ? true : false;\r\n\r\n        let startAngle = vector(pc,ps).slope;\r\n        let endAngle = vector(pc, pe).slope;\r\n\r\n        if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n            // endAngle += 2*Math.PI;\r\n            endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n        }\r\n        let r = vector(pc, ps).length;\r\n\r\n        let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n        let w = parseInt(termArr[4].split('=')[1],10);\r\n\r\n        let polygon = w > 0 ? offsetArc(arc, w) : new Polygon();\r\n\r\n        return polygon;\r\n    }\r\n\r\n    parseToPolygon(str) {\r\n        let polygon = new Polygon();\r\n        // let mulitystr = debug_str;\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n\r\n        for (let i=0; i < arrayOfLines.length; i++) {\r\n            let line = arrayOfLines[i];\r\n            if (line.search('mat_cont_poly_struc') >= 0) {\r\n                let parenth = line.match(/\\{([^)]+)\\}/)[1];       // string inside {..}\r\n                let termArr = parenth.split(' ');                 // array of terms \"attr=value\"\r\n                let nedgesTerm = termArr[0];                      // \"nedge=nn\"\r\n                let nedgesStr = nedgesTerm.split('=')[1];\r\n                let nedges = parseInt(nedgesStr,10);\r\n\r\n                // Create new face from next #nedges of segments and arcs\r\n                let edges = [];\r\n                for (let j=i+2; j < i+2+nedges; j++) {\r\n                    line = arrayOfLines[j];\r\n                    // let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n                    // let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n                    if (line.search('mat_seg_struc') >= 0) {\r\n                        let segment = this.parseToSegment(line);\r\n                        edges.push(segment);\r\n                    }\r\n                    else if (line.search('mat_curve_struc') >= 0) {\r\n                        let arc = this.parseToArc(line);\r\n                        edges.push(arc);\r\n                    }\r\n                }\r\n                polygon.addFace(edges);\r\n            }\r\n        }\r\n        return polygon;\r\n    }\r\n\r\n    parseToPoints(str) {\r\n        let points = [];\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n        for (let line of arrayOfLines) {\r\n            if (line.search('point_struc') >= 0) {\r\n                let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n                let pointArr = parenth.split('=')[1].split(',');\r\n                let point = new Point(parseInt(pointArr[0],10), parseInt(pointArr[1],10));\r\n                point.label = line.split(/\\s+/)[1];\r\n                points.push(point);\r\n            }\r\n        }\r\n        return points;\r\n    }\r\n\r\n    parseToShapes(str) {\r\n        let shapes = [];\r\n        let shape;\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n\r\n        if (arrayOfLines[0].length === 1 && arrayOfLines[0] === \"N\") {\r\n            shapes = parseToFlightaShapes(str);\r\n            return shapes;\r\n        }\r\n\r\n        for (let line of arrayOfLines) {\r\n            if (line.search('point_struc') >= 0) {\r\n                shape = this.parseToPoint(line);\r\n            }\r\n            else if (line.search('_seg_struc') >= 0) {\r\n                shape = this.parseToSegment(line);\r\n            }\r\n            else if (line.search('_curve_struc') >= 0) {\r\n                shape = this.parseToArc(line);\r\n            }\r\n            else if (line.search('_circle_struc') >= 0) {\r\n                shape = this.parseToCircle(line);\r\n            }\r\n            else if (line.search('_rect_struc') >= 0) {\r\n                shape = this.parseToRectangle(line);\r\n            }\r\n            else if (line.search('_line_struc') >= 0) {\r\n                shape = this.parseToODBLine(line);\r\n            }\r\n            else if (line.search('_arc_struc') >= 0) {\r\n                shape = this.parseToODBArc(line);\r\n            }\r\n            shapes.push(shape);\r\n        }\r\n        return shapes;\r\n    }\r\n\r\n    parse(str) {\r\n        /* try polygon */\r\n        let polygon = this.parseToPolygon(str);\r\n        if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n            return [polygon];\r\n        }\r\n\r\n        /* try array of shapes excluding polygon or array of shapes in \"Flighta\" format */\r\n        let shapes = this.parseToShapes(str);\r\n        if (shapes.length > 0) {\r\n            return shapes;\r\n        }\r\n\r\n        /* try array of points */\r\n        let points = this.parseToPoints(str);\r\n        if (points.length > 0) {\r\n            return points;\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","import * as ActionTypes from \"../actionTypes\";\r\nimport {Parser} from \"../../dataParsers/parser\";\r\n\r\nconst unitsList = [\r\n    {\r\n        name: \"pixels\",\r\n        decimals: 0,\r\n        divisor: 1\r\n    },\r\n    {\r\n        name: \"inch\",\r\n        decimals: 7,\r\n        divisor: 10160000\r\n    },\r\n    {\r\n        name: \"mm\",\r\n        decimals: 6,\r\n        divisor: 400000\r\n    }];\r\n\r\nconst defaultAppState = {\r\n    title: \"Debug Viewer\",\r\n    version: process.env.REACT_APP_VERSION,\r\n    build: \"\",\r\n    units: \"pixels\",\r\n    decimals: 0,\r\n    divisor: 1,\r\n    // bg: \"#F1F1F1\",\r\n    parser: new Parser(),\r\n    widthOn: true,\r\n    displayVertices: false,\r\n    displayLabels: true,\r\n    measurePointsActive: false,\r\n    zoomFactor: undefined,\r\n    originX: undefined,\r\n    originY: undefined,\r\n    showAboutPopup: false,\r\n    importDataToNewLayer: true,       // if false, import data to affected layer\r\n    showSkeletonRecognitionButton: false,\r\n    applySkeletonRecognition: false,\r\n    stage: null,\r\n    showSpinner: false,\r\n    showLayerList: false,\r\n    showDownloadPopup: false,\r\n    showUploadPopup: false,\r\n};\r\n\r\nconst app = (state = defaultAppState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.NEW_STAGE_CREATED:\r\n            return Object.assign({}, state, {\r\n                stage: action.stage,\r\n                zoomFactor: action.stage.zoomFactor * action.stage.resolution,\r\n                originX: action.stage.origin.x,\r\n                originY: action.stage.origin.y,\r\n            });\r\n\r\n        case ActionTypes.STAGE_UNMOUNTED:\r\n            return Object.assign({}, state, {\r\n                stage: null,\r\n                zoomFactor: undefined,\r\n                originX: undefined,\r\n                originY: undefined\r\n            });\r\n\r\n        case ActionTypes.MOUSE_WHEEL_MOVE_ON_STAGE:\r\n        case ActionTypes.PAN_AND_ZOOM_TO_SHAPE:\r\n        case ActionTypes.PINCH_MOVED_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                zoomFactor: action.stage.zoomFactor * action.stage.resolution,\r\n                originX: action.stage.origin.x,\r\n                originY: action.stage.origin.y,\r\n            });\r\n        case ActionTypes.MOUSE_MOVED_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                originX: action.stage.origin.x,\r\n                originY: action.stage.origin.y\r\n            });\r\n        case ActionTypes.TOGGLE_UNITS_CLICKED:\r\n            let curUnitsId = unitsList.findIndex(units => state.units === units.name);\r\n            let newUnits = unitsList[(curUnitsId + 1) % 3];\r\n            return Object.assign({}, state, {\r\n                units: newUnits.name,\r\n                decimals: newUnits.decimals,\r\n                divisor: newUnits.divisor\r\n            });\r\n        case ActionTypes.TOGGLE_WIDTH_MODE_CLICKED:\r\n            return Object.assign({}, state, {\r\n                widthOn: !state.widthOn,\r\n                displayVertices: state.widthOn ? state.displayVertices : false\r\n            });\r\n        case ActionTypes.TOGGLE_DISPLAY_VERTICES_CLICKED:\r\n            if (state.displayVertices) {\r\n                return Object.assign({}, state, {\r\n                    displayVertices: false\r\n                });\r\n            }\r\n            else {\r\n                return Object.assign({}, state, {\r\n                    widthOn: false,\r\n                    displayVertices: true\r\n                });\r\n            }\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LABELS_CLICKED:\r\n            return Object.assign({}, state, {\r\n                displayLabels: !state.displayLabels\r\n            });\r\n\r\n        case ActionTypes.TOGGLE_ABOUT_POPUP_CLICKED:\r\n            return Object.assign({}, state, {\r\n                showAboutPopup: !state.showAboutPopup\r\n            });\r\n\r\n        // case ActionTypes.CLOSE_ABOUT_POPUP_BUTTON_PRESSED:\r\n        //     return Object.assign({}, state, {\r\n        //         showAboutPopup: false\r\n        //     });\r\n\r\n        case ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED:\r\n            return {\r\n                ...state,\r\n                measurePointsActive: false\r\n            };\r\n\r\n        case ActionTypes.MEASURE_POINTS_BUTTON_PRESSED:\r\n            return {\r\n                ...state,\r\n                measurePointsActive: true\r\n            };\r\n        case ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED:\r\n            return {\r\n                ...state,\r\n                measurePointsActive: false\r\n            };\r\n        case ActionTypes.SKELETON_RECOGNITION_URI:\r\n            return Object.assign({}, state, {\r\n                showSkeletonRecognitionButton: true\r\n            });\r\n        case ActionTypes.SKELETON_RECOGNITION_BUTTON_PRESSED:\r\n            return Object.assign({}, state, {\r\n                applySkeletonRecognition: true\r\n            });\r\n        case ActionTypes.ASYNC_OPERATION_STARTED:\r\n            return Object.assign({}, state, {\r\n                showSpinner: true\r\n            });\r\n        case ActionTypes.ASYNC_OPERATION_ENDED:\r\n            return Object.assign({}, state, {\r\n                showSpinner: false\r\n            });\r\n        case ActionTypes.AABB_TREE_NEXT_LEVEL:\r\n            return state;\r\n        case ActionTypes.TOGGLE_SHOW_LAYER_LIST_CLICKED:\r\n            return {\r\n                ...state,\r\n                showLayerList: !state.showLayerList\r\n            };\r\n        case ActionTypes.TOGGLE_DOWNLOAD_POPUP_CLICKED:\r\n            return {\r\n                ...state,\r\n                showDownloadPopup: !state.showDownloadPopup\r\n            };\r\n        case ActionTypes.TOGGLE_UPLOAD_POPUP_CLICKED:\r\n            return {\r\n                ...state,\r\n                showUploadPopup: !state.showUploadPopup\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default app;\r\n","\r\nlet defaultStyle = {\r\n    strokeStyle: 1,\r\n    stroke: \"#FF0303\",\r\n    fill: \"#FF0303\",\r\n    alpha: 1.0\r\n};\r\n\r\n/* Class Model represents data model that will be added to layer */\r\nclass Model {\r\n    constructor(geom = undefined, style = undefined, label = \"\") {\r\n        this.geom = geom;\r\n        this.style = style || defaultStyle;\r\n        this.label = label;\r\n    }\r\n\r\n    clone() {\r\n        let model = new Model(this.geom, this.style, this.label);\r\n        return Object.assign(model, this);\r\n    }\r\n\r\n    get box() {\r\n        return this.geom.box;\r\n    }\r\n/*\r\n    static transformPoint(pt, stage) {\r\n        return new Flatten.Point(stage.W2C_X(pt.x), stage.W2C_Y(pt.y));\r\n    }\r\n\r\n    static transformSegment(segment, stage) {\r\n        return new Flatten.Segment(\r\n            Model.transformPoint(segment.ps, stage),\r\n            Model.transformPoint(segment.pe, stage)\r\n        )\r\n    }\r\n\r\n    static transformArc(arc, stage) {\r\n        return new Flatten.Arc(\r\n            Model.transformPoint(arc.pc, stage),\r\n            stage.W2C_Scalar(arc.r),\r\n            arc.startAngle,\r\n            arc.endAngle,\r\n            arc.counterClockwise\r\n        )\r\n    }\r\n\r\n    static transformEdge(shape, stage) {\r\n        if (shape instanceof Flatten.Segment) {\r\n            return Model.transformSegment(shape, stage);\r\n        }\r\n        else if (shape instanceof Flatten.Arc) {\r\n            return Model.transformArc(shape, stage);\r\n        }\r\n    }\r\n\r\n    static transformFace(face, stage) {\r\n        // Get shapes of face as array\r\n        let shapes = [];\r\n        for (let edge of face) {\r\n            shapes.push(edge.shape);\r\n        }\r\n\r\n        // Transform array of edges\r\n        return shapes.map(shape => Model.transformEdge(shape, stage));\r\n    }\r\n\r\n    static transformPolygon(polygon, stage) {\r\n        let newPolygon = new Flatten.Polygon();\r\n        let shapes = [];\r\n        for (let face of polygon.faces) {\r\n            shapes = Model.transformFace(face, stage);\r\n            newPolygon.addFace(shapes);\r\n        }\r\n        return newPolygon;\r\n    }\r\n*/\r\n}\r\n\r\nexport default Model;","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport {Point, Box} from '@flatten-js/core';\r\n// import { Shape } from '../models/shape';\r\nimport Model from './model';\r\n\r\nclass Layer {\r\n    constructor(stage) {\r\n        // super();\r\n        // cannot define Layer as extension of PlanarSet due to bug in compiler ?\r\n        this.stage = stage;\r\n        this.shapes = [];         // new Flatten.PlanarSet();\r\n        this.name = \"\";\r\n        this.color = \"\";\r\n        this.title = \"\";\r\n        this.displayed = false;\r\n        this.edited = false;\r\n        this.affected = false;\r\n    }\r\n\r\n    clone() {\r\n        let layer = new Layer(this.stage);\r\n        return Object.assign(layer, this);\r\n    }\r\n\r\n    add(shape) {\r\n        if (shape instanceof Model) {\r\n            this.shapes.push(shape);       // add(shape)\r\n        }\r\n        else {\r\n            let geom = shape;\r\n            let newShape = new Model(geom, {}, shape.label) // , this.stage);\r\n            this.shapes.push(newShape);     // add(newShape);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    addShapesArray(shapes) {\r\n        for (let shape of shapes) {\r\n            this.add(shape);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get box() {\r\n        let box = new Box();\r\n        for (let shape of this.shapes) {\r\n            box = box.merge(shape.geom instanceof Box ? shape.clone() : shape.box);\r\n        }\r\n        return box;\r\n    }\r\n\r\n    get center() {\r\n        let box = this.box;\r\n        return new Point((box.xmin + box.xmax)/2, (box.ymin + box.ymax)/2);\r\n    }\r\n\r\n    toggleDisplayed(color) {\r\n        let displayed = !this.displayed;\r\n        return Object.assign(this.clone(),\r\n            {\r\n                displayed : displayed,\r\n                color: color\r\n            });\r\n    }\r\n\r\n    setAffected(affected) {\r\n        this.affected = affected;\r\n        return this;\r\n        // return Object.assign(this.clone(),\r\n        //     {\r\n        //         affected : affected\r\n        //     });\r\n    }\r\n\r\n    setEdited(edited) {\r\n        return Object.assign(this.clone(),\r\n            {\r\n                edited : edited\r\n            });\r\n    }\r\n\r\n    setNameAndTitle(name,title) {\r\n        return Object.assign(this.clone(),\r\n            {\r\n                name : name,\r\n                title: title,\r\n                edited: false\r\n            });\r\n    }\r\n\r\n    setAlpha() {\r\n        for(let shape of this.shapes) {\r\n            shape.alpha = this.displayed ? 1 : 0;\r\n        }\r\n        return this.shapes;\r\n    }\r\n\r\n    // toggleExpanded(shapeToggle) {\r\n    //     for(let shape of this.shapes) {\r\n    //         if (shape === shapeToggle) {\r\n    //             shape.expanded = !shape.expanded;\r\n    //         }\r\n    //     }\r\n    //     return this;\r\n    // }\r\n\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            title: this.title,\r\n            shapes: JSON.stringify(this.shapes, null, ' ')\r\n        };\r\n    }\r\n}\r\n\r\nexport default Layer;\r\n","/**\r\n * Created by alexanderbol on 20/04/2017.\r\n */\r\n\r\nimport Layer from '../models/layer';\r\n\r\nconst colors = [\r\n    \"#FF0303\",\r\n    \"#4AA403\",\r\n    \"#540080\",\r\n    \"#FFFF40\",\r\n    \"#FF0080\",\r\n    \"#AED424\",\r\n    \"#545400\",\r\n    \"#FFA980\",\r\n    \"#A95480\",\r\n    \"#A9A9FF\",\r\n    \"#00FF00\",\r\n    \"#FFEE76\",\r\n    \"#A40576\",\r\n    \"#4385C8\",\r\n    \"#1CC826\",\r\n    \"#BDBD00\",\r\n    \"#48316E\",\r\n    \"#14616E\",\r\n    \"#8040BD\",\r\n    \"#DC7676\",\r\n    \"#924845\",\r\n    \"#A90000\",\r\n    \"#FFA900\"\r\n];\r\n\r\nclass Layers {\r\n\r\n    static newLayer(stage, layers) {\r\n        let layer = new Layer(stage);\r\n        layer.name = Layers.getNewName(layers);\r\n        if (layers.length === 0) { // first layer\r\n            // layer.color = Layers.getNextColor(layers);\r\n            layer.displayed = false;\r\n            layer.affected = false;\r\n        }\r\n        return layer;\r\n    }\r\n\r\n    static get defaultName() {\r\n        return \"layer\";\r\n    }\r\n\r\n    static getNewName(layers) {\r\n        let name = Layers.defaultName;\r\n        let inc = 1;\r\n        let comparator = (layer) => layer.name === name;\r\n        while (layers.find(comparator) ) {\r\n            name = Layers.defaultName + inc;\r\n            inc++;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    static getAffected(layers) {\r\n        return layers.find((lay) => lay.affected);\r\n    }\r\n\r\n    static setAffected(layers, layer) {\r\n        let currentAffectedLayer = Layers.getAffected(layers);\r\n        if (currentAffectedLayer) {\r\n            currentAffectedLayer.affected = false;\r\n        }\r\n        layer.affected = true;\r\n    }\r\n\r\n    static getNextColor(layers) {\r\n        let color = \"\";\r\n        for (let col of colors) {\r\n            if (!layers.find((layer) =>\r\n                layer.displayed && layer.color === col)) {\r\n                color = col;\r\n                break;\r\n            }\r\n        }\r\n        return color;\r\n    }\r\n\r\n    static delete(layers, layer) {\r\n        let index = layers.findIndex((l) => l === layer);\r\n        let newLayers = layers.filter(l => l !== layer);\r\n        if (index > 0) {\r\n            newLayers[index-1].affected = true;\r\n            if (newLayers[index-1].color === \"\") {\r\n                newLayers[index - 1].color = Layers.getNextColor(newLayers);\r\n            }\r\n            newLayers[index-1].displayed = true;\r\n        }\r\n        return newLayers;\r\n        // another option to delete from array:\r\n        // const newLayers = [...layers]\r\n        // return newLayers.splice( index, 1);\r\n    }\r\n\r\n    static sort(layers) {\r\n        let newLayers = layers.slice();\r\n        newLayers.sort( function(l1, l2) {\r\n            let name1 = l1.name.toUpperCase();\r\n            let name2 = l2.name.toUpperCase();\r\n            if (name1 < name2) {\r\n                return -1;\r\n            }\r\n            if (name1 > name2) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n        return newLayers;\r\n    }\r\n\r\n    static toJSON(layers) {\r\n        return layers.map( layer => layer.toJSON() );\r\n    }\r\n}\r\n\r\nexport default Layers;","import * as ActionTypes from \"../actionTypes\";\r\nimport Layers from \"../../models/layers\";\r\n\r\nconst layers = (state = [], action) => {\r\n    let affectedLayer = state.find(layer => layer.affected);\r\n    let affectedLayerId = state.findIndex(layer => layer.affected);\r\n    let newLayer;\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LAYER_BUTTON_PRESSED:\r\n            newLayer = Layers.newLayer(action.stage, state);\r\n            return [...state, newLayer];\r\n\r\n        case ActionTypes.ADD_NEW_LAYER:\r\n            return [...state, action.layer];\r\n\r\n        case ActionTypes.DELETE_LAYER_BUTTON_PRESSED:\r\n            if (affectedLayer) {\r\n                return Layers.delete(state, affectedLayer);\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        case ActionTypes.CLEAR_ALL_BUTTON_CLICKED:\r\n            return [];\r\n\r\n        case ActionTypes.SORT_LAYERS_BUTTON_PRESSED:\r\n            return Layers.sort(state);\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED:\r\n            let color = \"\";\r\n            if (!action.layer.displayed) {\r\n                color = Layers.getNextColor(state);\r\n                if (color === \"\") return;  // no free colors\r\n            }\r\n            return state.map((layer) => {\r\n                if (layer !== action.layer) {\r\n                    // if action.layer will be undisplayed,\r\n                    // it cannot become affected, then\r\n                    // keep affected on this layer\r\n                    if (action.layer.displayed) {\r\n                        return layer;\r\n                    }\r\n                    else {\r\n                        return layer.setAffected(false);\r\n                    }\r\n                }\r\n                else {\r\n                    let newLayer = layer.toggleDisplayed(color);\r\n                    newLayer.affected = newLayer.displayed;\r\n                    return newLayer;\r\n                }\r\n                // return layer.toggleDisplayed(color);\r\n            });\r\n\r\n        case ActionTypes.TOGGLE_AFFECTED_LAYER_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer !== action.layer) {\r\n                    return layer.setAffected(false);\r\n                }\r\n                else {\r\n                    return layer.setAffected(!layer.affected);\r\n                }\r\n            });\r\n\r\n        // case ActionTypes.NEW_SHAPE_PASTED:\r\n        //     return state.map((layer) => {\r\n        //         if (layer.affected) {\r\n        //             return layer.addShapesArray(action.shapesArray);\r\n        //         }\r\n        //         else {\r\n        //             return layer;\r\n        //         }\r\n        //     });\r\n\r\n        case ActionTypes.OPEN_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer !== affectedLayer) {\r\n                    return layer;\r\n                }\r\n                else {\r\n                    return layer.setEdited(true);\r\n                }\r\n            });\r\n\r\n        case ActionTypes.SUBMIT_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer.edited) {\r\n                    return layer.setNameAndTitle(action.newLayer.name, action.newLayer.title);\r\n                }\r\n                else {\r\n                    return layer;\r\n                }\r\n            });\r\n\r\n        case ActionTypes.ESCAPE_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer.edited) {             // !== action.layer) {\r\n                    return layer.setEdited(false);\r\n                }\r\n                else {\r\n                    return layer;\r\n                }\r\n            });\r\n\r\n        case ActionTypes.LAYERS_LIST_ARROW_DOWN_PRESSED:\r\n            if (affectedLayerId === state.length - 1) {\r\n                return state;\r\n            }\r\n            else {\r\n\r\n                let nextLayer = state[affectedLayerId + 1];\r\n\r\n                return state.map(layer => {\r\n                    if (layer === affectedLayer) {\r\n                        let newCurLayer = layer.toggleDisplayed(\"\");\r\n                        newCurLayer.affected = false;\r\n                        return newCurLayer;\r\n                    }\r\n                    else if (layer === nextLayer) {\r\n                        let color = affectedLayer.color;\r\n                        let newNextLayer = layer.toggleDisplayed(color);\r\n                        newNextLayer.affected = true;\r\n                        return newNextLayer;\r\n                    }\r\n                    else {\r\n                        return layer;\r\n                    }\r\n                });\r\n            }\r\n\r\n        case ActionTypes.LAYERS_LIST_ARROW_UP_PRESSED:\r\n            if (affectedLayerId === 0) {\r\n                return state;\r\n            }\r\n            else {\r\n                let nextLayer = state[affectedLayerId - 1];\r\n\r\n                return state.map(layer => {\r\n                    if (layer === affectedLayer) {\r\n                        let newCurLayer = layer.toggleDisplayed(\"\");\r\n                        newCurLayer.affected = false;\r\n                        return newCurLayer;\r\n                    }\r\n                    else if (layer === nextLayer) {\r\n                        let newNextLayer = layer.toggleDisplayed(affectedLayer.color);\r\n                        newNextLayer.displayed = true;\r\n                        newNextLayer.affected = true;\r\n                        return newNextLayer;\r\n                    }\r\n                    else {\r\n                        return layer;\r\n                    }\r\n                });\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layers;","import * as ActionTypes from \"../actionTypes\";\r\n\r\nconst defaultMouseState = {\r\n    x: 0,\r\n    y: 0,\r\n    startX: undefined,\r\n    startY: undefined,\r\n    touchPoints: undefined\r\n};\r\n\r\nconst mouse = (state = defaultMouseState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.MOUSE_MOVED_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                x: action.x,\r\n                y: action.y\r\n            });\r\n        case ActionTypes.MOUSE_DOWN_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                startX: action.x,\r\n                startY: action.y\r\n            });\r\n        case ActionTypes.MOUSE_UP_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                startX: undefined,\r\n                startY: undefined\r\n            });\r\n\r\n        case ActionTypes.PINCH_DOWN_ON_STAGE: {\r\n            return {\r\n                ...state,\r\n                touchPoints: [\r\n                    {x: action.x1, y: action.y1},\r\n                    {x: action.x2, y: action.y2}\r\n                ]\r\n            }\r\n        }\r\n        // case ActionTypes.PINCH_MOVED_ON_STAGE: {\r\n        //     return {\r\n        //         ...state,\r\n        //         touchPoints: [\r\n        //             {x: action.x1, y: action.y1},\r\n        //             {x: action.x2, y: action.y2}\r\n        //         ]\r\n        //     }\r\n        // }\r\n        case ActionTypes.PINCH_UP_ON_STAGE: {\r\n            return {\r\n                ...state,\r\n                touchPoints: undefined\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mouse;","import * as ActionTypes from \"../actionTypes\";\r\nimport Flatten from \"@flatten-js/core\";\r\n\r\nconst defaultMeasureShapesTool = {\r\n    measureShapesActive: false,\r\n    measureShapesFirstClick: true,\r\n    hoveredShape: null,\r\n    firstMeasuredShape: null,\r\n    secondMeasuredShape: null,\r\n    firstMeasuredLayer: null,\r\n    secondMeasuredLayer: null,\r\n    distance: undefined,\r\n    shortestSegment: null\r\n};\r\n\r\nconst is_mobile = window.mobilecheck();\r\n\r\nconst measureShapesTool = (state = defaultMeasureShapesTool, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED:\r\n            return Object.assign({}, defaultMeasureShapesTool, {\r\n                measureShapesActive: true\r\n            });\r\n        case ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED:\r\n            return Object.assign({}, defaultMeasureShapesTool);\r\n\r\n        case ActionTypes.MEASURE_POINTS_BUTTON_PRESSED:\r\n            return Object.assign({}, defaultMeasureShapesTool);\r\n\r\n        case ActionTypes.MOUSE_ROLL_OVER_SHAPE:\r\n            return Object.assign({}, state, {\r\n                hoveredShape: state.measureShapesActive ? action.shape : null\r\n            });\r\n        case ActionTypes.MOUSE_ROLL_OUT_SHAPE:\r\n            return Object.assign({}, state, {\r\n                hoveredShape: null\r\n            });\r\n        case ActionTypes.MOUSE_CLICKED_ON_SHAPE:\r\n            if (!state.measureShapesActive) {\r\n                return state;\r\n            }\r\n            // measureShapesActive\r\n\r\n            if (state.measureShapesFirstClick) {\r\n                return Object.assign({}, state, {\r\n                    firstMeasuredShape: action.shape,\r\n                    firstMeasuredLayer: action.layer,\r\n                    secondMeasuredShape: null,\r\n                    secondMeasuredLayer: null,\r\n                    measureShapesFirstClick: false,\r\n                    distance: undefined,\r\n                    shortestSegment: null\r\n                })\r\n            }\r\n            else {    // second click\r\n                if (action.shape === state.firstMeasuredShape) {\r\n                    return state;  // second click on the same shape\r\n                }\r\n\r\n                let shape1 = state.firstMeasuredShape.geom;\r\n                let shape2 = action.shape.geom;\r\n                let distance, shortestSegment;\r\n                // if (shape1 instanceof Flatten.Polygon && shape2 instanceof Flatten.Polygon) {\r\n                //     [distance, shortestSegment] = Flatten.Distance.polygon2polygon(shape1, shape2);\r\n                // }\r\n                // else {\r\n                [distance, shortestSegment] = Flatten.Distance.distance(shape1, shape2);\r\n                // }\r\n\r\n\r\n                return Object.assign({}, state, {\r\n                    secondMeasuredShape: action.shape,\r\n                    secondMeasuredLayer: action.layer,\r\n                    measureShapesFirstClick: true,\r\n                    distance: distance,\r\n                    shortestSegment: shortestSegment\r\n                });\r\n            }\r\n        case ActionTypes.MOUSE_DOWN_ON_STAGE:\r\n            if (state.hoveredShape || is_mobile) {\r\n                return state\r\n            }\r\n            else {\r\n                return Object.assign({}, state, {\r\n                    measureShapesFirstClick: true,\r\n                    firstMeasuredShape: null,\r\n                    firstMeasuredLayer: null,\r\n                    secondMeasuredShape: null,\r\n                    secondMeasuredLayer: null,\r\n                    distance: undefined,\r\n                    shortestSegment: null\r\n                });\r\n            }\r\n\r\n        case ActionTypes.DELETE_LAYER_BUTTON_PRESSED:\r\n            if (action.layer === state.firstMeasuredLayer ||\r\n                action.layer === state.secondMeasuredLayer) {\r\n                return Object.assign({}, defaultMeasureShapesTool);\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED:\r\n            if (action.layer.displayed &&\r\n                (action.layer === state.firstMeasuredLayer ||\r\n                    action.layer === state.secondMeasuredLayer)) {\r\n                return Object.assign({}, defaultMeasureShapesTool);\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default measureShapesTool;","import * as ActionTypes from \"../actionTypes\";\r\n\r\nconst documentDefaultState = {\r\n    id: undefined,\r\n    name: \"\",\r\n    owner: \"Alex Bol\",\r\n    lastUpdated: undefined\r\n};\r\n\r\nconst cloudStorageDefaultState = {\r\n    document: documentDefaultState,\r\n    documentsList: {}\r\n};\r\n\r\nfunction isUpToDate(stateDocumentsList, actionDocumentsList) {\r\n    if (actionDocumentsList === null || actionDocumentsList === undefined)\r\n        return true;\r\n\r\n    if (Object.keys(stateDocumentsList).length !== Object.keys(actionDocumentsList).length)\r\n        return false;\r\n    for (let key in stateDocumentsList) {\r\n        if (!(actionDocumentsList.hasOwnProperty(key) && (stateDocumentsList[key].lastUpdated !== actionDocumentsList[key].lastUpdated))) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst cloudStorage = (state = cloudStorageDefaultState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    id: action.id,\r\n                    name: action.name,\r\n                    owner: action.owner,\r\n                    lastUpdated: action.lastUpdated\r\n                }\r\n            };\r\n\r\n        case ActionTypes.REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    id: action.id,\r\n                    name: action.name,\r\n                    owner: action.owner,\r\n                    lastUpdated: action.lastUpdated\r\n                }\r\n            };\r\n\r\n        case ActionTypes.REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    ...state.document,\r\n                    lastUpdated: action.lastUpdated\r\n                }\r\n            };\r\n\r\n        case ActionTypes.DOCUMENT_NAME_UPDATED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    ...state.document,\r\n                    name: action.name\r\n                }\r\n            };\r\n\r\n        case ActionTypes.DELETE_DOCUMENT_FROM_DATABASE_SUCCEED:\r\n            let { [action.id]: document, ...newList } = state.documentsList;\r\n            return {\r\n                ...state,\r\n                document: state.document.id === action.id ? documentDefaultState : state.document,\r\n                documentsList: newList\r\n            };\r\n\r\n        case ActionTypes.DOCUMENT_SELECTED_FROM_LIST:\r\n            return {\r\n                ...state,\r\n                document: action.document\r\n            };\r\n\r\n        case ActionTypes.CLEAR_ALL_BUTTON_CLICKED:\r\n            return {\r\n                ...state,\r\n                document: documentDefaultState\r\n            };\r\n\r\n        case ActionTypes.REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED:\r\n            return isUpToDate(state.documentsList, action.documentsList) ?\r\n                state :\r\n            {\r\n                ...state,\r\n                documentsList: action.documentsList\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cloudStorage","import * as ActionTypes from \"../actionTypes\";\r\n\r\nconst defaultState = {\r\n    uploadStarted:  false,\r\n    uploadCompleted: false,\r\n    uploadedFiles: []\r\n};\r\n\r\nconst upload = (state=defaultState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.INITIALIZE_UPLOAD_STATE:\r\n            return defaultState;\r\n\r\n        case ActionTypes.FILES_UPLOAD_COMPLETED:\r\n            return {\r\n                ...state,\r\n                uploadCompleted: true,\r\n                uploadedFiles: action.uploadedFiles\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default upload","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\n\r\nimport {combineReducers} from 'redux';\r\n\r\nimport auth from \"./reducers/auth\";\r\nimport app from \"./reducers/app\";\r\nimport layers from \"./reducers/layers\";\r\nimport mouse from \"./reducers/mouse\";\r\nimport measureShapesTool from \"./reducers/measureShapesTool\";\r\nimport cloudStorage from \"./reducers/cloudStorage\";\r\nimport upload from \"./reducers/upload\";\r\n\r\nconst reducer = combineReducers({\r\n    auth,\r\n    app,\r\n    layers,\r\n    upload,\r\n    cloudStorage,\r\n    measureShapesTool,\r\n    mouse\r\n});\r\n\r\nexport default reducer;\r\n","import * as ActionTypes from '../store/actionTypes';\r\n\r\nconst log = ({ getState, dispatch }) => next => action => {\r\n\r\n    if(action.type !== ActionTypes.MOUSE_MOVED_ON_STAGE) {\r\n        console.log('ACTION: ' + action.type, action);\r\n    }\r\n\r\n    next(action);\r\n};\r\n\r\nexport default log;","// import { Job } from '../models/job';\r\nimport Flatten from '@flatten-js/core';\r\n\r\n// import Model from '../models/model';\r\nimport {Job} from \"../models/job\";\r\n\r\nFlatten.Image = class Image {\r\n    constructor() {\r\n        this.uri = \"\";\r\n        /**\r\n         * Center in world coordinates\r\n         * @type {Flatten.Point}\r\n         */\r\n        this.center = new Flatten.Point();\r\n        /**\r\n         * Width in world units (inch/mm)\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * Height in world units (inch/mm)\r\n         */\r\n        this.height = 0;\r\n    }\r\n    get box() {\r\n        return new Flatten.Box(\r\n            this.center.x - this.width/2,\r\n            this.center.y - this.height/2,\r\n            this.center.x + this.height/2,\r\n            this.center.y + this.height/2\r\n        );\r\n\r\n    }\r\n};\r\n\r\n// export function parseJSON(shapes) {\r\n//     let models = [];\r\n//     let geom;\r\n//     let model;\r\n//     for (let shape of JSON.parse(shapes)) {\r\n//         if (shape.geom instanceof Array) {      // TODO: add \"name\" to polygon stringified\r\n//             geom = new Flatten.Polygon();\r\n//             for (let faceArray of shape.geom) {\r\n//                 geom.addFace(faceArray);\r\n//             }\r\n//         }\r\n//         else if (shape.geom.uri) {\r\n//             geom = new Flatten.Image();\r\n//             geom.uri = shape.geom.uri;\r\n//             geom.center = shape.geom.center;\r\n//             geom.width = shape.geom.width;\r\n//             geom.height = shape.geom.height;\r\n//         }\r\n//         else {\r\n//             geom = Flatten[shape.geom.name](shape.geom);\r\n//         }\r\n//         model = new Model(geom, shape.style, shape.label);\r\n//         models.push(model);\r\n//     }\r\n//\r\n//     return models;\r\n// }\r\n\r\nfunction parseJSONShape(jsonShape) {\r\n    if (jsonShape.name === \"segment\") {\r\n        return new Flatten.Segment(jsonShape);\r\n    }\r\n\r\n    if (jsonShape.name === \"arc\") {\r\n        return new Flatten.Arc(jsonShape);\r\n    }\r\n\r\n    if (jsonShape.name === \"point\") {\r\n        return new Flatten.Point(jsonShape);\r\n    }\r\n}\r\n\r\nexport function parseJSON(filename=\"\", str) {\r\n    let job = new Job();\r\n\r\n    job.filename = filename;\r\n\r\n    let jsonArray;\r\n\r\n    try {\r\n        jsonArray = JSON.parse(str);\r\n    } catch (e) {\r\n        throw new Error(\"Illegal JSON string\")\r\n    }\r\n\r\n    if (jsonArray instanceof Array) {\r\n        try {\r\n            let polygon = new Flatten.Polygon();\r\n            for (let faceArray of jsonArray) {\r\n                polygon.addFace(faceArray);\r\n            }\r\n            job.shapes.push(polygon);\r\n        }\r\n        catch (e) {\r\n            for (let jsonShape of jsonArray) {\r\n                job.shapes.push( parseJSONShape(jsonShape) );\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        job.shapes.push( parseJSONShape(jsonArray) );\r\n    }\r\n\r\n    return job;\r\n}\r\n","import * as ActionTypes from \"../store/actionTypes\";\r\nimport Layers from \"../models/layers\";\r\nimport {parseJSON} from \"../dataParsers/parseJSON\";\r\n\r\nconst pasteData = ({ dispatch, getState }) => next => action => {\r\n\r\n    if (action.type !== ActionTypes.DATA_FROM_BUFFER_PASTED) {\r\n        return next(action);\r\n    }\r\n\r\n    let state = getState();\r\n    let stage = state.app.stage;\r\n    let layers = state.layers;\r\n    let parser = state.app.parser;\r\n\r\n    let layer = undefined;\r\n    if (state.app.importDataToNewLayer) {   // import data to new layer\r\n        layer = Layers.newLayer(stage, layers);\r\n        layers.push(layer);\r\n    }\r\n    else {                                  // import data to affected layer\r\n        layer = layers.find((lay) => lay.affected);\r\n        if (!layer) {                       // if no layer affected, add new\r\n            layer = Layers.newLayer(stage, layers);\r\n            layers.push(layer);\r\n        }\r\n    }\r\n\r\n    // Paste data from ClipBoard\r\n    for (let item of action.data.items) {\r\n        item.getAsString((string) => {\r\n            let shapesArray;\r\n\r\n            try {\r\n                let job = parseJSON(\"\",string);\r\n                shapesArray = job.shapes\r\n            } catch (e) {\r\n                console.log(e.message)\r\n                shapesArray = parser.parse(string);\r\n            }\r\n\r\n            // TODO: add something like poly.valid()\r\n\r\n            if (shapesArray.length > 0) {\r\n                for (let shape of shapesArray) {\r\n                    layer.add(shape);\r\n                }\r\n            }\r\n\r\n            if (layer.shapes.length > 0) {\r\n                dispatch({\r\n                    type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                    shape: layer,\r\n                    stage: stage\r\n                });\r\n                dispatch({\r\n                    type: ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED,\r\n                    layer: layer\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n        break;\r\n    }\r\n\r\n};\r\n\r\nexport default pasteData;\r\n","import * as ActionTypes from '../store/actionTypes';\r\n\r\nconst stageController = ({getState, dispatch}) => next => action => {\r\n\r\n    const mouse = getState().mouse;\r\n    let stage = action.stage;\r\n\r\n\r\n    if (stage) {\r\n        switch (action.type) {\r\n            case ActionTypes.STAGE_RESIZED:\r\n                stage.resize();\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_DOWN_ON_STAGE:\r\n                stage.panByMouseStart();\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_MOVED_ON_STAGE:\r\n                if (action.dx !== undefined && action.dy !== undefined) {\r\n                    stage.panByMouseMove(action.dx, action.dy);\r\n                }\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_UP_ON_STAGE:\r\n                stage.panByMouseStop();\r\n                break;\r\n\r\n            case ActionTypes.PAN_AND_ZOOM_TO_SHAPE:\r\n                let center = action.shape.center;\r\n                let box = action.shape.box;\r\n                if (isNaN(center.x) || isNaN(center.y)) return;\r\n                stage.panToCoordinate(center.x, center.y);\r\n                stage.zoomToLimits(box.xmax - box.xmin, box.ymax - box.ymin);\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_WHEEL_MOVE_ON_STAGE:\r\n                let bIn = action.delta > 0;\r\n                // stage.zoomByMouse(action.x, action.y, bIn, 1 + Math.abs(action.delta)/100.);\r\n                stage.zoomByMouse(action.x, action.y, bIn, 1.2);\r\n                break;\r\n\r\n            case ActionTypes.CLEAR_ALL:\r\n                stage.removeAllChildren();\r\n                stage.removeAllListeners();\r\n                break;\r\n\r\n            case ActionTypes.PINCH_DOWN_ON_STAGE:\r\n                stage.zoomByPinchStart(action.x1, action.y1);\r\n                break;\r\n\r\n            case ActionTypes.PINCH_MOVED_ON_STAGE:\r\n                if (mouse.touchPoints) {\r\n                    let dx = mouse.touchPoints[0].x - mouse.touchPoints[1].x;\r\n                    let dy = mouse.touchPoints[0].y - mouse.touchPoints[1].y;\r\n                    let distStart = Math.sqrt(dx*dx + dy*dy);\r\n\r\n                    dx = action.x2 - action.x1;\r\n                    dy = action.y2 - action.y1;\r\n                    let distCurrent = Math.sqrt(dx*dx + dy*dy);\r\n                    let ratio = distCurrent / distStart;\r\n                    stage.zoomByPinchMove(action.x1, action.y1, ratio);\r\n                }\r\n                break;\r\n\r\n            case ActionTypes.PINCH_UP_ON_STAGE:\r\n                stage.zoomByPinchStop();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n\r\nexport default stageController;","import * as ActionTypes from '../store/actionTypes';\r\nimport Layers from \"../models/layers\";\r\nimport {point, arc, segment} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\nlet Algorithmia = window.Algorithmia;\r\n\r\n// function zoomHome(shape, stage) {\r\n//     let box = shape.box;\r\n//     let x = (box.xmin + box.xmax)/2;\r\n//     let y = (box.ymin + box.ymax)/2;\r\n//     stage.panToCoordinate(x, y);\r\n//     stage.zoomToLimits(box.xmax - box.xmin, box.ymax - box.ymin);\r\n// }\r\n\r\nconst skeleton_recognition = ({dispatch, getState}) => next => action => {\r\n\r\n    if (action.type === ActionTypes.SKELETON_RECOGNITION_BUTTON_PRESSED) {\r\n\r\n        let state = getState();\r\n        let stage = state.app.stage;\r\n\r\n        let layers = state.layers;\r\n        let currentLayer = Layers.getAffected(layers);\r\n        let shapes = currentLayer.shapes;\r\n        let input = shapes.map(shape =>\r\n            [shape.geom.x / 400., shape.geom.y / 400., shape.geom.nx, shape.geom.ny]\r\n        );\r\n\r\n        let client = Algorithmia.client(\"simby4RUwqQmtMDaHAPj5wsQwlD1\");\r\n        let algorithm = \"alexbol99/SeketonRecognition\";\r\n\r\n        client.algo(algorithm)\r\n            .pipe(input)\r\n            .then(function (output) {\r\n                if (output.error) return console.error(\"error: \" + output.error);\r\n\r\n                let newLayer = Layers.newLayer(stage, layers);\r\n                newLayer.name = \"recognized\";\r\n                newLayer.title = \"recognized\";\r\n                // newLayer.displayed = true;\r\n\r\n                for (let row of output.result) {\r\n                    let shape;\r\n                    if (row[0] instanceof Array && row[0].length === 2) {\r\n                        let pc = point(row[0][0] * 400, row[0][1] * 400);\r\n                        let r = row[1] * 400;\r\n                        /********center radius startAng endAng **********/\r\n                        shape = arc(pc, r, row[2], row[3], Flatten.CCW)\r\n                    }\r\n                    else {\r\n                        shape = segment(\r\n                            point(row[0] * 400, row[1] * 400),\r\n                            point(row[2] * 400, row[3] * 400))\r\n                    }\r\n                    if (row[4]) {\r\n                        shape.label = row[4]\r\n                    }\r\n                    newLayer.add(shape)\r\n                }\r\n                layers.push(newLayer);\r\n\r\n                dispatch({\r\n                    type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                    stage: stage,\r\n                    shape: currentLayer\r\n                })\r\n            });\r\n    }\r\n\r\n    return next(action);\r\n};\r\n\r\n\r\nexport default skeleton_recognition;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://debug-viewer.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const resizeStage = () => {\r\n    return {\r\n        type: ActionTypes.STAGE_RESIZED\r\n    }\r\n};\r\n\r\nexport const destroyStage = () => {\r\n    return {\r\n        type: ActionTypes.STAGE_UNMOUNTED\r\n    }\r\n};\r\n\r\nexport const toggleUnits = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_UNITS_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleWidthMode = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_WIDTH_MODE_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleDisplayVertices = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_VERTICES_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleDisplayLabels = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_LABELS_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleAboutPopup = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_ABOUT_POPUP_CLICKED\r\n    }\r\n};\r\n\r\n// export const closeAboutPopup = () => {\r\n//     return {\r\n//         type: ActionTypes.CLOSE_ABOUT_POPUP_BUTTON_PRESSED\r\n//     }\r\n// };\r\n\r\nexport const toggleMeasureBetweenPoints = () => {\r\n    return {\r\n        type: ActionTypes.MEASURE_POINTS_BUTTON_PRESSED\r\n    }\r\n};\r\n\r\nexport const toggleMeasureBetweenShapes = () => {\r\n    return {\r\n        type: ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED\r\n    }\r\n};\r\n\r\nexport const applySkeletonRecognition = () => {\r\n    return {\r\n        type: ActionTypes.SKELETON_RECOGNITION_BUTTON_PRESSED\r\n    }\r\n};\r\n\r\n// export const handleFileSelect = (files, stage, layers) => {\r\n//     return {\r\n//         type: ActionTypes.FILENAME_LIST_SELECTED,\r\n//         files,\r\n//         stage,\r\n//         layers\r\n//     }\r\n// };\r\n\r\nexport const setHomeView = (stage, shape) => {\r\n    return {\r\n        type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n        stage,\r\n        shape\r\n    }\r\n};\r\n\r\nexport const togglePanByDrag = () => {\r\n    return {\r\n        type: ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED\r\n    }\r\n};\r\n\r\nexport const handleMouseRollOverShape = (shape) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_ROLL_OVER_SHAPE,\r\n        shape\r\n    }\r\n};\r\n\r\nexport const handleMouseRollOutShape = () => {\r\n    return {\r\n        type: ActionTypes.MOUSE_ROLL_OUT_SHAPE\r\n    }\r\n};\r\n\r\nexport const handleClickOnShape = (shape, layer) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_CLICKED_ON_SHAPE,\r\n        shape,\r\n        layer\r\n    }\r\n};\r\n\r\nexport const asyncOperationStarted = () => {\r\n    return {\r\n        type: ActionTypes.ASYNC_OPERATION_STARTED\r\n    }\r\n};\r\n\r\nexport const asyncOperationEnded = () => {\r\n    return {\r\n        type: ActionTypes.ASYNC_OPERATION_ENDED\r\n    }\r\n};\r\n\r\nexport const openDocumentOnCloud = () => {\r\n    return {\r\n        type: ActionTypes.MANAGE_CLOUD_STORAGE_BUTTON_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleLayerList = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_SHOW_LAYER_LIST_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleDownloadPopup = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DOWNLOAD_POPUP_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleUploadPopup = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_UPLOAD_POPUP_CLICKED\r\n    }\r\n};\r\n\r\nexport const pasteDataFromBuffer = (clipboardData) => {\r\n    return {\r\n        type: ActionTypes.DATA_FROM_BUFFER_PASTED,\r\n        data: clipboardData\r\n    }\r\n};\r\n\r\n\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const addEmptyLayer = (stage) => {\r\n    return {\r\n        type: ActionTypes.ADD_LAYER_BUTTON_PRESSED,\r\n        stage: stage\r\n    }\r\n};\r\n\r\nexport const addNewLayer = (layer) => {\r\n    return {\r\n        type: ActionTypes.ADD_NEW_LAYER,\r\n        layer\r\n    }\r\n};\r\n\r\nexport const deleteAffectedLayer = () => {\r\n    return {\r\n        type: ActionTypes.DELETE_LAYER_BUTTON_PRESSED\r\n    };\r\n};\r\n\r\nexport const sortLayers = () => {\r\n    return {\r\n        type: ActionTypes.SORT_LAYERS_BUTTON_PRESSED\r\n    };\r\n};\r\n\r\nexport const toggleDisplayLayer = (layer) => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED,\r\n        layer\r\n    }\r\n};\r\n\r\nexport const toggleAffectedLayer = (event, layer) => {\r\n    event.stopPropagation();\r\n    return {\r\n        type: ActionTypes.TOGGLE_AFFECTED_LAYER_PRESSED,\r\n        layer: layer\r\n    };\r\n};\r\n\r\nexport const updateLayer = (newLayer) => {\r\n    return {\r\n        type: ActionTypes.SUBMIT_LAYER_EDIT_FORM_PRESSED,\r\n        newLayer: newLayer\r\n    };\r\n};\r\n\r\nexport const closeEditLayerForm = () => {\r\n    return {\r\n        type: ActionTypes.ESCAPE_LAYER_EDIT_FORM_PRESSED\r\n    };\r\n};\r\n\r\nexport const openAffectedLayerEditForm = () => {\r\n    return {\r\n        type: ActionTypes.OPEN_LAYER_EDIT_FORM_PRESSED,\r\n    }\r\n};\r\n\r\nexport const setAffectedNextLayer = () => {\r\n    return {\r\n        type: ActionTypes.LAYERS_LIST_ARROW_DOWN_PRESSED\r\n    }\r\n};\r\n\r\nexport const setAffectedPrevLayer = () => {\r\n    return {\r\n        type: ActionTypes.LAYERS_LIST_ARROW_UP_PRESSED\r\n    }\r\n};\r\n\r\nexport const deleteAllLayers = () => {\r\n    return {\r\n        type: ActionTypes.CLEAR_ALL_BUTTON_CLICKED,\r\n    }\r\n}\r\n\r\n\r\n\r\n","import * as ActionTypes from \"../actionTypes\";\r\nimport axios from \"../../axios-database\";\r\nimport * as appActions from \"../actions/appActions\";\r\nimport * as layerActions from '../../store/actions/layersActions';\r\nimport Layer from \"../../models/layer\";\r\nimport {parseJSON} from \"../../dataParsers/parseJSON\";\r\nimport Layers from \"../../models/layers\";\r\n\r\nconst defaultName = \"document\";\r\n\r\nexport const getNewName = (documents) => {\r\n    let name = defaultName;\r\n    let inc = 1;\r\n    let comparator = (document) => document.name === name;\r\n    while (Object.values(documents).find(comparator)) {\r\n        name = defaultName + inc;\r\n        inc++;\r\n    }\r\n    return name;\r\n};\r\n\r\nexport const registerDocumentAddedToDatabase = (id, lastUpdated) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED,\r\n        id: id,\r\n        lastUpdated: lastUpdated\r\n    }\r\n};\r\n\r\nexport const updateDocumentTimeStamp = (lastUpdated) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED,\r\n        lastUpdated: lastUpdated\r\n    }\r\n};\r\n\r\nexport const updateDocumentName = (name) => {\r\n    return {\r\n        type: ActionTypes.DOCUMENT_NAME_UPDATED,\r\n        name\r\n    }\r\n};\r\n\r\nexport const clearCurrentDocument = () => {\r\n    return {\r\n        type: ActionTypes.CLEAR_ALL_BUTTON_CLICKED,\r\n    }\r\n};\r\n\r\nexport const updateCurrentDocument = (document) => {\r\n    return {\r\n        type: ActionTypes.DOCUMENT_SELECTED_FROM_LIST,\r\n        document\r\n    }\r\n};\r\n\r\nexport const requestFetchDocumentFromDatabaseSucceed = (id, name, owner, lastUpdated) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED,\r\n        id,\r\n        name,\r\n        owner,\r\n        lastUpdated\r\n    }\r\n};\r\n\r\nexport const deleteDocumentFromDatabaseSucceed = (id) => {\r\n    return {\r\n        type: ActionTypes.DELETE_DOCUMENT_FROM_DATABASE_SUCCEED,\r\n        id\r\n    }\r\n};\r\n\r\nexport const requestFetchDocumentsFromDatabaseSucceed = (documentsList) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED,\r\n        documentsList\r\n    }\r\n};\r\n\r\nexport const fetchDocumentsFromDatabase = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        const url = '/documents.json' + queryParams;\r\n        axios.get(url)\r\n            .then(response => {\r\n                dispatch(requestFetchDocumentsFromDatabaseSucceed(response.data));\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const deleteDocumentFromDatabase = (id) => {\r\n    return dispatch => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n        const url = '/documents/' + id + '.json';\r\n        axios.delete(url)\r\n            .then (response => {\r\n                // query geom by \"id\"\r\n                const queryParams = '?orderBy=\"id\"&equalTo=\"' + id + '\"';\r\n                const url = '/geom.json' + queryParams;\r\n                return axios.get(url)\r\n            })\r\n            .then (response => {\r\n                const geomId = Object.keys(response.data)[0];\r\n                return axios.delete(`/geom/${geomId}.json`)\r\n            })\r\n            .then(response => {\r\n                dispatch(deleteDocumentFromDatabaseSucceed(id));\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const fetchDocumentFromDatabase = (stage, id) => {\r\n    return dispatch => {\r\n        dispatch(layerActions.deleteAllLayers());\r\n        dispatch(appActions.asyncOperationStarted());\r\n        let name = \"\";\r\n        let lastUpdated = undefined;\r\n        let owner = \"Alex Bol\";\r\n        let firstLayer = undefined;\r\n\r\n        const docUrl = '/documents/' + id + '.json';\r\n        const queryParams = '?orderBy=\"id\"&equalTo=\"' + id + '\"';\r\n        const geomUrl = '/geom.json' + queryParams;\r\n        Promise.all([axios.get(docUrl),axios.get(geomUrl)])\r\n            .then( responses => {\r\n                name = responses[0].data.name;\r\n                lastUpdated = responses[0].data.lastUpdated;\r\n\r\n                for (let layerData of Object.values(responses[1].data)[0].layers) {\r\n                    let layer = new Layer();\r\n                    layer.shapes = parseJSON(layerData.shapes);\r\n                    layer.name = layerData.name;\r\n\r\n                    if (!firstLayer) firstLayer = layer;\r\n                    dispatch(layerActions.addNewLayer(layer));\r\n                    dispatch(layerActions.toggleDisplayLayer(layer));\r\n                }\r\n                dispatch(requestFetchDocumentFromDatabaseSucceed(id, name, owner, lastUpdated));\r\n                dispatch(appActions.setHomeView(stage, firstLayer));\r\n                // dispatch(layerActions.toggleDisplayLayer(firstLayer));\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const addDocumentToDatabase = (payload, layers, history) => {\r\n    return dispatch => {\r\n        let id = undefined;\r\n        dispatch(appActions.asyncOperationStarted());\r\n        axios.post('/documents.json', payload)\r\n            .then(response => {\r\n                id = response.data.name;\r\n                let layersJSON = Layers.toJSON(layers);\r\n                let geomPayload = {\r\n                    id: id,\r\n                    layers: layersJSON\r\n                };\r\n                return axios.post('/geom.json', geomPayload)\r\n            })\r\n            .then(response => {\r\n                dispatch(registerDocumentAddedToDatabase(id, Date.now()));\r\n                dispatch(appActions.asyncOperationEnded());\r\n\r\n                // update url\r\n                history.push('/documents/' + id);\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const updateDocumentInDatabase = (id, payload, layers) => {\r\n    return dispatch => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n        // update documents header\r\n        axios.put(`/documents/${id}.json`, payload)\r\n            .then(response => {\r\n                dispatch(updateDocumentTimeStamp(Date.now()));\r\n                // dispatch(appActions.asyncOperationEnded());\r\n\r\n                // query geom by \"id\"\r\n                const queryParams = '?orderBy=\"id\"&equalTo=\"' + id + '\"';\r\n                const url = '/geom.json' + queryParams;\r\n                return axios.get(url)\r\n            })\r\n            .then( response => {\r\n                let layersJSON = Layers.toJSON(layers);\r\n                let geomPayload = {\r\n                    id: id,\r\n                    layers: layersJSON\r\n                };\r\n                let geomId = Object.keys(response.data)[0];  // response.data.name;\r\n                return axios.put(`/geom/${geomId}.json`, geomPayload)\r\n            })\r\n            .then( reponse => {\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\n\r\n\r\n","import FontAwesome from \"react-fontawesome\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst button = (props) => {\r\n    let iconStyle;\r\n    switch (props.type) {\r\n        case \"trigger\":\r\n            iconStyle = classes.IconTrigger;\r\n            break;\r\n        case \"mode\":\r\n            iconStyle = props.active ? classes.IconModeActive : classes.IconModeNotActive;\r\n            break;\r\n        default:\r\n            iconStyle = classes.IconTrigger;\r\n            break;\r\n    }\r\n    // eslint-disable-next-line\r\n    let buttonStyle = props.mobileOnly ? classes[\"Button\",\"DrawerButton\"] : classes[\"Button\"];\r\n    return (\r\n        <button title={props.title} onClick={props.onClick} className={buttonStyle}>\r\n            <FontAwesome\r\n                name={props.iconName}\r\n                size='2x'\r\n                className={iconStyle}\r\n            />\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default button;","import FontAwesome from \"react-fontawesome\";\r\nimport classes from \"./ButtonSeparator.module.css\";\r\n\r\nconst buttonSeparator = () => {\r\n    return (\r\n        <div className={classes.ButtonSeparator}>\r\n            <FontAwesome\r\n                name='ellipsis-v'\r\n                size='2x'\r\n                className={classes.IconSeparator}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default buttonSeparator;","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Separator from '../../../components/UI/ButtonSeparator/ButtonSeparator';\r\n\r\nimport classes from './ToolbarComponent.module.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\nclass ToolbarComponent extends Component {\r\n    // openJobButtonClicked = () => this.refs.browseFiles.click();\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes[\"App-toolbar\"]}>\r\n                {/*<h4>Toolbar</h4>*/}\r\n                <Button type=\"trigger\" title=\"Open files\" iconName='folder-open'\r\n                        onClick={this.props.onShowUploadPopupPressed}\r\n                />\r\n\r\n                {/*<input style={{fontSize: 16, marginTop: 5, marginBottom: 5, display: \"none\"}}*/}\r\n                       {/*type=\"file\" id=\"browseFiles\" ref=\"browseFiles\" name=\"files[]\" multiple*/}\r\n                       {/*onChange={this.props.onFileSelected}*/}\r\n                {/*/>*/}\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"trigger\" title=\"Show/hide layers\" iconName='layer-group'\r\n                        onClick={this.props.onLayerListButtonClicked} />\r\n\r\n                {/*<Button type=\"trigger\" title=\"Save document on cloud\" iconName='save'*/}\r\n                        {/*onClick={this.props.onSaveDocumentButtonClicked}*/}\r\n                {/*/>*/}\r\n\r\n                <Button type=\"trigger\" title=\"Sort layers\" iconName='sort-alpha-down'\r\n                            onClick={this.props.onSortLayersButtonClicked}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Download layers\" iconName='file-download'\r\n                        onClick={this.props.onShowDownloadPopupPressed}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Delete all layers\" iconName='broom'\r\n                            onClick={this.props.onClearAllButtonClicked}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"trigger\" title=\"Zoom and pan to home view\" iconName='home'\r\n                        onClick={this.props.onHomeButtonPressed}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"mode\" title=\"Pan by drag\" iconName='arrows-alt'\r\n                        active={!this.props.measurePointsActive}\r\n                        onClick={this.props.onPanByDragPressed}\r\n                />\r\n\r\n                <Button type=\"mode\" title=\"Measure distance between points\" iconName='drafting-compass'\r\n                        active={this.props.measurePointsActive}\r\n                        onClick={this.props.onMeasurePointsButtonPressed}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"trigger\" title=\"Measure distance between selected shapes\" iconName='ruler'\r\n                        onClick={this.props.onMeasureBetweenShapesButtonPressed}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Display solid or wire\" iconName='fill-drip'\r\n                        onClick={this.props.onToggleWidthModePressed}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Display vertices on/off\" iconName='draw-polygon'\r\n                        onClick={this.props.onToggleVerticesPressed}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Display labels on/off\" iconName='tag'\r\n                        onClick={this.props.onToggleLabelsPressed}\r\n                />\r\n\r\n                {this.props.showSkeletonRecognitionButton ? (\r\n                    <Button type=\"trigger\" title=\"Skeleton Recognition Demo\" iconName='tree'\r\n                            onClick={this.props.onSkeletonRecognitionButtonPressed}\r\n                    />\r\n                ) : null}\r\n\r\n                <Separator/>\r\n\r\n                <button className={classes[\"App-toolbar-units\"]}\r\n                        onClick={this.props.onUnitClicked}\r\n                >\r\n                    {this.props.units}\r\n                </button>\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"trigger\" title=\"About\" iconName='info'\r\n                        onClick={this.props.onShowAboutPopupPressed}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolbarComponent;\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\nimport {Box} from '@flatten-js/core';\r\nimport { Stage as CreatejsStage, Touch } from \"@createjs/easeljs\";\r\n\r\nclass Stage extends CreatejsStage {\r\n    constructor(canvas) {\r\n        super(canvas);\r\n\r\n        Touch.enable(this);\r\n        this.mouseMoveOutside = false;   // true;\r\n        // this.enableDOMEvents(false);\r\n        this.enableMouseOver(20);\r\n\r\n        if (this.canvas.clientWidth > 0 && this.canvas.clientHeight > 0) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n            // this.updateViewport(this.canvas.width, this.canvas.height);\r\n        }\r\n        this.origin = {x: this.canvas.width / 2, y: this.canvas.height / 2};\r\n        this.resolution = 0.00001;          // MM 2 Pixels when zoomFactor = 1;\r\n        this.zoomFactor = 1.0;\r\n\r\n        this.oldOrigin = {x: undefined, y: undefined};   // used by pan\r\n        // used by zoom by pinch\r\n        this.oldZoomFactor = undefined;\r\n        this.pinchAnchorX = undefined;\r\n        this.pinchAnchorY = undefined;\r\n        this.pinchStarted = false;\r\n    }\r\n\r\n    get box() {\r\n        let minX = this.C2W_X(0);\r\n        let minY = this.C2W_Y(this.canvas.height);\r\n        let maxX = this.C2W_X(this.canvas.width);\r\n        let maxY = this.C2W_Y(0);\r\n\r\n        return ( new Box(minX, minY, maxX, maxY) );\r\n    }\r\n\r\n    clone() {\r\n        let stage = new Stage(this.canvas);\r\n        return Object.assign(stage, this);\r\n    }\r\n\r\n    add(shape) {\r\n        this.addChild(shape);\r\n        return this;\r\n    }\r\n\r\n    scalingFactor() {\r\n        return this.resolution * this.zoomFactor;\r\n    }\r\n\r\n    C2W_Scalar(scalar) {\r\n        return (scalar / this.scalingFactor());\r\n    }\r\n\r\n    W2C_Scalar(scalar) {\r\n        return (this.scalingFactor() * scalar);\r\n    }\r\n\r\n    C2W_X(canvasX) {\r\n        return ((canvasX - this.origin.x) / this.scalingFactor());\r\n    }\r\n\r\n    C2W_Y(canvasY) {\r\n        return ((this.origin.y - canvasY) / this.scalingFactor());\r\n    }\r\n\r\n    W2C_X(worldX) {\r\n        return (this.scalingFactor() * worldX + this.origin.x);\r\n    }\r\n\r\n    W2C_Y(worldY) {\r\n        return (this.origin.y - this.scalingFactor() * worldY);\r\n    }\r\n\r\n    W2C(point) {\r\n        return {x: this.W2C_X(point.x), y: this.W2C_Y(point.y)}\r\n    }\r\n\r\n    panTo(newOrigin) {\r\n        this.origin = {x: newOrigin.x, y: newOrigin.y}\r\n    }\r\n\r\n    panBy(deltaX, deltaY) {\r\n        this.origin = {\r\n            x: this.origin.x + deltaX,\r\n            y: this.origin.y + deltaY\r\n        }\r\n    }\r\n\r\n    // zoom by 10% each time\r\n    zoomIn(ratio) {\r\n        let curRatio = ratio || 1.1;\r\n        this.zoomFactor = Math.min(10000000, curRatio * this.zoomFactor);\r\n    }\r\n\r\n    zoomOut(ratio) {\r\n        let curRatio = ratio || 1.1;\r\n        this.zoomFactor = Math.max(0.001, this.zoomFactor / curRatio);\r\n    }\r\n\r\n    // ZoomIn/Out + \"Focus follows mouse\"\r\n    zoom(focusX, focusY, bIn, ratio) {\r\n        let worldX = this.C2W_X(focusX);    // world coordinate of mouse focus before zoom\r\n        let worldY = this.C2W_Y(focusY);\r\n\r\n        bIn ? this.zoomIn(ratio) : this.zoomOut(ratio);\r\n\r\n        let newFocusX = this.W2C_X(worldX); // canvas coordinate after zoom\r\n        let newFocusY = this.W2C_Y(worldY);\r\n\r\n        this.panBy(focusX - newFocusX, focusY - newFocusY);\r\n\r\n        return [newFocusX, newFocusY];\r\n    }\r\n\r\n    zoomByMouse(focusX, focusY, bIn, ratio) {\r\n        this.zoom(focusX, focusY, bIn, ratio);\r\n    }\r\n\r\n    zoomToLimits(width, height) {\r\n        // prevent zero division in case of single point box\r\n        if (width === 0) width = 400000;\r\n        if (height === 0) height = 400000;\r\n        let resolution = Math.min(this.canvas.width / (1.1*width), this.canvas.height / (1.1*height));\r\n        let zoomFactor = resolution / this.resolution;\r\n        let ratio = zoomFactor / this.zoomFactor;\r\n        let bIn = true; //ratio > 1;\r\n\r\n        let focusX = this.canvas.width/2;\r\n        let focusY = this.canvas.height/2;\r\n        this.zoom(focusX, focusY, bIn, ratio);\r\n    }\r\n\r\n    resize() {\r\n        // this.origin.x = this.canvas.width / 2;\r\n        // this.origin.y = this.canvas.height / 2;\r\n        if (this.canvas.clientWidth > 0 && this.canvas.clientHeight > 0) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n        }\r\n    }\r\n\r\n    // drawSomething() {\r\n    //     let shape = new Shape();\r\n    //     shape.graphics.beginFill('red').drawRect(0, 0, 20, 20);\r\n    //     this.addChild(shape);\r\n    //     this.update();\r\n    // }\r\n\r\n    panByMouseStart() {\r\n        this.oldOrigin.x = this.origin.x;\r\n        this.oldOrigin.y = this.origin.y;\r\n        this.zoomByPinchStop();\r\n    }\r\n\r\n    panByMouseMove(dx, dy) {\r\n        if (this.pinchStarted) return;\r\n        if (dx !== undefined && dy !== undefined &&\r\n            this.oldOrigin.x !== undefined && this.oldOrigin.y !== undefined) {\r\n            this.origin = {\r\n                    x: this.oldOrigin.x + dx,\r\n                    y: this.oldOrigin.y + dy\r\n                };\r\n        }\r\n    }\r\n\r\n    panByMouseStop() {\r\n        this.oldOrigin.x = undefined;\r\n        this.oldOrigin.y = undefined;\r\n    }\r\n\r\n    panToCoordinate(x, y) {\r\n        let canvasX = this.W2C_X(x);\r\n        let canvasY = this.W2C_Y(y);\r\n\r\n        let dx = this.canvas.width / 2 - canvasX;\r\n        let dy = this.canvas.height / 2 - canvasY;\r\n        this.panBy(dx, dy);\r\n    }\r\n\r\n    zoomByPinchStart(canvasX, canvasY) {\r\n        this.oldZoomFactor = this.zoomFactor;\r\n        this.pinchAnchorX = this.C2W_X(canvasX);\r\n        this.pinchAnchorY = this.C2W_Y(canvasY);\r\n        this.pinchStarted = true;\r\n        this.panByMouseStop();\r\n    }\r\n\r\n    zoomByPinchMove(canvasX, canvasY, ratio) {\r\n        this.zoomFactor = ratio * this.oldZoomFactor;\r\n        this.origin = {\r\n            x: canvasX - this.scalingFactor() * this.pinchAnchorX,\r\n            y: canvasY + this.scalingFactor() * this.pinchAnchorY\r\n        }\r\n    }\r\n\r\n    zoomByPinchStop() {\r\n        this.oldZoomFactor = undefined;\r\n        this.pinchAnchorX = undefined;\r\n        this.pinchAnchorY = undefined;\r\n        this.pinchStarted = false;\r\n    }\r\n\r\n    clear() {\r\n        this.canvas.getContext('2d').clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n}\r\n\r\nexport default Stage;\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const registerStage = (stage) => {\r\n    return {\r\n        type: ActionTypes.NEW_STAGE_CREATED,\r\n        stage: stage\r\n    }\r\n};\r\n\r\nexport const handleMouseDown = (stage, x, y) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_DOWN_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y\r\n    }\r\n};\r\n\r\nexport const handleMouseUp = (stage, x, y) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_UP_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y\r\n    }\r\n};\r\n\r\nexport const handleMouseMove = (stage, x, y, dx, dy) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_MOVED_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y,\r\n        dx: dx,\r\n        dy: dy\r\n    }\r\n};\r\n\r\nexport const handleMouseWheelMove = (stage, x, y, delta) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_WHEEL_MOVE_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y,\r\n        delta: delta\r\n    }\r\n};\r\n\r\nexport const handlePinchDown = (stage, touchPoints) => {\r\n    return {\r\n        type: ActionTypes.PINCH_DOWN_ON_STAGE,\r\n        stage: stage,\r\n        x1: touchPoints[0].x,\r\n        y1: touchPoints[0].y,\r\n        x2: touchPoints[1].x,\r\n        y2: touchPoints[1].y\r\n    }\r\n};\r\n\r\nexport const handlePinchMove = (stage, touchPoints) => {\r\n    return {\r\n        type: ActionTypes.PINCH_MOVED_ON_STAGE,\r\n        stage: stage,\r\n        x1: touchPoints[0].x,\r\n        y1: touchPoints[0].y,\r\n        x2: touchPoints[1].x,\r\n        y2: touchPoints[1].y\r\n    }\r\n};\r\n\r\nexport const handlePinchUp = (stage) => {\r\n    return {\r\n        type: ActionTypes.PINCH_UP_ON_STAGE,\r\n        stage\r\n    }\r\n};\r\n\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\n\r\nimport {Component, createRef} from 'react';\r\nimport styles from \"./CanvasComponent.module.css\";\r\nimport Stage from '../../../models/stage';\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from '../../../store/actions/stageActions';\r\n\r\nclass CanvasComponent extends Component {\r\n    canvasElement = createRef();\r\n\r\n    handleMouseMove = (event) => {\r\n        this.props.stage.canvas.focus();\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n            this.props.handleMouseMove(\r\n                this.props.stage,\r\n                event.stageX,\r\n                event.stageY,\r\n                this.props.mouse.startX ? event.stageX - this.props.mouse.startX : undefined,\r\n                this.props.mouse.startY ? event.stageY - this.props.mouse.startY : undefined\r\n            );\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            let touchPoints = [\r\n                {\r\n                    x: event.nativeEvent.touches[0].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[0].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n                {\r\n                    x: event.nativeEvent.touches[1].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[1].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n            ];\r\n            this.props.handlePinchMove(this.props.stage, touchPoints);\r\n        }\r\n\r\n        // if (this.props.stage.pinchStarted) {\r\n        //     this.props.handleSecondTouchMove(this.props.stage, event.stageX, event.stageY);\r\n        // }\r\n        // else {\r\n        //     this.props.handleMouseMove(\r\n        //         this.props.stage,\r\n        //         event.stageX,\r\n        //         event.stageY,\r\n        //         this.props.mouse.startX ? event.stageX - this.props.mouse.startX : undefined,\r\n        //         this.props.mouse.startY ? event.stageY - this.props.mouse.startY : undefined\r\n        //     );\r\n        // }\r\n    };\r\n\r\n    handleMouseDown = (event) => {\r\n        // if (event.pointerID === -1 || event.pointerID === 0) {\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n            this.props.handleMouseDown(this.props.stage, event.stageX, event.stageY);\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            let touchPoints = [\r\n                {\r\n                    x: event.nativeEvent.touches[0].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[0].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n                {\r\n                    x: event.nativeEvent.touches[1].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[1].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n            ];\r\n            this.props.handlePinchDown(this.props.stage, touchPoints);\r\n        }\r\n    };\r\n\r\n    handleMouseUp = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n            this.props.handleMouseUp(this.props.stage);\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            this.props.handlePinchUp(this.props.stage);\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = (event) => {   // nothing works except click\r\n        this.props.stage.canvas.blur();\r\n        document.body.focus();\r\n    };\r\n\r\n    handleMouseWheel = (event) => {\r\n        /*event.preventDefault();*/\r\n\r\n        let delta = event.detail || event.wheelDelta;\r\n        if (delta !== 0) {\r\n            this.props.handleMouseWheelMove(this.props.stage, event.offsetX, event.offsetY, delta);\r\n        }\r\n    };\r\n\r\n    handleMouseWheelFox = (event) => {\r\n        /*event.preventDefault();*/\r\n        if (event.detail !== 0) {\r\n            this.props.handleMouseWheelMove(this.props.stage, event.layerX, event.layerY, -event.detail);\r\n        }\r\n    };\r\n\r\n    // handlePaste = (event) => {\r\n    //     let a = event;\r\n    // }\r\n\r\n    componentDidMount() {\r\n        let stage = new Stage(this.canvasElement.current);\r\n\r\n        stage.on(\"stagemousedown\", this.handleMouseDown);\r\n        stage.on(\"stagemousemove\", this.handleMouseMove);\r\n        stage.on(\"stagemouseup\", this.handleMouseUp);\r\n        stage.on(\"mouseleave\", this.handleMouseLeave);\r\n        stage.canvas.addEventListener(\"mousewheel\", this.handleMouseWheel, {passive: true});\r\n        stage.canvas.addEventListener(\"DOMMouseScroll\", this.handleMouseWheelFox, {passive: true});\r\n        // stage.canvas.addEventListener(\"paste\", this.handlePaste);\r\n\r\n        this.props.registerStage(stage);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <canvas\r\n                tabIndex=\"1\"\r\n                ref={this.canvasElement}\r\n                id=\"mainCanvas\"\r\n                className={styles[\"App-canvas\"]}\r\n                width=\"100\"\r\n                height=\"100\"\r\n            >\r\n            </canvas>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        stage: state.app.stage,\r\n        mouse: state.mouse\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        registerStage: (stage) => dispatch(actions.registerStage(stage)),\r\n        handleMouseDown: (stage, x, y) => dispatch(actions.handleMouseDown(stage, x, y)),\r\n        handleMouseUp: (stage, x, y) => dispatch(actions.handleMouseUp(stage, x, y)),\r\n        handleMouseMove: (stage, x, y, dx, dy) => dispatch(actions.handleMouseMove(stage, x, y, dx, dy)),\r\n        handleMouseWheelMove: (stage, x, y, delta) => dispatch(actions.handleMouseWheelMove(stage, x, y, delta)),\r\n        handlePinchDown: (stage, touchPoints) => dispatch(actions.handlePinchDown(stage, touchPoints)),\r\n        handlePinchMove: (stage, touchPoints) => dispatch(actions.handlePinchMove(stage, touchPoints)),\r\n        handlePinchUp: (stage) => dispatch(actions.handlePinchUp(stage))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CanvasComponent);\r\n","/**\r\n * Created by alexanderbol on 17/06/2017.\r\n */\r\nimport styles from './StatusComponent.module.css';\r\n\r\nconst StatusComponent = () => {\r\n    return (\r\n        <div className={styles[\"App-status-bar\"]}>\r\n            <div>\r\n                <h5>\r\n                    &nbsp;\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusComponent;","import {Component, Fragment} from 'react';\r\n// import Utils from \"../utils\";\r\n\r\nclass StageComponent extends Component {\r\n    // shouldComponentUpdate useless because always returns \"true\",\r\n    // Don't know why, maybe because of children?\r\n    // ----------------------------------------------------------\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     if (Utils.is_equal(this.props, nextProps)) {\r\n    //         return false;\r\n    //     }\r\n    //     return true;\r\n    // }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.stage.canvas && this.props.stage.canvas.getContext('2d')) {\r\n\r\n            let origin = this.props.stage.origin;\r\n            let zoomFactor = this.props.stage.zoomFactor*this.props.stage.resolution;\r\n            this.props.stage.setTransform(origin.x, origin.y, zoomFactor, -zoomFactor);\r\n\r\n            this.props.stage.update();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onStageUnmounted();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {this.props.children}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StageComponent;","import {Point, Segment, Circle, Arc, Polygon, Box} from '@flatten-js/core';\r\nimport {Graphics} from '@createjs/easeljs';\r\n\r\n/* Provide conversion methods from FlattenJS objects to CreateJS Graphics */\r\nexport function graphics(shape, style = undefined) {\r\n    if (shape instanceof Point) {\r\n        return graphics_point(shape, style);\r\n    }\r\n    if (shape instanceof Segment) {\r\n        return graphics_segment(shape, style);\r\n    }\r\n    if (shape instanceof Arc) {\r\n        return graphics_arc(shape, style);\r\n    }\r\n    if (shape instanceof Circle) {\r\n        return graphics_circle(shape, style);\r\n    }\r\n    if (shape instanceof Box) {\r\n        return graphics_box(shape, style);\r\n    }\r\n    if (shape instanceof Polygon) {\r\n        return graphics_polygon(shape, style);\r\n    }\r\n    return null;\r\n}\r\n\r\n// Point.prototype.graphics = function(style) {\r\nfunction graphics_point(point, style) {\r\n    let radius = (style && style.radius) ? style.radius : 3;\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    let graphics = new Graphics();\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n    graphics.circle = graphics.drawCircle(point.x, point.y, radius).command;\r\n    return graphics;\r\n};\r\n\r\n// Segment.prototype.graphics = function(style) {\r\nfunction graphics_segment(segment, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle !== undefined ? style.strokeStyle : 2;\r\n    let ignoreScale = style && style.ignoreScale !== undefined ? style.ignoreScale : true;\r\n    let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    return graphics\r\n        .setStrokeStyle(strokeStyle,1,0,10,ignoreScale)\r\n        .beginStroke(stroke)\r\n        .moveTo(segment.ps.x, segment.ps.y)\r\n        .lineTo(segment.pe.x, segment.pe.y)\r\n        .endStroke();\r\n};\r\n\r\n// Arc.prototype.graphics = function(style) {\r\nfunction graphics_arc(arc, style) {\r\n    // let startAngle = 2 * Math.PI - this.startAngle;\r\n    // let endAngle =  2 * Math.PI - this.endAngle;\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 2;\r\n    let ignoreScale = style && style.ignoreScale !== undefined ? style.ignoreScale : true;\r\n    let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    return graphics\r\n        .setStrokeStyle(strokeStyle,1,0,10,ignoreScale)\r\n        .beginStroke(stroke)\r\n        .arc(arc.pc.x, arc.pc.y, arc.r, arc.startAngle, arc.endAngle, !arc.counterClockwise)\r\n        .endStroke();\r\n};\r\n\r\n// Circle.prototype.graphics = function(style) {\r\nfunction graphics_circle(circle, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    // let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    let stroke = style && style.stroke ? style.stroke : \"#FF0303\";\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    graphics.setStrokeStyle(strokeStyle,0,0,10,true);\r\n    graphics.stroke = graphics.beginStroke(stroke).command;\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n    graphics.drawCircle(circle.pc.x, circle.pc.y, circle.r);\r\n    return graphics;\r\n};\r\n\r\n\r\nfunction graphics_box(box, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    let stroke = style && style.stroke ? style.stroke : \"#FF0303\";\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    graphics.setStrokeStyle(strokeStyle,0,0,10,true);\r\n    graphics.stroke = graphics.beginStroke(stroke).command;\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n    graphics.drawRect(box.xmin, box.ymin, box.xmax-box.xmin, box.ymax-box.ymin);\r\n    return graphics;\r\n};\r\n\r\nfunction setGraphicsEdgeSegment(graphics, segment) {\r\n    graphics.lineTo(segment.pe.x, segment.pe.y);\r\n}\r\n\r\nfunction setGraphicsEdgeArc(graphics, arc) {\r\n    // let startAngle = 2 * Math.PI - arc.startAngle;\r\n    // let endAngle = 2 * Math.PI - arc.endAngle;\r\n    graphics.arc(arc.pc.x, arc.pc.y, arc.r, arc.startAngle, arc.endAngle, !arc.counterClockwise);\r\n}\r\n\r\nfunction setGraphicsEdge(graphics, edge) {\r\n    if (edge.shape instanceof Segment) {\r\n        setGraphicsEdgeSegment(graphics, edge.shape);\r\n    }\r\n    else if (edge.shape instanceof Arc) {\r\n        setGraphicsEdgeArc(graphics, edge.shape);\r\n    }\r\n}\r\n\r\nfunction setGraphicsFace(graphics, face) {\r\n    let ps = face.first.start;\r\n    graphics.moveTo(ps.x, ps.y);\r\n\r\n    for (let edge of face) {\r\n        setGraphicsEdge(graphics, edge);\r\n    }\r\n}\r\n\r\n// Polygon.prototype.graphics = function(style) {\r\nfunction graphics_polygon(polygon, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    let stroke = style && style.stroke ? style.stroke : \"#FF0303\";\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    graphics.setStrokeStyle(strokeStyle,0,0,10,true);\r\n    graphics.stroke = graphics.beginStroke(stroke).command;\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n\r\n    for (let face of polygon.faces) {\r\n        setGraphicsFace(graphics, face);\r\n    }\r\n\r\n    graphics.endStroke();\r\n    return graphics;\r\n};\r\n\r\n","export const is_equal = (obj1, obj2) => {\r\n    let equal = true;\r\n    for (let key of Object.keys(obj2)) {\r\n        if (obj2[key] !== obj1[key]) {\r\n            equal = false;\r\n            break;\r\n        }\r\n    }\r\n    return equal;\r\n};\r\n\r\nexport const format = (num, divisor, decimals) => {\r\n    return (num/divisor).toFixed(decimals);\r\n};\r\n","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Shape} from '@createjs/easeljs';\r\nimport {graphics} from '../../../../models/graphics';\r\nimport {is_equal} from '../../../../models/utils';\r\n\r\nexport class ShapeComponent extends Component {\r\n    constructor(params) {\r\n        super();\r\n        this.shape = new Shape();\r\n        params.stage.addChild(this.shape);\r\n    }\r\n\r\n    handleMouseOver = (event) => {\r\n        this.props.onMouseOver(this.props.model);\r\n    };\r\n\r\n    handleMouseOut = (event) => {\r\n        this.props.onMouseOut();\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        this.props.onClick(this.props.model, this.props.layer);\r\n    };\r\n\r\n    redraw() {\r\n        // Draw shape\r\n        let stage = this.props.stage;\r\n        let color = (this.props.hovered || this.props.selected) ? \"black\" : this.props.color;\r\n        let alpha = (this.props.hovered || this.props.selected) ? 1.0 : 0.6;\r\n        let widthOn = this.props.widthOn;\r\n\r\n        let strokeStyle = this.props.model.geom.aperture ? this.props.model.geom.aperture : undefined;\r\n        let fill = widthOn ? this.props.color : \"white\";\r\n\r\n        if (this.shape.graphics.isEmpty()) {\r\n            this.shape.graphics = graphics(this.props.model.geom,{\r\n                strokeStyle: strokeStyle,\r\n                ignoreScale: true,\r\n                stroke: color,\r\n                fill: fill,\r\n                radius: 3. / (stage.zoomFactor * stage.resolution)\r\n            });\r\n\r\n            // this.skeletonShape = new Shape();\r\n            // this.skeletonShape.graphics = this.props.model.geom.graphics({\r\n            //     strokeStyle: 1,\r\n            //     ignoreScale: true,\r\n            //     stroke: color,\r\n            //     fill: fill,\r\n            //     radius: 3. / (stage.zoomFactor * stage.resolution)\r\n            // });\r\n            // this.skeletonShape.alpha = 1;\r\n            // this.props.stage.addChild(this.skeletonShape);\r\n        }\r\n        else {\r\n            if (this.shape.graphics.stroke) this.shape.graphics.stroke.style = color;\r\n            if (this.shape.graphics.fill) this.shape.graphics.fill.style = fill;\r\n            if (this.shape.graphics.circle) this.shape.graphics.circle.radius =\r\n                3. / (stage.zoomFactor * stage.resolution);\r\n        }\r\n        this.shape.alpha = this.props.displayed ? alpha : 0.0;\r\n\r\n        // let box = this.props.model.geom.box;\r\n        // this.shape.cache(box.xmin, box.ymin, box.xmax - box.xmin, box.ymax - box.ymin);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.shape.on(\"mouseover\", this.handleMouseOver);\r\n        this.shape.on(\"mouseout\", this.handleMouseOut);\r\n        this.shape.on(\"click\", this.handleClick);\r\n\r\n        // this.shape.mouseEnabled = false;\r\n\r\n        this.redraw();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (is_equal(this.props, nextProps)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.redraw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.shape.off(\"mouseover\", this.handleMouseOver);\r\n        this.shape.off(\"mouseout\", this.handleMouseOut);\r\n        this.shape.off(\"click\", this.handleClick);\r\n        this.props.stage.removeChild(this.shape);\r\n        this.shape.graphics.clear();\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Bitmap} from '@createjs/easeljs';\r\nimport '../../../../models/graphics';\r\nimport {is_equal} from '../../../../models/utils';\r\n// import storage from '../../../../firebase-storage';\r\n\r\nexport class ImageComponent extends Component {\r\n    handleMouseOver = (event) => {\r\n        this.props.onMouseOver(this.props.model);\r\n    };\r\n\r\n    handleMouseOut = (event) => {\r\n        this.props.onMouseOut();\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        this.props.onClick(this.props.model, this.props.layer);\r\n    };\r\n\r\n    redraw() {\r\n        if (!this.bitmap) return;\r\n        // Draw shape\r\n        let alpha = 1; // (this.props.hovered || this.props.selected) ? 1.0 : 0.6;\r\n        this.bitmap.alpha = this.props.displayed ? alpha : 0.0;\r\n\r\n        let width = this.props.model.geom.width;\r\n        let ratio = this.bitmap.image.naturalWidth/this.bitmap.image.naturalHeight;\r\n        this.props.model.geom.height = this.props.model.geom.width / ratio;\r\n        let scaleX = width/this.bitmap.image.naturalWidth; // 1. / (stage.zoomFactor * stage.resolution);\r\n        let scaleY = width/(this.bitmap.image.naturalHeight*ratio);\r\n        let tx = this.props.model.geom.center.x; // stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n        let ty = this.props.model.geom.center.y; // -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n\r\n        this.bitmap.setTransform(tx, ty, scaleX, -scaleY);\r\n\r\n        this.bitmap.regX = this.bitmap.image.naturalWidth/2;\r\n        this.bitmap.regY = this.bitmap.image.naturalHeight/2;\r\n\r\n        // let box = this.state.polygon.geom.box;\r\n        // this.shape.cache(box.xmin, box.ymin, box.xmax - box.xmin, box.ymax - box.ymin);\r\n    }\r\n\r\n    loadImage() {\r\n        const img = new Image();\r\n\r\n        img.onload = () => {\r\n            // img.crossOrigin=\"Anonymous\";\r\n            this.bitmap = new Bitmap(img);\r\n            this.props.stage.addChild(this.bitmap);\r\n\r\n            // this.bitmap.on(\"mouseover\", this.handleMouseOver);\r\n            // this.bitmap.on(\"mouseout\", this.handleMouseOut);\r\n            // this.bitmap.on(\"click\", this.handleClick);\r\n\r\n            // this.shape.mouseEnabled = false;\r\n            this.redraw();\r\n\r\n            this.props.onImageLoaded(this.props.model, this.props.layer, img);\r\n        };\r\n        img.setAttribute('crossOrigin', 'anonymous'); // works for me\r\n\r\n        // Create a reference from a Google Cloud Storage URI\r\n        //const ref = storage.refFromURL(this.props.model.geom.uri);\r\n\r\n        // ref.getDownloadURL()\r\n        //    .then( url => {\r\n        //\r\n        //         img.src = url;\r\n        //     })\r\n        //     .catch( error => console.log(error))\r\n\r\n        img.src = this.props.model.geom.uri;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadImage()\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (is_equal(this.props, nextProps)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.redraw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // this.bitmap.off(\"mouseover\", this.handleMouseOver);\r\n        // this.bitmap.off(\"mouseout\", this.handleMouseOut);\r\n        // this.bitmap.off(\"click\", this.handleClick);\r\n\r\n        this.props.stage.removeChild(this.bitmap);\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n","import {ShapeComponent} from './graphics/shapeComponent';\r\nimport {ImageComponent} from \"./graphics/imageComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/appActions\";\r\n\r\nconst LayerComponent = (props) => {\r\n    const onImageLoaded = (model, layer, image) => {\r\n        props.setHomeView(props.stage, props.layer);\r\n        //this.forceUpdate();       // ??? unclear why on Home button click not updated\r\n    }\r\n\r\n    return (\r\n        props.layer.shapes.map((shape, index) => {\r\n                return shape.geom.uri ? (\r\n                    <ImageComponent\r\n                        key={index}\r\n                        stage={props.stage}\r\n                        layer={props.layer}\r\n                        model={shape}\r\n                        displayed={props.layer.displayed}\r\n                        hovered={shape === props.hoveredShape}\r\n                        selected={\r\n                            shape === props.firstMeasuredShape ||\r\n                            shape === props.secondMeasuredShape\r\n                        }\r\n                        color={props.layer.color}\r\n                        widthOn={props.widthOn}\r\n                        displayLabels={props.displayLabels}\r\n                        zoomFactor={props.zoomFactor}\r\n                        onMouseOver={props.onMouseOver}\r\n                        onMouseOut={props.onMouseOut}\r\n                        onClick={props.onClick}\r\n                        onImageLoaded={onImageLoaded}\r\n                    />\r\n                ) : (\r\n                    <ShapeComponent\r\n                        key={index}\r\n                        stage={props.stage}\r\n                        layer={props.layer}\r\n                        model={shape}\r\n                        displayed={props.layer.displayed}\r\n                        hovered={shape === props.hoveredShape}\r\n                        selected={\r\n                            shape === props.firstMeasuredShape ||\r\n                            shape === props.secondMeasuredShape\r\n                        }\r\n                        color={props.layer.color}\r\n                        widthOn={props.widthOn}\r\n                        displayVertices={props.displayVertices}\r\n                        zoomFactor={props.zoomFactor}\r\n                        onMouseOver={props.handleMouseRollOverShape}\r\n                        onMouseOut={props.handleMouseRollOutShape}\r\n                        onClick={props.handleClickOnShape}\r\n                    />)\r\n            }\r\n        )\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stage: state.app.stage,\r\n        layers: state.layers,\r\n        displayVertices: state.app.displayVertices,\r\n        displayLabels: state.app.displayLabels,\r\n        widthOn: state.app.widthOn,\r\n        zoomFactor: state.app.zoomFactor,\r\n        units: state.app.units,\r\n        divisor: state.app.divisor,\r\n        decimals: state.app.decimals,\r\n        measurePointsActive: state.app.measurePointsActive,\r\n        showAboutPopup: state.app.showAboutPopup,\r\n        showDownloadPopup: state.app.showDownloadPopup,\r\n        showUploadPopup: state.app.showUploadPopup,\r\n        measureShapesTool: state.measureShapesTool,\r\n        hoveredShape: state.measureShapesTool.hoveredShape,\r\n        firstMeasuredShape: state.measureShapesTool.firstMeasuredShape,\r\n        secondMeasuredShape: state.measureShapesTool.secondMeasuredShape\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setHomeView: (stage, shape) => dispatch(actions.setHomeView(stage, shape)),\r\n        handleMouseRollOverShape: (shape) => dispatch(actions.handleMouseRollOverShape(shape)),\r\n        handleMouseRollOutShape: () => dispatch(actions.handleMouseRollOutShape()),\r\n        handleClickOnShape: (shape, layer) => dispatch(actions.handleClickOnShape(shape, layer)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LayerComponent);\r\n","import classes from '../LabelsLayerComponent/labelsLayer.module.css';\r\n\r\nconst labelComponent = ( {stage, shape} ) => {\r\n    let center = shape.geom.center || shape.geom;  // Point has no method center\r\n    let left = stage.canvas.offsetLeft + stage.W2C_X(center.x) + 6;\r\n    let top = stage.canvas.offsetTop + stage.W2C_Y(center.y) - 4;\r\n    let inside = left > stage.canvas.offsetLeft && left < stage.canvas.offsetLeft + stage.canvas.width &&\r\n        top > stage.canvas.offsetTop && top < stage.canvas.offsetTop + stage.canvas.height;\r\n\r\n    return inside ? (\r\n        <div style={{position:\"absolute\", left:left+\"px\", top: top+\"px\"}} className={classes.LabelComponent}>\r\n            <h5>{shape.label}</h5>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default labelComponent;","import LabelComponent from '../domelements/labelComponent';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst labelsLayerComponent = (props) => {\r\n\r\n    return (props.layer.displayed && props.displayLabels) ? (\r\n        props.layer.shapes.map((shape, index) => {\r\n                return (shape.label && shape.label.trim() !== \"\") ? (\r\n                    <LabelComponent\r\n                        key={index}\r\n                        stage={props.stage}\r\n                        shape={shape}\r\n                        zoomFactor={props.zoomFactor}\r\n                        originX={props.originX}\r\n                        originY={props.originY}\r\n                    />) : null;\r\n            }\r\n        )\r\n    ) : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stage: state.app.stage,\r\n        displayLabels: state.app.displayLabels,\r\n        zoomFactor: state.app.zoomFactor,\r\n        originX: state.app.originX,\r\n        originY: state.app.originY\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {return {}};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(labelsLayerComponent);\r\n","import {format} from \"../../../../../models/utils\";\r\nimport classes from './VertexLabel.module.css';\r\n\r\nconst VertexLabel = (props) => {\r\n    let stage = props.stage;\r\n    let left = stage.canvas.offsetLeft + stage.W2C_X(props.vertex.x) + 6;\r\n    let top = stage.canvas.offsetTop + stage.W2C_Y(props.vertex.y) - 10;\r\n    // let inside = left > stage.canvas.offsetLeft && left < stage.canvas.offsetLeft + stage.canvas.width &&\r\n    //     top > stage.canvas.offsetTop && top < stage.canvas.offsetTop + stage.canvas.height;\r\n    let x = format(props.vertex.x, props.divisor, props.decimals);\r\n    let y = format(props.vertex.y, props.divisor, props.decimals);\r\n\r\n    return (\r\n        <div className={classes.VertexLabel} style={{left:left, top:top}}>\r\n            <h5>\r\n                x={x} y={y}\r\n            </h5>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default VertexLabel;","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Shape, Shadow} from '@createjs/easeljs';\r\nimport {graphics} from '../../../../models/graphics';\r\nimport {is_equal} from '../../../../models/utils';\r\nimport VertexLabel from '../domelements/VertexLabel/VertexLabel';\r\n\r\nclass VertexComponent extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.shape = new Shape();\r\n        props.stage.addChild(this.shape);\r\n\r\n        this.state = {\r\n            hovered: false\r\n        }\r\n    }\r\n\r\n    handleMouseOver = (event) => {\r\n        // this.props.onMouseOver(this.props.model);\r\n        this.shape.shadow = new Shadow(this.props.color, 0, 0, 10);\r\n        this.setState({hovered:true})\r\n    };\r\n\r\n    handleMouseOut = (event) => {\r\n        // this.props.onMouseOut();\r\n        this.shape.shadow = null;\r\n        this.setState({hovered:false})\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        // this.props.onClick(this.props.model, this.props.layer);\r\n        console.log(this.props.vertex);\r\n    };\r\n\r\n    redraw() {\r\n        let stage = this.props.stage;\r\n        let stroke = this.props.color;\r\n        let fill = this.props.color;\r\n        let alpha = 1.0;\r\n\r\n\r\n        if (this.shape.graphics.isEmpty()) {\r\n            this.shape.graphics = graphics(this.props.vertex,\r\n                {\r\n                    stroke: stroke,     // this.props.color,\r\n                    fill: fill,\r\n                    radius: 3. / (stage.zoomFactor * stage.resolution)\r\n                });\r\n        }\r\n        else {\r\n            this.shape.graphics.circle.radius = 3. / (stage.zoomFactor * stage.resolution);\r\n            this.shape.graphics.fill.style = fill;\r\n        }\r\n        this.shape.alpha = alpha;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.shape.on(\"mouseover\", this.handleMouseOver);\r\n        this.shape.on(\"mouseout\", this.handleMouseOut);\r\n        this.shape.on(\"click\", this.handleClick);\r\n\r\n        this.shape.mouseEnabled = true;\r\n\r\n        this.redraw();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (is_equal(this.props, nextProps) && is_equal(this.state, nextState)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.redraw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.shape.off(\"mouseover\", this.handleMouseOver);\r\n        this.shape.off(\"mouseout\", this.handleMouseOut);\r\n        this.shape.off(\"click\", this.handleClick);\r\n\r\n        this.props.stage.removeChild(this.shape);\r\n        this.shape.graphics.clear();\r\n    }\r\n\r\n    render() {\r\n        return this.state.hovered ? (\r\n            <VertexLabel\r\n                stage={this.props.stage}\r\n                vertex={this.props.vertex}\r\n                divisor={this.props.divisor}\r\n                decimals={this.props.decimals}\r\n            />\r\n            ) : null;\r\n    }\r\n}\r\n\r\nexport default VertexComponent;","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\nimport VertexComponent from './vertexComponent';\r\n\r\nconst VerticesComponent = (props) => {\r\n\r\n    return props.model.geom.vertices ?\r\n        props.model.geom.vertices.map((vertex, index) =>\r\n            <VertexComponent key={index}\r\n                             stage={props.stage}\r\n                             vertex={vertex}\r\n                             color={props.color}\r\n                             divisor={props.divisor}\r\n                             decimals={props.decimals}\r\n                             zoomFactor={props.zoomFactor}\r\n                             originX={props.originX}\r\n                             originY={props.originY}\r\n            />\r\n        ) : null;\r\n\r\n}\r\n\r\nexport default VerticesComponent;","import VerticesComponent from './graphics/verticesComponent';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst verticesLayerComponent = (props) => {\r\n    return (props.layer.displayed && props.displayVertices) ? (\r\n        props.layer.shapes.map((shape, index) =>\r\n            <VerticesComponent\r\n                key={index}\r\n                stage={props.stage}\r\n                model={shape}\r\n                color={props.layer.color}\r\n                divisor={props.divisor}\r\n                decimals={props.decimals}\r\n                zoomFactor={props.zoomFactor}\r\n                originX={props.originX}\r\n                originY={props.originY}\r\n            />\r\n        )\r\n    ) : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stage: state.app.stage,\r\n        displayVertices: state.app.displayVertices,\r\n        zoomFactor: state.app.zoomFactor,\r\n        originX: state.app.originX,\r\n        originY: state.app.originY,\r\n        divisor: state.app.divisor,\r\n        decimals: state.app.decimals,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {return {}};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(verticesLayerComponent);\r\n","import {Fragment} from 'react';\r\nimport LayerComponent from \"./layerComponent\";\r\nimport LabelsLayerComponent from \"./LabelsLayerComponent/labelsLayerComponent\";\r\nimport VerticesLayerComponent from './verticesLayerComponent';\r\n\r\nconst LayersComponent = ({layers, widthOn, displayVertices, displayLabels, zoomFactor}) => {\r\n    return layers.map((layer) =>\r\n        <Fragment key={layer.name}>\r\n            <LayerComponent\r\n                layer={layer}\r\n                widthOn={widthOn}\r\n                displayVertices={displayVertices}\r\n                zoomFactor={zoomFactor}\r\n            />\r\n\r\n            <LabelsLayerComponent\r\n                layer={layer}\r\n                displayLabels={displayLabels}\r\n            />\r\n\r\n            <VerticesLayerComponent\r\n                layer={layer}\r\n                displayVertices={displayVertices}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default LayersComponent\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\n\r\nimport {Component, createRef} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Stage from \"../models/stage\";\r\nimport * as actions from '../store/actions/stageActions';\r\n\r\nclass MeasurePointsTool extends Component {\r\n    measureCanvas = createRef();\r\n    measureStage = null;\r\n\r\n    state = {\r\n        startX: undefined,\r\n        startY: undefined,\r\n        endX: undefined,\r\n        endY: undefined,\r\n        measureStarted: false\r\n    };\r\n\r\n    handleMouseDown = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.measureStage.clear();\r\n\r\n        if (this.state.measureStarted) {   // second click - clear measurement\r\n            this.setState({\r\n                startX: undefined,\r\n                startY: undefined,\r\n                endX: undefined,\r\n                endY: undefined,\r\n                measureStarted: false\r\n            });\r\n            this.measureStage.canvas.style.cursor = \"auto\";\r\n        }\r\n        else {                       // first click - start measurment\r\n            this.setState({\r\n                startX: this.measureStage.C2W_X(event.stageX),\r\n                startY: this.measureStage.C2W_Y(event.stageY),\r\n                measureStarted: true\r\n            });\r\n            this.measureStage.canvas.style.cursor = \"crosshair\";\r\n        }\r\n    };\r\n\r\n    handleMouseMove = (event) => {\r\n        if (this.state.measureStarted) {\r\n            this.setState({\r\n                endX: this.measureStage.C2W_X(event.stageX),\r\n                endY: this.measureStage.C2W_Y(event.stageY)\r\n            })\r\n        }\r\n    };\r\n\r\n    handleMouseUp = (event) => {\r\n    }\r\n\r\n    handleMouseWheel = (event) => {\r\n        event.preventDefault();\r\n\r\n        let delta = event.detail || event.wheelDelta;\r\n        if (delta !== 0) {\r\n            // this.props.onMouseWheelMove(event.offsetX, event.offsetY, delta);\r\n            this.props.handleMouseWheelMove(this.props.stage, event.offsetX, event.offsetY, delta);\r\n\r\n            this.draw();\r\n        }\r\n    };\r\n\r\n    handleMouseWheelFox = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (event.detail !== 0) {\r\n            // this.props.onMousewheelMove(event.layerX, event.layerY, -event.detail);\r\n            this.props.handleMouseWheelMove(this.props.stage, event.layerX, event.layerY, -event.detail);\r\n\r\n            this.draw();\r\n        }\r\n    };\r\n\r\n    draw() {\r\n        // let canvas = this.measureCanvas.current;\r\n        let stage = this.measureStage; // this.props.stage;\r\n        let canvas = stage.canvas;\r\n        let context = canvas.getContext('2d');\r\n\r\n        this.measureStage.origin = this.props.stage.origin;\r\n        this.measureStage.resolution = this.props.stage.resolution;\r\n        this.measureStage.zoomFactor = this.props.stage.zoomFactor;\r\n\r\n        this.measureStage.clear();\r\n\r\n        // Draw rectangle\r\n        let pllX = Math.min(stage.W2C_X(this.state.startX), stage.W2C_X(this.state.endX));\r\n        let pllY = Math.min(stage.W2C_Y(this.state.startY), stage.W2C_Y(this.state.endY));\r\n        let width = Math.abs(stage.W2C_Scalar(this.state.startX - this.state.endX));\r\n        let height = Math.abs(stage.W2C_Scalar(this.state.startY - this.state.endY));\r\n\r\n        context.beginPath();\r\n        context.rect(pllX, pllY, width, height);\r\n\r\n        // Draw segment\r\n        context.moveTo(stage.W2C_X(this.state.startX), stage.W2C_Y(this.state.startY));\r\n        context.lineTo(stage.W2C_X(this.state.endX), stage.W2C_Y(this.state.endY));\r\n\r\n        context.lineWidth = 1;\r\n        context.strokeStyle = 'black';\r\n        context.stroke();\r\n\r\n        // Draw text\r\n        let textX, textY, textHeight, textWidth;\r\n        let backX, backY;                      // background rectangle\r\n        let text = this.measurement();\r\n\r\n        context.font = \"12pt Arial\";\r\n\r\n        textHeight = 12;\r\n        /* font size*/\r\n        textWidth = context.measureText(text).width;\r\n\r\n        // Rectangle to the right of current point, text aligned left\r\n        if (Math.abs(stage.W2C_X(this.state.endX) - pllX) <= 2) {\r\n            context.textAlign = \"left\";\r\n            textX = pllX + 3;\r\n            backX = pllX;\r\n        }\r\n        // Rectangle to the left of current point, text aligned right\r\n        else {\r\n            context.textAlign = \"right\";\r\n            textX = pllX + width - 3;\r\n            backX = textX - textWidth - 3;\r\n        }\r\n\r\n        if (Math.abs(stage.W2C_Y(this.state.endY) - pllY) <= 2) {\r\n            textY = pllY - 3;\r\n        }\r\n        else {\r\n            textY = pllY + height + textHeight + 3;\r\n        }\r\n        backY = textY - textHeight - 3;\r\n\r\n        context.fillStyle = 'white';\r\n        context.globalAlpha = 0.4;\r\n        context.fillRect(backX, backY, textWidth + 6, textHeight + 6);\r\n\r\n        context.fillStyle = \"black\";\r\n        context.globalAlpha = 1;\r\n        context.fillText(this.measurement(), textX, textY);\r\n    }\r\n\r\n    measurement() {\r\n        let dx = this.state.endX - this.state.startX;\r\n        let dy = this.state.endY - this.state.startY;\r\n        let dist = Math.sqrt(dx * dx + dy * dy);\r\n        let message = \"DX=\" + this.format(dx) + \",DY=\" + this.format(dy) + \",D=\" + this.format(dist);\r\n        return message;\r\n    }\r\n\r\n    format(num) {\r\n        return (num / this.props.divisor).toFixed(this.props.decimals);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // let canvas = this.measureCanvas.current;\r\n        this.measureStage = new Stage(this.measureCanvas.current);\r\n        this.measureStage.origin = this.props.stage.origin;\r\n        this.measureStage.resolution = this.props.stage.resolution;\r\n        this.measureStage.zoomFactor = this.props.stage.zoomFactor;\r\n\r\n        this.measureStage.on(\"stagemousedown\", this.handleMouseDown);\r\n        this.measureStage.on(\"stagemousemove\", this.handleMouseMove);\r\n        this.measureStage.on(\"stagemouseup\", this.handleMouseUp);\r\n\r\n        this.measureStage.canvas.addEventListener(\"mousewheel\", this.handleMouseWheel);\r\n        this.measureStage.canvas.addEventListener(\"DOMMouseScroll\", this.handleMouseWheelFox);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.measureStarted) {\r\n            this.draw();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.measureStage.clear();\r\n        this.measureStage.removeAllChildren();\r\n        this.measureStage.removeAllEventListeners();\r\n    }\r\n\r\n    render() {\r\n        let mainCanvas = this.props.stage.canvas;\r\n        let width = mainCanvas.width;\r\n        let height = mainCanvas.height;\r\n        let top = mainCanvas.offsetTop;\r\n        let left = mainCanvas.offsetLeft;\r\n        return (\r\n            <canvas tabIndex=\"1\" ref={this.measureCanvas}\r\n                    width={width}\r\n                    height={height}\r\n                    style={{position: 'absolute', top: top, left: left}}\r\n            >\r\n            </canvas>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({app}) => {\r\n    return {\r\n        stage: app.stage,\r\n        divisor: app.divisor,\r\n        decimals: app.decimals\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleMouseWheelMove: (stage, x, y, delta) => dispatch(actions.handleMouseWheelMove(stage, x, y, delta))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MeasurePointsTool);\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Shape, Text} from '@createjs/easeljs';\r\nimport {graphics} from '../models/graphics';\r\n\r\nclass MeasureShapesTool extends Component {\r\n    constructor(params) {\r\n        super();\r\n        this.segment = new Shape();\r\n        params.stage.addChild(this.segment);\r\n\r\n        this.labelShape = new Text();\r\n        this.labelShape.x = 0;\r\n        this.labelShape.y = 0;\r\n        params.stage.addChild(this.labelShape);\r\n\r\n        // var html = document.createElement('div');\r\n        // html.innerText = \"\"; // params.model.label;\r\n        // html.style.position = \"absolute\";\r\n        // html.style.top = 0;\r\n        // html.style.left = 0;\r\n        //\r\n        // document.body.appendChild(html);\r\n        // this.labelShape = new createjs.DOMElement(html);\r\n        // params.stage.addChild(this.labelShape);\r\n    }\r\n\r\n    // redrawLabel() {\r\n    //     if (!this.labelShape) return;\r\n    //\r\n    //     let stage = this.props.stage;\r\n    //\r\n    //     this.labelShape.htmlElement.style.display = \"block\";\r\n    //\r\n    //     let box = this.props.shortestSegment.box;\r\n    //     let point = {x: (box.xmin + box.xmax) / 2, y: (box.ymin + box.ymax) / 2};\r\n    //     let dx = 6. / (stage.zoomFactor * stage.resolution);\r\n    //     let dy = 4. / (stage.zoomFactor * stage.resolution);\r\n    //\r\n    //     this.labelShape.htmlElement.style.font = \"16px Arial\";\r\n    //     this.labelShape.htmlElement.innerText = this.props.shortestSegment.length;\r\n    //\r\n    //     let unscale = 1. / (stage.zoomFactor * stage.resolution);\r\n    //     let tx = stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n    //     let ty = -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n    //     this.labelShape.setTransform(tx, ty, unscale, -unscale);\r\n    // }\r\n\r\n    format(num) {\r\n        return (num/this.props.divisor).toFixed(this.props.decimals);\r\n    }\r\n\r\n    redrawLabel() {\r\n        if (!this.labelShape) return;\r\n\r\n        let stage = this.props.stage;\r\n\r\n        let box = this.props.shortestSegment.box;\r\n        let point = {x: (box.xmin + box.xmax) / 2, y: (box.ymin + box.ymax) / 2};\r\n        let dx = 6. / (stage.zoomFactor * stage.resolution);\r\n        let dy = 4. / (stage.zoomFactor * stage.resolution);\r\n\r\n        if (box.ymin === box.ymax) {\r\n            dx = 0;\r\n            dy = -dy;\r\n        }\r\n\r\n        // this.labelShape.htmlElement.style.display = \"block\";\r\n        // this.labelShape.htmlElement.style.font = \"16px Arial\";\r\n        // this.labelShape.htmlElement.innerText = this.props.shortestSegment.length;\r\n\r\n        this.labelShape.text = this.format(this.props.shortestSegment.length);\r\n\r\n        let fontSize = 14.; // / (stage.zoomFactor * stage.resolution);\r\n        this.labelShape.font = `${fontSize}px Arial`;\r\n\r\n        let unscale = 1. / (stage.zoomFactor * stage.resolution);\r\n        // let tx = stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n        // let ty = -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n        let tx = point.x + dx;\r\n        let ty = point.y + dy;\r\n        this.labelShape.setTransform(tx, ty, unscale, -unscale);\r\n    }\r\n\r\n    draw() {\r\n        if (this.props.shortestSegment) {\r\n            this.segment.graphics = graphics(this.props.shortestSegment);\r\n            this.redrawLabel();\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.draw();\r\n    }\r\n    componentDidUpdate() {\r\n        this.segment.graphics.clear();\r\n        if (this.props.firstMeasuredShape && this.props.secondMeasuredShape &&\r\n            this.props.firstMeasuredLayer.displayed &&\r\n            this.props.secondMeasuredLayer.displayed) {\r\n\r\n            this.draw();\r\n            this.redrawLabel();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.stage.removeChild(this.segment);\r\n        this.segment.graphics.clear();\r\n        this.props.stage.removeChild(this.labelShape);\r\n        this.labelShape.text = \"\";\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default MeasureShapesTool;","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\nimport {format} from '../models/utils';\r\n\r\nconst DisplayCoordsTool = ({stage, coordX, coordY, divisor, decimals}) => {\r\n    let mainCanvas = stage.canvas;\r\n    let top = mainCanvas.offsetTop + 10;\r\n    let left = mainCanvas.width - 200; //  mainCanvas.offsetLeft + 10;\r\n    let x = stage.C2W_X(coordX);\r\n    let y = stage.C2W_Y(coordY);\r\n    return (\r\n        <div style={{position: 'absolute', top: top, left: left,\r\n            backgroundColor: 'white', opacity:0.8}}>\r\n            <h5 style={{margin: 0, padding: 3}}>\r\n                X: {format(x,divisor,decimals)} Y: {format(y,divisor,decimals)}\r\n            </h5>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DisplayCoordsTool;\r\n","import {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\n// A Modal component that is an abstraction around the portal API.\r\nclass Modal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Create a div that we'll render the modal into. Because each\r\n        // Modal component has its own element, we can render multiple\r\n        // modal components into the modal container.\r\n        this.el = document.createElement('div');\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Append the element into the DOM on mount. We'll render\r\n        // into the modal container element (see the HTML tab).\r\n        modalRoot.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // Remove the element from the DOM when we unmount\r\n        modalRoot.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        // Use a portal to render the children into the element\r\n        return ReactDOM.createPortal(\r\n            // Any valid React child: JSX, strings, arrays, etc.\r\n            this.props.children,\r\n            // A DOM element\r\n            this.el,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import {useEffect, useRef} from 'react';\r\nimport Modal from '../Modal';\r\nimport classes from './ModalPopup.module.css';\r\n\r\nconst BackDrop = (props) => {\r\n    const backDropRef = useRef();\r\n\r\n    const onBackDropClicked = (ev) => {\r\n        if (ev.target === backDropRef.current) {\r\n            props.closePopup();\r\n        }\r\n    };\r\n\r\n    return <div ref={backDropRef} className={classes.BackDrop} onClick={onBackDropClicked}>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nconst ModalPopup = (props) => {\r\n    let offsetX;\r\n    let offsetY;\r\n    let dragX;\r\n    let dragY;\r\n\r\n    const elementDrag = (ev) => {\r\n        ev = ev || window.event;\r\n        // calculate the new cursor position:\r\n        offsetX = dragX - ev.clientX;\r\n        offsetY = dragY - ev.clientY;\r\n        dragX = ev.clientX;\r\n        dragY = ev.clientY;\r\n        // set the element's new position:\r\n        let element = ev.target;\r\n        element.style.top = (element.offsetTop - offsetY) + \"px\";\r\n        element.style.left = (element.offsetLeft - offsetX) + \"px\";\r\n    };\r\n\r\n    const closeDragElement = (ev) => {\r\n        /* stop moving when mouse button is released:*/\r\n        ev.target.onmouseup = null;\r\n        ev.target.onmousemove = null;\r\n    };\r\n\r\n    const dragMouseDown = (ev) => {\r\n        ev = ev || window.event;\r\n        // get the mouse cursor position at startup:\r\n        dragX = ev.clientX;\r\n        dragY = ev.clientY;\r\n        ev.target.onmouseup = closeDragElement;\r\n        // call a function whenever the cursor moves:\r\n        ev.target.onmousemove = elementDrag;\r\n    };\r\n\r\n    useEffect( () => {\r\n        const handleKeyDown = (ev) => {\r\n            if (ev.code === \"Escape\") {\r\n                props.closePopup();\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n        return () => document.removeEventListener('keydown', handleKeyDown);\r\n    }, [props])\r\n\r\n    return props.showPopup && (\r\n        <Modal>\r\n            <BackDrop closePopup={props.closePopup}>\r\n                <div className={classes.ModalPopup} onMouseDown={dragMouseDown}>\r\n                    <header>{props.header}</header>\r\n                    {props.children}\r\n                </div>\r\n            </BackDrop>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalPopup;\r\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nimport classes from './AboutPopup.module.css';\r\nimport ModalPopup from \"../UI/ModalPopup/ModalPopup\";\r\n\r\nconst AboutPopup = (props) => {\r\n    return (\r\n        <ModalPopup\r\n            showPopup={props.showAboutPopup}\r\n            closePopup={props.toggleAboutPopup}\r\n            header=\"Info\"\r\n        >\r\n            <div className={classes.AboutPopup}>\r\n                <h2>{props.title} v{props.version}</h2>\r\n\r\n                <label>{`Build date: `}</label>\r\n                <span>02/10/2021</span>\r\n                <br/>\r\n\r\n                <label>{`Github depository: `}</label>\r\n                <a href=\"https://github.com/alexbol99/debug-viewer1\" >\r\n                    https://github.com/alexbol99/debug-viewer1\r\n                </a>\r\n                <br/>\r\n\r\n                <label>{`3d party graphics library: `}</label>\r\n                <a href=\"https://github.com/CreateJS/EaselJS/tree/2.0\" >\r\n                    https://github.com/CreateJS/EaselJS/tree/2.0\r\n                </a>\r\n                <br/>\r\n\r\n            </div>\r\n        </ModalPopup>\r\n\r\n    )\r\n};\r\n\r\nexport default AboutPopup;\r\n","import {Point, Segment, Arc, Circle, Box, Polygon} from \"@flatten-js/core\";\r\nimport {CW, ORIENTATION} from \"@flatten-js/core\";\r\n\r\nimport XMLWriter from \"xml-writer\";\r\n\r\nfunction pointToXMLString(xw, shape) {\r\n    xw.startElement('point');\r\n        xw.writeAttribute('x', shape.geom.x);\r\n        xw.writeAttribute('y', shape.geom.y);\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction segmentToXMLString(xw, shape) {\r\n    xw.startElement('segment');\r\n        xw.writeAttribute('xs', shape.geom.ps.x);\r\n        xw.writeAttribute('ys', shape.geom.ps.y);\r\n        xw.writeAttribute('xe', shape.geom.pe.x);\r\n        xw.writeAttribute('ye', shape.geom.pe.y);\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction arcToXMLString(xw, shape) {\r\n    xw.startElement('arc');\r\n        xw.writeAttribute('xs', Math.round(shape.geom.start.x));\r\n        xw.writeAttribute('ys', Math.round(shape.geom.start.y));\r\n        xw.writeAttribute('xe', Math.round(shape.geom.end.x));\r\n        xw.writeAttribute('ye', Math.round(shape.geom.end.y));\r\n        xw.writeAttribute('xc', shape.geom.center.x);\r\n        xw.writeAttribute('yc', shape.geom.center.y);\r\n        xw.writeAttribute('cw', shape.geom.counterClockwise === CW ? \"yes\" : \"no\");\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction circleToXMLString(xw, shape) {\r\n    xw.startElement('circle');\r\n        xw.writeAttribute('xc', shape.geom.center.x);\r\n        xw.writeAttribute('yc', shape.geom.center.y);\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction boxToXMLString(xw, shape) {\r\n\r\n}\r\n\r\nfunction polygonToXMlString(xw, polygon) {\r\n    xw.startElement('profile');\r\n\r\n    for (let face of polygon.faces) {\r\n        if (face.orientation() === ORIENTATION.CW) {\r\n            xw.startElement('island');\r\n        }\r\n        else {\r\n            xw.startElement('hole');\r\n        }\r\n\r\n        xw.writeAttribute('n_edges', `${face.size}`);\r\n\r\n        for (let edge of face) {\r\n            xw.startElement('edge');\r\n            let shape = edge.shape;\r\n            if (shape instanceof Segment) {\r\n                xw.writeAttribute('type', 'segment');\r\n                xw.writeAttribute('xs', shape.ps.x);\r\n                xw.writeAttribute('ys', shape.ps.y);\r\n                xw.writeAttribute('xe', shape.pe.x);\r\n                xw.writeAttribute('ye', shape.pe.y);\r\n            } else if (edge.shape instanceof Arc) {\r\n                xw.writeAttribute('type', 'curve');\r\n                xw.writeAttribute('xs', Math.round(shape.start.x));\r\n                xw.writeAttribute('ys', Math.round(shape.start.y));\r\n                xw.writeAttribute('xe', Math.round(shape.end.x));\r\n                xw.writeAttribute('ye', Math.round(shape.end.y));\r\n                xw.writeAttribute('xc', shape.center.x);\r\n                xw.writeAttribute('yc', shape.center.y);\r\n                xw.writeAttribute('cw', shape.counterClockwise === CW ? \"yes\" : \"no\");\r\n            } else {\r\n                xw.writeAttribute('type', 'unknown');\r\n            }\r\n            xw.endElement();\r\n        }\r\n\r\n        xw.endElement();  // island or hole\r\n    }\r\n\r\n    xw.endElement();     // profile\r\n}\r\n\r\nexport function createXMLString(shapes) {\r\n    let xw = new XMLWriter(true);\r\n    xw.startDocument('1.0', 'UTF-8');\r\n\r\n    xw.startElement('shapes');\r\n    xw.startElement('title').text('test polygon in xml format').endElement();\r\n\r\n    for (let shape of shapes) {\r\n        if (shape.geom instanceof Point) {\r\n            pointToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Segment) {\r\n            segmentToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Arc) {\r\n            arcToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Circle) {\r\n            circleToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Box) {\r\n            boxToXMLString(xw, shape)\r\n        }\r\n        else if (shape.geom instanceof Polygon) {\r\n            polygonToXMlString(xw, shape.geom);\r\n        }\r\n    }\r\n\r\n    xw.endDocument();\r\n    return xw.toString();\r\n}\r\n\r\n","import {Component} from 'react';\r\nimport ModalPopup from \"../UI/ModalPopup/ModalPopup\";\r\nimport {createXMLString} from \"../../dataParsers/createXML\";\r\n\r\nimport classes from \"./DownloadPopup.module.css\";\r\n\r\nclass DownloadPopup extends Component {\r\n    render() {\r\n        let downloadData = this.props.showPopup ?\r\n            this.props.layers.map( layer => {\r\n            return layer.displayed ? {\r\n                filename: `${layer.name}.xml`,\r\n                xmlString: createXMLString(layer.shapes)\r\n            } : null\r\n        }) : [];\r\n        return this.props.showPopup && this.props.layers.length > 0 ? (\r\n            <ModalPopup\r\n                showPopup={this.props.showPopup}\r\n                closePopup={this.props.closePopup}\r\n                header=\"Download files\"\r\n            >\r\n                <div className={classes.DownloadPopup}>\r\n                    <h5>Click to the following links to start download</h5>\r\n                    <ul>\r\n\r\n                        {downloadData.map(data =>\r\n                            data === null ? null :\r\n                            <li key={data.filename}>\r\n                                <a href={'data:text/json;charset=utf-8,' + encodeURIComponent(data.xmlString)}\r\n                                   download={data.filename}>\r\n                                    {data.filename}\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n\r\n                    </ul>\r\n                </div>\r\n            </ModalPopup>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default DownloadPopup;\r\n","import classes from './Snackbar.module.css';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Snackbar = ({message, onAnimationEnd}) => {\r\n    return ReactDOM.createPortal(\r\n        // Any valid React child: JSX, strings, arrays, etc.\r\n        <div className={classes.Snackbar} onAnimationEnd={onAnimationEnd}>\r\n            <h3>{message}</h3>\r\n        </div>,\r\n        // A DOM element\r\n        document.getElementById('snackbar-root'),\r\n    );\r\n}\r\n\r\nexport default Snackbar;","import { Job } from '../models/job';\r\nimport {Point, Segment, Arc, Polygon, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\n\r\nFlatten.Image = class Image {\r\n    constructor() {\r\n        this.uri = \"\";\r\n        /**\r\n         * Center in world coordinates\r\n         * @type {Flatten.Point}\r\n         */\r\n        this.center = new Flatten.Point();\r\n        /**\r\n         * Width in world units (inch/mm)\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * Height in world units (inch/mm)\r\n         */\r\n        this.height = 0;\r\n    }\r\n    get box() {\r\n        return new Flatten.Box(\r\n            this.center.x - this.width/2,\r\n            this.center.y - this.height/2,\r\n            this.center.x + this.height/2,\r\n            this.center.y + this.height/2\r\n        );\r\n\r\n    }\r\n};\r\n\r\nfunction parseEdges(edgesXML) {\r\n    let edges = [];\r\n\r\n    for (let edge of Array.from(edgesXML)) {\r\n        let type = edge.getAttribute('type');\r\n\r\n        if (type === \"segment\") {\r\n            let ps = new Point(parseInt(edge.getAttribute('xs'),10), parseInt(edge.getAttribute('ys'),10));\r\n            let pe = new Point(parseInt(edge.getAttribute('xe'),10), parseInt(edge.getAttribute('ye'),10));\r\n\r\n            edges.push(new Segment(ps, pe));\r\n        }\r\n\r\n        if (type === \"curve\") {\r\n            let ps = new Point(parseInt(edge.getAttribute('xs'),10), parseInt(edge.getAttribute('ys'),10));\r\n            let pe = new Point(parseInt(edge.getAttribute('xe'),10), parseInt(edge.getAttribute('ye'),10));\r\n            let pc = new Point(parseInt(edge.getAttribute('xc'),10), parseInt(edge.getAttribute('yc'),10));\r\n\r\n            let counterClockwise = edge.getAttribute('cw') === 'no' ? true : false;\r\n\r\n            let startAngle = vector(pc,ps).slope;\r\n            let endAngle = vector(pc, pe).slope;\r\n\r\n            if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n                endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n            }\r\n\r\n            let r = vector(pc, ps).length;\r\n\r\n            edges.push(new Arc(pc, r, startAngle, endAngle, counterClockwise));\r\n        }\r\n    }\r\n\r\n    return edges;\r\n}\r\n\r\nfunction parsePolygon(polygonsXML) {\r\n    let polygon = new Polygon();\r\n\r\n    // let nedges = parseInt(profile.getAttribute(\"n_edges\"), 10);\r\n\r\n    // Augment Flatten object with style\r\n    let color = polygonsXML.getAttribute(\"color\");\r\n    polygon.style = {\r\n        stroke: color || undefined,\r\n        fill: color || undefined,\r\n        alpha: 1.0\r\n    };\r\n\r\n    // Augment Flatten object with label\r\n    let label = polygonsXML.getAttribute(\"label\");\r\n    polygon.label = label;\r\n\r\n    // Add islands\r\n    let islands = polygonsXML.getElementsByTagName('island');\r\n    for (let island of Array.from(islands)) {\r\n        let edgesXML = island.getElementsByTagName('edge');\r\n        polygon.addFace(parseEdges(edgesXML));\r\n    }\r\n\r\n    // Add holes\r\n    let holes = polygonsXML.getElementsByTagName('hole');\r\n    for (let hole of Array.from(holes)) {\r\n        let edgesXML = hole.getElementsByTagName('edge');\r\n        polygon.addFace(parseEdges(edgesXML));\r\n    }\r\n\r\n    return polygon;\r\n}\r\n\r\nfunction parseSegment(segmentXML) {\r\n    let ps = new Point(parseInt(segmentXML.getAttribute('xs'),10), parseInt(segmentXML.getAttribute('ys'),10));\r\n    let pe = new Point(parseInt(segmentXML.getAttribute('xe'),10), parseInt(segmentXML.getAttribute('ye'),10));\r\n\r\n    let segment = new Segment(ps, pe);\r\n\r\n    // Augment Flatten object with label property\r\n    let label = segmentXML.getAttribute(\"label\");\r\n    segment.label = label;\r\n\r\n    return segment;\r\n}\r\n\r\nfunction parseCurve(curveXML) {\r\n    let ps = new Point(parseInt(curveXML.getAttribute('xs'),10), parseInt(curveXML.getAttribute('ys'),10));\r\n    let pe = new Point(parseInt(curveXML.getAttribute('xe'),10), parseInt(curveXML.getAttribute('ye'),10));\r\n    let pc = new Point(parseInt(curveXML.getAttribute('xc'),10), parseInt(curveXML.getAttribute('yc'),10));\r\n\r\n    let counterClockwise = curveXML.getAttribute('cw') === 'no' ? true : false;\r\n\r\n    let startAngle = vector(pc,ps).slope;\r\n    let endAngle = vector(pc, pe).slope;\r\n\r\n    if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n        endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n    }\r\n\r\n    let r = vector(pc, ps).length;\r\n\r\n    let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n    // Augment Flatten object with label property\r\n    let label = curveXML.getAttribute(\"label\");\r\n    arc.label = label;\r\n\r\n    return arc;\r\n}\r\n\r\nfunction parsePoint(pointXML) {\r\n    let point = new Point(parseInt(pointXML.getAttribute('x'),10), parseInt(pointXML.getAttribute('y'),10));\r\n\r\n    // Augment Flatten object with label property\r\n    let label = pointXML.getAttribute(\"label\");\r\n    point.label = label;\r\n\r\n    return point;\r\n}\r\n\r\nfunction parseImage(imageXML) {\r\n    let img = new Flatten.Image();\r\n    img.center = new Point(parseInt(imageXML.getAttribute('xc'),10), parseInt(imageXML.getAttribute('yc'),10));\r\n    img.width = parseInt(imageXML.getAttribute('width'),10);\r\n    img.height = parseInt(imageXML.getAttribute('height'),10);\r\n    img.uri = imageXML.getAttribute('uri');\r\n    return img;\r\n}\r\n\r\nexport function parseXML(filename, str) {\r\n    let job = new Job();\r\n\r\n    job.filename = filename;\r\n\r\n    let parser = new DOMParser();\r\n    let xmlDoc = parser.parseFromString(str, \"text/xml\");\r\n\r\n    // Parse document title\r\n    let titles = xmlDoc.getElementsByTagName('title');\r\n    if (titles && titles.length > 0) {\r\n        job.title = titles[0].firstChild.nodeValue;          // take the first title if more than one\r\n    }\r\n\r\n    // Parse profiles and add polygons to the job\r\n    let profilesXML = xmlDoc.getElementsByTagName('profile');\r\n    for (let profileXML of Array.from(profilesXML)) {\r\n        let polygon = parsePolygon(profileXML);\r\n        job.profiles.push(polygon);\r\n    }\r\n\r\n    // Parse materials and add polygons to the job\r\n    let materialXML = xmlDoc.getElementsByTagName('material');\r\n    for (let shapeXML of Array.from(materialXML)) {\r\n        let polygon = parsePolygon(shapeXML);\r\n        job.materials.push(polygon);\r\n    }\r\n\r\n    // Parse segments\r\n    let segmentsXML = xmlDoc.getElementsByTagName('segment');\r\n    for (let segmentXML of Array.from(segmentsXML)) {\r\n        let segment = parseSegment(segmentXML);\r\n        job.shapes.push(segment);\r\n    }\r\n\r\n    // Parse segments\r\n    let curvesXML = xmlDoc.getElementsByTagName('curve');\r\n    for (let curveXML of Array.from(curvesXML)) {\r\n        let curve = parseCurve(curveXML);\r\n        job.shapes.push(curve);\r\n    }\r\n\r\n    // Parse points\r\n    let pointsXML = xmlDoc.getElementsByTagName('point');\r\n    for (let pointXML of Array.from(pointsXML)) {\r\n        let point = parsePoint(pointXML);\r\n        job.shapes.push(point);\r\n    }\r\n\r\n    // Parse images\r\n    let imagesXML = xmlDoc.getElementsByTagName('picture');\r\n    for (let imageXML of Array.from(imagesXML)) {\r\n        let image = parseImage(imageXML);\r\n        job.shapes.push(image);\r\n    }\r\n\r\n    return job;\r\n}\r\n","import { Job } from '../models/job';\r\nimport {Point, Segment, Arc, Polygon, Utils, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\n\r\nconst inch2pixels = 10160000;\r\nconst mils2pixels = 10160;\r\nfunction InchToPixels(str) {\r\n    return Math.round(Number(str)*inch2pixels,0);\r\n}\r\nfunction MilsToPixels(str) {\r\n    return Math.round(Number(str)*mils2pixels,0);\r\n}\r\n\r\nfunction parsePolygon(lines, start) {\r\n    let shapes = [];\r\n    let i = start;\r\n    let line = lines[i];\r\n    let terms = line.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe;\r\n    let pc;\r\n    let end_of_face = false;\r\n    while(true) {\r\n        line = lines[i];\r\n        terms = line.split(' ');\r\n        switch (terms[0]) {\r\n            case 'OS':\r\n                pe = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n                shapes.push( new Segment(ps, pe));\r\n\r\n                ps = pe.clone();\r\n                break;\r\n            case 'OC':\r\n                pe = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n                pc = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n\r\n                let cwStr = terms[5];\r\n                let counterClockwise = cwStr === 'Y' ? Flatten.CW : Flatten.CCW; /* sic ! */\r\n\r\n                let startAngle = vector(pc,ps).slope;\r\n                let endAngle = vector(pc, pe).slope;\r\n                if (Utils.EQ(startAngle, endAngle)) {\r\n                    endAngle += 2*Math.PI;\r\n                    counterClockwise = true;\r\n                }\r\n                let r = vector(pc, ps).length;\r\n\r\n                shapes.push(new Arc(pc, r, startAngle, endAngle, counterClockwise));\r\n\r\n                ps = pe.clone();\r\n                break;\r\n            case 'OE':\r\n                end_of_face = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (end_of_face) {\r\n            break;\r\n        }\r\n\r\n        i++;\r\n    }\r\n    return shapes;\r\n}\r\n\r\nfunction parseLine(str, apertures) {\r\n    let terms = str.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n    let segment = new Segment(ps, pe);\r\n    let ap_key = Number(terms[5]);\r\n    let ap_value = apertures[ap_key];\r\n    segment.aperture = ap_value;     // augmentation\r\n    return segment;\r\n}\r\n\r\nfunction parseArc(str, apertures) {\r\n    let terms = str.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n    let pc = new Point( InchToPixels(terms[5]), InchToPixels(terms[6]) );\r\n\r\n    let cwStr = terms[10];\r\n    let counterClockwise = cwStr === 'Y' ? Flatten.CW : Flatten.CCW; /* sic ! */\r\n\r\n    let startAngle = vector(pc,ps).slope;\r\n    let endAngle = vector(pc, pe).slope;\r\n    if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(pc, ps).length;\r\n\r\n    let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n    let ap_key = Number(terms[7]);\r\n    let ap_value = apertures[ap_key];\r\n    arc.aperture = ap_value;     // augmentation\r\n\r\n    return arc;\r\n}\r\n\r\nexport function parseODB(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n    let polygon;\r\n\r\n    let apertures = [];\r\n\r\n    for (let i=0; i < arrayOfLines.length; i++) {\r\n        let line = arrayOfLines[i];\r\n        let terms = line.split(' ');\r\n\r\n        if (terms[0].substr(0,1) === '$') {\r\n            let ap_key = Number(terms[0].substr(1));\r\n            let ap_value = MilsToPixels(terms[1].substr(1));\r\n            apertures[ap_key] = ap_value;\r\n            continue;\r\n        }\r\n\r\n        switch (terms[0]) {\r\n            case 'S':                  // surface started\r\n                polygon = new Polygon();\r\n                let termArr = line.split(' ');\r\n                let polarity = termArr[1];      // consider later\r\n                polygon.polarity = polarity;\r\n                break;\r\n            case 'OB':                  // polygon started\r\n                let start = i;\r\n                let shapes = parsePolygon(arrayOfLines, start);\r\n                polygon.addFace(shapes);\r\n                i = start + shapes.length + 1;\r\n                break;\r\n            case 'SE':     // surface ended\r\n                job.shapes.push(polygon);\r\n                break;\r\n            case 'L':                  // line\r\n                let odbLine = parseLine(line, apertures);\r\n                job.shapes.push(odbLine);\r\n                break;\r\n            case 'A':                  // Arc\r\n                let odbArc = parseArc(line, apertures);\r\n                job.shapes.push(odbArc);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return job;\r\n}","import {Point,Box} from '@flatten-js/core';\r\n\r\nconst pgmResolution = 25.500025;\r\nconst microns2pixels = 400;\r\n// const inch2pixels = 10160;\r\n// const offsetX = 12.322830;\r\n// const offsetY = 8.326776;\r\nconst sizeX = 3.0303;\r\n\r\nfunction toPixels(str) {\r\n    let num = Number(str);\r\n    return Math.round(num*pgmResolution*microns2pixels,0);\r\n}\r\n\r\nexport function parseImage(file) {\r\n    let image = {};          // TODO: to be Flatten.Image\r\n\r\n    let terms = file.name.split('_');\r\n    let yStr = terms[0].substr(1);\r\n    let xStr = terms[1] ? terms[1].substr(1) : undefined;\r\n\r\n    let x = isNaN(xStr) ? 0 : toPixels(xStr) + 90000;\r\n    let y = isNaN(yStr) ? 0 : toPixels(yStr) - 40000;\r\n\r\n    image.center = new Point(x,y);\r\n    image.width = sizeX*microns2pixels*1000;    // 2 mm\r\n    image.box = new Box(\r\n        image.center.x - image.width/2,\r\n        image.center.y - image.width/2,\r\n        image.center.x + image.width/2,\r\n        image.center.y + image.width/2,\r\n    );\r\n\r\n    return image;\r\n}","import { Job } from '../models/job';\r\nimport {point} from '@flatten-js/core';\r\n\r\nconst micron2pixels = 400;\r\nfunction micronToPixels(str) {\r\n    return Math.round(Number(str)*micron2pixels,0);\r\n}\r\n\r\nexport function parseCSV(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n\r\n    for (let i = 0; i < arrayOfLines.length; i++) {\r\n        let line = arrayOfLines[i];\r\n        let terms = line.split(',');\r\n\r\n        let px = micronToPixels(terms[0]);\r\n        let py = micronToPixels(terms[1]);\r\n        let nx = Number(terms[2]);\r\n        let ny = Number(terms[3]);\r\n        let shape = point(px,py);\r\n        shape.nx = nx;\r\n        shape.ny = ny;\r\n        job.shapes.push(shape)\r\n    }\r\n\r\n    return job\r\n}","import { Job } from '../models/job';\r\nimport {Parser} from './parser';\r\n\r\nexport function parseTXT(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let parser = new Parser();\r\n\r\n    let shapesArray = parser.parse(str);\r\n\r\n    if (shapesArray.length > 0) {\r\n        for (let shape of shapesArray) {\r\n            job.shapes.push(shape)\r\n        }\r\n    }\r\n\r\n    return job\r\n}","import * as ActionTypes from \"../actionTypes\";\r\nimport * as appActions from \"../actions/appActions\";\r\nimport Layers from '../../models/layers';\r\nimport Model from \"../../models/model\";\r\nimport { parseXML } from '../../dataParsers/parserXML';\r\nimport { parseODB } from \"../../dataParsers/parserODB\";\r\nimport { parseImage } from \"../../dataParsers/parsePGM\";\r\nimport { parseCSV } from \"../../dataParsers/parseCSV\";\r\nimport { parseTXT } from \"../../dataParsers/parseTXT\";\r\nimport { parseJSON } from \"../../dataParsers/parseJSON\";\r\nimport { parseFlighta } from \"../../dataParsers/parseFlighta\";\r\n\r\n// Closure to capture file information and parameters\r\nconst readAsText = (reader, file, stage, layers, dispatch, files) => {\r\n\r\n    let promise = new Promise( (resolve, reject) => {\r\n        reader.onload = (function(theFile, stage, layers, dispatch, files, resolve, reject) {\r\n            return (event) => {\r\n                let string = event.target.result;\r\n\r\n                let namesplitted = theFile.name.split('.');\r\n                let extension = namesplitted[namesplitted.length-1];\r\n                let job;\r\n                if (extension === 'xml') {\r\n                    job = parseXML(theFile.name, string);\r\n                }\r\n                else if (extension === 'csv') {\r\n                    job = parseCSV(theFile.name, string);\r\n                }\r\n                else if (extension === 'txt') {\r\n                    job = parseTXT(theFile.name, string);\r\n                }\r\n                else if (extension === 'json') {\r\n                    job = parseJSON(theFile.name, string);\r\n                }\r\n                else if (extension === 'cdbg') {\r\n                    job = parseFlighta(theFile.name, string);\r\n                }\r\n                else {\r\n                    let arrayOfLines = string.match(/[^\\r\\n]+/g);\r\n                    if (arrayOfLines[0].length === 1 && arrayOfLines[0] === \"N\") {\r\n                        job = parseFlighta(theFile.name, string);\r\n                    }\r\n                    else {\r\n                        job = parseODB(theFile.name, string);\r\n                    }\r\n                }\r\n                let layer = Layers.newLayer(stage, layers);\r\n                if (theFile.name !== \"\") {\r\n                    layer.name = theFile.name;\r\n                }\r\n                layer.title = job.title;\r\n\r\n                for (let polygon of job.profiles) {\r\n                    if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n                        // let watch = undefined; //  parser.parseToWatchArray(string);\r\n                        // let shape = new Shape(polygon, stage, polygon.style, watch);\r\n                        let shape = new Model(polygon, undefined, polygon.label);\r\n\r\n                        layer.add(shape);\r\n                    }\r\n                }\r\n\r\n                for (let polygon of job.materials) {\r\n                    if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n                        // let watch = undefined; //  parser.parseToWatchArray(string);\r\n                        // let shape = new Shape(polygon, stage, polygon.style, watch);\r\n                        let shape = new Model(polygon, undefined, polygon.label);\r\n\r\n                        layer.add(shape);\r\n                    }\r\n                }\r\n\r\n                for (let shape of job.shapes) {\r\n                    let model = new Model(shape, undefined, shape.label);\r\n                    layer.add(model);\r\n                }\r\n\r\n                // layers.push(layer);\r\n\r\n                if (theFile === files[0]) {\r\n                    Layers.setAffected(layers, layer);\r\n                    layer.color = Layers.getNextColor(layers);\r\n                    layer.displayed = true;\r\n                    dispatch({\r\n                        type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                        stage: stage,\r\n                        shape: layer\r\n                    });\r\n                }\r\n                dispatch({\r\n                    type: ActionTypes.ADD_NEW_LAYER,\r\n                    layer: layer\r\n                });\r\n\r\n                dispatch({\r\n                    type: ActionTypes.ASYNC_OPERATION_ENDED\r\n                });\r\n\r\n                resolve(true);\r\n            }\r\n        })(file, stage, layers, dispatch, files, resolve, reject);\r\n\r\n        reader.readAsText(file);\r\n    });\r\n\r\n\r\n    dispatch({\r\n        type: ActionTypes.ASYNC_OPERATION_STARTED\r\n    });\r\n\r\n    return promise\r\n};\r\n\r\nconst readAsImage = (reader, file, stage, layers, dispatch, files) => {\r\n    let promise = new Promise( (resolve, reject) => {\r\n        reader.addEventListener(\"load\", function () {\r\n            // let image = {};          // TODO: to be Flatten.Image\r\n            // image.uri = this.result;\r\n            // image.center = new Flatten.Point(0,0);\r\n            // image.width = 2*400000;    // 2 micron\r\n            // image.box = new Flatten.Box(\r\n            //     image.center.x - image.width/2,\r\n            //     image.center.y - image.width/2,\r\n            //     image.center.x + image.width/2,\r\n            //     image.center.y + image.width/2,\r\n            // );\r\n\r\n            let image = parseImage(file);\r\n            image.uri = this.result;\r\n\r\n            let model = new Model(image);\r\n\r\n            let layer = Layers.newLayer(stage, layers);\r\n            if (file.name !== \"\") {\r\n                layer.name = file.name;\r\n            }\r\n\r\n            layer.add(model);\r\n\r\n            // layers.push(layer);\r\n\r\n            if (file === files[0]) {\r\n                Layers.setAffected(layers, layer);\r\n                layer.color = Layers.getNextColor(layers);\r\n                layer.displayed = true;\r\n                dispatch({\r\n                    type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                    stage: stage,\r\n                    shape: layer\r\n                });\r\n            }\r\n\r\n            dispatch({\r\n                type: ActionTypes.ADD_NEW_LAYER,\r\n                layer: layer\r\n            });\r\n\r\n            dispatch({\r\n                type: ActionTypes.ASYNC_OPERATION_ENDED\r\n            });\r\n\r\n            resolve(true);\r\n        }, false);\r\n\r\n        reader.readAsDataURL(file);\r\n    });\r\n\r\n    return promise;\r\n};\r\n\r\nconst readFile = (file, stage, layers, dispatch, files) => {\r\n    if (file.type !== \"\" &&\r\n        !(file.type.match('text.*') || file.type.match('application.*') ||\r\n            file.type.match('image.*')) ) return;   // validate type is text\r\n\r\n    let reader = new FileReader();\r\n\r\n    if (file.type.match('text.*') || file.type.match('application.*') || file.name.match('features*') || file.name.includes('.cdbg')) {\r\n        return readAsText(reader, file, stage, layers, dispatch, files);\r\n    }\r\n\r\n    else if (file.type.match('image.*')) {\r\n        return readAsImage(reader, file, stage, layers, dispatch, files);\r\n    }\r\n\r\n    return Promise.reject(\"not supported file\");\r\n};\r\n\r\nexport const readFiles = (files, stage, layers) => {\r\n    return (dispatch) => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n\r\n        // Load and parse files\r\n        // in MS Edge FilesList is not array. It is indexable but not iterable\r\n        // for (let i=0; i < action.files.length; i++) {\r\n        //     readFile(action.files[i], stage, layers, dispatch, action.files);\r\n        // }\r\n        let promises = [];\r\n        for (let file of Array.from(files)) {\r\n            let promise = readFile(file, stage, layers, dispatch, files);\r\n            promises.push(promise);\r\n        }\r\n\r\n        return Promise.all(promises)\r\n            .then( (values) => {\r\n                dispatch(filesUploadCompleted(values));\r\n            })\r\n\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const filesUploadCompleted = (values) => {\r\n    return {\r\n        type: ActionTypes.FILES_UPLOAD_COMPLETED,\r\n        uploadedFiles: values\r\n    }\r\n};\r\n\r\nexport const initUploadState = () => {\r\n    return {\r\n        type: ActionTypes.INITIALIZE_UPLOAD_STATE\r\n    }\r\n};\r\n\r\nexport default readFiles;\r\n\r\n","import {Component, createRef} from 'react';\r\nimport ModalPopup from \"../UI/ModalPopup/ModalPopup\";\r\nimport Snackbar from \"../UI/Snackbar/Snackbar\";\r\nimport { connect } from 'react-redux';\r\nimport classes from \"./UploadPopup.module.css\";\r\nimport * as actions from '../../store/actions/upload';\r\n\r\nclass UploadPopup extends Component {\r\n    inputElement = createRef();\r\n    clipboardWindowRef = createRef();\r\n\r\n    clipboardWindowWidth = 0;\r\n    clipboardWindowHeight = 0;\r\n\r\n    state = {\r\n        dragOver:false,\r\n        clipboardData: \"\"\r\n    };\r\n\r\n    openFilesButtonClicked = () => this.inputElement.current.click();\r\n\r\n    pasteHandler = (ev) => {\r\n        ev.stopPropagation();\r\n        this.props.onPaste(ev.clipboardData);\r\n        let item = ev.clipboardData.items[0];\r\n        item.getAsString( string =>\r\n            this.setState({\r\n                clipboardData: string\r\n            })\r\n        );\r\n    };\r\n\r\n    dropHandler = (ev) => {\r\n        // Prevent default behavior (Prevent file from being opened)\r\n        ev.preventDefault();\r\n\r\n        let files = [];\r\n\r\n        if (ev.dataTransfer.items) {\r\n            // Use DataTransferItemList interface to access the file(s)\r\n            for (let i = 0; i < ev.dataTransfer.items.length; i++) {\r\n                // If dropped items aren't files, reject them\r\n                if (ev.dataTransfer.items[i].kind === 'file') {\r\n                    let file = ev.dataTransfer.items[i].getAsFile();\r\n                    files.push(file);\r\n                }\r\n            }\r\n        } else {\r\n            // Use DataTransfer interface to access the file(s)\r\n            files = ev.dataTransfer.files;\r\n        }\r\n\r\n        this.props.readFiles(files, this.props.stage, this.props.layers);\r\n        // this.fileDropHandler(files);\r\n        this.setState({dragOver:false});\r\n    };\r\n\r\n    dragOverHandler = (ev) => {\r\n        // Prevent default behavior (Prevent file from being opened)\r\n        ev.preventDefault();\r\n        this.setState({dragOver:true})\r\n    };\r\n\r\n    dragLeaveHandler = (ev) => {\r\n        ev.preventDefault();\r\n        this.setState({dragOver:false})\r\n    };\r\n\r\n    filesSelectedHandler = (event) => {\r\n        if (!(File && FileReader && FileList)) return;\r\n        let files = event.target.files; // FileList object\r\n        this.props.readFiles(files, this.props.stage, this.props.layers);\r\n    };\r\n\r\n    closePopup = () => {\r\n        this.props.initUploadState();\r\n        this.props.closePopup();\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.uploadCompleted) {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.clipboardWindowWidth = this.clipboardWindowRef.current.clientWidth;\r\n        this.clipboardWindowHeight = this.clipboardWindowRef.current.clientHeight;\r\n    }\r\n\r\n    render() {\r\n        let pX = this.state.clipboardData === \"\" ? 30 : 0;\r\n        let pY = this.state.clipboardData === \"\" ? 60 : 0;\r\n        let snackbarMessage = \"\";\r\n\r\n        if (this.state.clipboardData !== \"\") snackbarMessage = \"Added 1 layer\";\r\n\r\n        if (this.props.uploadCompleted && this.props.uploadedFiles.length > 0) {\r\n            let newFilesNum = this.props.uploadedFiles.length;\r\n            if (newFilesNum === 1) snackbarMessage = \"1 layer added\";\r\n            if (newFilesNum > 1) snackbarMessage = `${newFilesNum} layers added`;\r\n        }\r\n\r\n        return this.props.showPopup ? (\r\n            <ModalPopup\r\n                showPopup={this.props.showPopup}\r\n                closePopup={this.closePopup}\r\n                header=\"Open files\"\r\n            >\r\n                <div className={classes.UploadPopup}>\r\n                    <div className={this.state.dragOver ?\r\n                        `${classes.UploadTarget} ${classes.UploadTargetDragOver}` :\r\n                        `${classes.UploadTarget} ${classes.UploadTargetDragLeave}`}\r\n                         style={{paddingLeft: pX, paddingRight: pX, paddingTop: pY, paddingBottom: pY}}\r\n                         onPaste={this.pasteHandler}\r\n                         onDrop={this.dropHandler}\r\n                         onDragOverCapture={this.dragOverHandler}\r\n                         onDragLeaveCapture={this.dragLeaveHandler}\r\n                         ref={this.clipboardWindowRef}\r\n                    >\r\n                        {\r\n                            this.state.clipboardData === \"\" ?\r\n                                <span>Drop files here</span> :\r\n                                <p style={{width:this.clipboardWindowWidth, height:this.clipboardWindowHeight}}>\r\n                                    {this.state.clipboardData}\r\n                                </p>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <h2>or</h2>\r\n\r\n                    <button onClick={this.openFilesButtonClicked}>\r\n                        Use system Open Dialog\r\n                    </button>\r\n\r\n                    <input style={{display: \"none\"}}\r\n                           type=\"file\" ref={this.inputElement} name=\"files[]\" multiple\r\n                           onChange={this.filesSelectedHandler}\r\n                    />\r\n\r\n                    { snackbarMessage !== \"\" ?\r\n                        <Snackbar\r\n                            onAnimationEnd = {this.props.initUploadState}\r\n                            message={snackbarMessage} /> : null\r\n                    }\r\n\r\n                </div>\r\n            </ModalPopup>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage,\r\n        uploadCompleted: state.upload.uploadCompleted,\r\n        uploadedFiles: state.upload.uploadedFiles\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        readFiles: (files, stage, layers) => dispatch(actions.readFiles(files, stage, layers)),\r\n        initUploadState: () => dispatch(actions.initUploadState())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadPopup);\r\n","import {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as cloudActions from '../../store/actions/cloudStorageActions';\r\n\r\nclass CloudDocument extends Component {\r\n    state={\r\n        done:false\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.stage && !this.state.done) {\r\n            this.props.fetchDocumentFromDatabase(this.props.stage, this.props.match.params.id);\r\n            this.setState({done:true});\r\n        }\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({app}) => {\r\n    return {\r\n        stage: app.stage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchDocumentFromDatabase: (stage, id) => dispatch(cloudActions.fetchDocumentFromDatabase(stage, id)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CloudDocument);\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ToolbarComponent from '../../components/MainComponent/ToolbarComponent/ToolbarComponent';\r\nimport CanvasComponent from '../../components/MainComponent/CanvasComponent/CanvasComponent';\r\nimport StatusComponent from '../../components/Layout/StatusComponent/StatusComponent';\r\n\r\nimport StageComponent from \"../../components/MainComponent/GraphicsComponent/stageComponent\";\r\nimport LayersComponent from '../../components/MainComponent/GraphicsComponent/layersComponent';\r\n\r\nimport * as actions from '../../store/actions/appActions';\r\nimport * as layerActions from \"../../store/actions/layersActions\";\r\nimport * as cloudActions from '../../store/actions/cloudStorageActions';\r\n\r\nimport Layers from '../../models/layers';\r\nimport MeasurePointsTool from '../../tools/measurePointsTool';\r\nimport MeasureShapesTool from \"../../tools/measureShapesTool\";\r\nimport DisplayCoordsTool from \"../../tools/displayCoordsTool\";\r\n\r\nimport AboutPopup from \"../../components/AboutPopup/AboutPopup\";\r\nimport DownloadPopup from \"../../components/DownloadPopup/DownloadPopup\";\r\nimport UploadPopup from '../../components/UploadPopup/UploadPopup';\r\nimport CloudDocument from '../../components/Constructions/CloudDocument';\r\n\r\nimport styles from './MainComponent.module.css';\r\n\r\nclass MainComponent extends Component {\r\n    setHomeView = () => {\r\n        let layer = Layers.getAffected(this.props.layers);\r\n        if (!layer) return;\r\n        this.props.setHomeView(this.props.stage, layer);\r\n        this.forceUpdate();       // ??? unclear why on Home button click not updated\r\n    };\r\n\r\n    onSaveDocumentButtonClicked = () => {\r\n        if (this.props.layers.length === 0) return;   // nothing to save\r\n        // this.props.stage.img.crossOrigin=\"anonymous\";\r\n        let dataURL = null;\r\n        try {\r\n            dataURL = this.props.stage.toDataURL();\r\n        }\r\n        catch(e) {\r\n            console.log(e)\r\n        }\r\n        let payload = {\r\n            name: this.props.document.name === \"\" ?\r\n                cloudActions.getNewName(this.props.documentsList) : this.props.document.name,\r\n            dataURL: dataURL,\r\n            lastUpdated: new Date().toLocaleDateString() + \" \" + new Date().toLocaleTimeString(),\r\n            // token: this.props.token,\r\n            userId: this.props.userId\r\n        };\r\n\r\n        if (this.props.document.id) {\r\n            this.props.updateDocumentInDatabase(this.props.document.id, payload, this.props.layers);\r\n        }\r\n        else {\r\n            this.props.addDocumentToDatabase(payload, this.props.layers, this.props.history);\r\n        }\r\n    };\r\n\r\n    clearCurrentDocument = () => {\r\n        this.props.clearCurrentDocument();\r\n        this.props.clearAllLayers();\r\n        this.props.history?.push(\"/\");\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        // let ctrl = e.ctrlKey;\r\n        if (e.target.id !== \"mainCanvas\")\r\n            return;\r\n        switch (e.code) {\r\n            case \"KeyH\":\r\n                this.setHomeView();\r\n                break;\r\n\r\n            case \"KeyW\":\r\n                this.props.toggleWidthMode();     // toggle width On/Off in graphics model\r\n                break;\r\n\r\n            case \"KeyE\":\r\n                this.props.toggleDisplayVertices();  // toggle vertices On/Off\r\n                break;\r\n\r\n            case \"ArrowRight\":\r\n                break;\r\n\r\n            case \"ArrowLeft\":\r\n                break;\r\n            case \"ArrowUp\":\r\n                break;\r\n            case \"ArrowDown\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    handlePaste = (event) => {\r\n        if (event.currentTarget.activeElement.tagName === 'CANVAS') {\r\n            event.stopPropagation();\r\n            this.props.pasteDataFromBuffer(event.clipboardData)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onresize = this.props.resizeStage;\r\n        // Keyboard event\r\n        // var _keydown = _.throttle(this.keydown, 100);\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n        // var _keyup = _.throttle(this.keyup, 500);\r\n        document.addEventListener('keyup', this.handleKeyUp);\r\n\r\n        document.addEventListener('paste', this.handlePaste);\r\n\r\n        // if (this.props.document.id === undefined) {\r\n        //     this.props.history.push(\"/\");\r\n        // }\r\n        // if (this.props.document.id !== undefined) {\r\n        //     this.props.history.push(\"/documents/\" + this.props.document.id)\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        let displayCoordsTool = this.props.stage ? (\r\n            <DisplayCoordsTool\r\n                key=\"displayCoordinatedTool\"\r\n                stage={this.props.stage}\r\n                units={this.props.units}\r\n                divisor={this.props.divisor}\r\n                decimals={this.props.decimals}\r\n                coordX={this.props.mouse.x}\r\n                coordY={this.props.mouse.y}\r\n            />\r\n        ) : null;\r\n\r\n        let measurePointsTool = this.props.measurePointsActive ? <MeasurePointsTool /> : null;\r\n\r\n        let measuredLayersDisplayed = this.props.measureShapesTool.firstMeasuredShape &&\r\n            this.props.measureShapesTool.secondMeasuredShape &&\r\n            this.props.measureShapesTool.firstMeasuredLayer.displayed &&\r\n            this.props.measureShapesTool.secondMeasuredLayer.displayed;\r\n\r\n        let measureShapesTool = this.props.measureShapesTool.distance &&\r\n        this.props.measureShapesTool.shortestSegment && measuredLayersDisplayed ? (\r\n            <MeasureShapesTool\r\n                key=\"MeasureShapesTool\"\r\n                stage={this.props.stage}\r\n                firstMeasuredShape={this.props.measureShapesTool.firstMeasuredShape}\r\n                secondMeasuredShape={this.props.measureShapesTool.secondMeasuredShape}\r\n                firstMeasuredLayer={this.props.measureShapesTool.firstMeasuredLayer}\r\n                secondMeasuredLayer={this.props.measureShapesTool.secondMeasuredLayer}\r\n                distance={this.props.measureShapesTool.distance}\r\n                shortestSegment={this.props.measureShapesTool.shortestSegment}\r\n                divisor={this.props.divisor}\r\n                decimals={this.props.decimals}\r\n            />\r\n        ) : null;\r\n\r\n        return (\r\n            <main className={styles[\"Main-content\"]}>\r\n                <ToolbarComponent\r\n                    measurePointsActive={this.props.measurePointsActive}\r\n                    units={this.props.units}\r\n                    showSkeletonRecognitionButton={this.props.showSkeletonRecognitionButton}\r\n                    // onFileSelected={this.handleFileSelect}\r\n                    onShowUploadPopupPressed={this.props.toggleUploadPopup}\r\n\r\n                    onLayerListButtonClicked={this.props.toggleLayerList}\r\n                    onSortLayersButtonClicked={this.props.sortLayersList}\r\n                    onShowDownloadPopupPressed={this.props.toggleDownloadPopup}\r\n                    onClearAllButtonClicked={this.clearCurrentDocument}\r\n\r\n                    onHomeButtonPressed={this.setHomeView}\r\n                    onPanByDragPressed={this.props.togglePanByDrag}\r\n                    onMeasurePointsButtonPressed={this.props.toggleMeasureBetweenPoints}\r\n                    onMeasureBetweenShapesButtonPressed={this.props.toggleMeasureBetweenShapes}\r\n                    onToggleWidthModePressed={this.props.toggleWidthMode}\r\n                    onToggleVerticesPressed={this.props.toggleDisplayVertices}\r\n                    onToggleLabelsPressed={this.props.toggleDisplayLabels}\r\n                    onShowAboutPopupPressed={this.props.toggleAboutPopup}\r\n                    onSkeletonRecognitionButtonPressed={this.props.applySkeletonRecognition}\r\n                    onUnitClicked={this.props.toggleUnits}\r\n                    onSaveDocumentButtonClicked={this.onSaveDocumentButtonClicked}\r\n                />\r\n\r\n                <CanvasComponent />\r\n\r\n                {this.props.stage ? (\r\n                    <StageComponent\r\n                        stage={this.props.stage}\r\n                        onStageUnmounted={this.props.destroyStage}\r\n                    >\r\n                        <LayersComponent\r\n                            layers={this.props.layers}\r\n                            widthOn={this.props.widthOn}\r\n                            displayVertices={this.props.displayVertices}\r\n                            zoomFactor={this.props.zoomFactor}\r\n                        />\r\n\r\n                        {displayCoordsTool}\r\n                        {measurePointsTool}\r\n                        {measureShapesTool}\r\n                    </StageComponent>) : null }\r\n\r\n                <StatusComponent />\r\n\r\n                { this.props.showAboutPopup ?\r\n                    <AboutPopup\r\n                        showAboutPopup={this.props.showAboutPopup}\r\n                        toggleAboutPopup={this.props.toggleAboutPopup}\r\n                        title={this.props.title}\r\n                        version={this.props.version}\r\n                        build={this.props.build}\r\n                    /> : null}\r\n\r\n\r\n                { this.props.showDownloadPopup ?\r\n                    <DownloadPopup\r\n                        showPopup={this.props.showDownloadPopup}\r\n                        closePopup={this.props.toggleDownloadPopup}\r\n                        title=\"Download document\"\r\n                        layers={this.props.layers}\r\n                    /> : null }\r\n\r\n                {this.props.showUploadPopup ?\r\n                    <UploadPopup\r\n                        showPopup={this.props.showUploadPopup}\r\n                        closePopup={this.props.toggleUploadPopup}\r\n                        title=\"Upload files\"\r\n                        onPaste={this.props.pasteDataFromBuffer}\r\n                    /> : null}\r\n\r\n                <Route path=\"/documents/:id\" component={CloudDocument}/>\r\n\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stage: state.app.stage,\r\n        title: state.app.title,\r\n        version: state.app.version,\r\n        build: state.app.build,\r\n        displayVertices: state.app.displayVertices,\r\n        displayLabels: state.app.displayLabels,\r\n        widthOn: state.app.widthOn,\r\n        zoomFactor: state.app.zoomFactor,\r\n        units: state.app.units,\r\n        showSkeletonRecognitionButton: state.app.showSkeletonRecognitionButton,\r\n        divisor: state.app.divisor,\r\n        decimals: state.app.decimals,\r\n        measurePointsActive: state.app.measurePointsActive,\r\n        showAboutPopup: state.app.showAboutPopup,\r\n        showDownloadPopup: state.app.showDownloadPopup,\r\n        showUploadPopup: state.app.showUploadPopup,\r\n        layers: state.layers,\r\n        mouse: state.mouse,\r\n        measureShapesTool: state.measureShapesTool,\r\n\r\n        document: state.cloudStorage.document,\r\n        documentsList: state.cloudStorage.documentsList,\r\n        // onManageCloudStorageButtonClicked: ownProps.onManageCloudStorageButtonClicked\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        resizeStage: () => dispatch(actions.resizeStage()),\r\n        destroyStage: () => dispatch(actions.destroyStage()),\r\n        setHomeView: (stage, shape) => dispatch(actions.setHomeView(stage, shape)),\r\n        toggleUnits: () => dispatch(actions.toggleUnits()),\r\n        toggleWidthMode: () => dispatch(actions.toggleWidthMode()),\r\n        toggleDisplayVertices: () => dispatch(actions.toggleDisplayVertices()),\r\n        toggleDisplayLabels: () => dispatch(actions.toggleDisplayLabels()),\r\n        toggleAboutPopup: () => dispatch(actions.toggleAboutPopup()),\r\n        toggleMeasureBetweenPoints: () => dispatch(actions.toggleMeasureBetweenPoints()),\r\n        toggleMeasureBetweenShapes: () => dispatch(actions.toggleMeasureBetweenShapes()),\r\n        togglePanByDrag: () => dispatch(actions.togglePanByDrag()),\r\n        toggleLayerList: () => dispatch(actions.toggleLayerList()),\r\n        toggleDownloadPopup: () => dispatch(actions.toggleDownloadPopup()),\r\n        toggleUploadPopup: () => dispatch(actions.toggleUploadPopup()),\r\n        applySkeletonRecognition: () => dispatch(actions.applySkeletonRecognition()),\r\n        pasteDataFromBuffer: (clipboardData) => dispatch(actions.pasteDataFromBuffer(clipboardData)),\r\n\r\n        sortLayersList: () => dispatch(layerActions.sortLayers()),\r\n        clearAllLayers: () => dispatch(layerActions.deleteAllLayers()),\r\n\r\n        addDocumentToDatabase: (payload, layers, history) => dispatch(cloudActions.addDocumentToDatabase(payload, layers, history)),\r\n        updateDocumentInDatabase: (id, payload, layers) => dispatch(cloudActions.updateDocumentInDatabase(id, payload, layers)),\r\n        clearCurrentDocument: () => dispatch(cloudActions.clearCurrentDocument())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent);\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nimport styles from './LayerListToolbar.module.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\nconst LayerListToolbar = (props) => {\r\n    return (\r\n        <div className={styles[\"Layer-list-toolbar\"]}>\r\n            <Button type=\"trigger\" title=\"Edit selected layer's name and info\" iconName='pencil-alt'\r\n                    onClick={props.onEditLayerButtonClicked}\r\n            />\r\n\r\n            <Button type=\"trigger\" title=\"Delete selected layer\" iconName='trash-alt'\r\n                    onClick={props.onDeleteLayerButtonClicked}\r\n            />\r\n\r\n\r\n            {/*<button title=\"Add layer\" onClick={props.onAddLayerButtonClicked}>*/}\r\n            {/*    <FontAwesome*/}\r\n            {/*        name='plus'*/}\r\n            {/*        size='2x'*/}\r\n            {/*        style={{color: \"grey\"}}*/}\r\n            {/*    />*/}\r\n            {/*</button>*/}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LayerListToolbar;\r\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nimport styles from './LayerEditForm.module.css';\r\nimport {useEffect, useRef} from \"react\";\r\n\r\nconst LayerEditForm = (props) => {\r\n    const layerNameRef = useRef();\r\n    const layerTitleRef = useRef();\r\n\r\n    let onSubmitLayerEditForm = (ev) => {\r\n        if (!ev)\r\n            return;\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n        const name = layerNameRef.current.value.trim();\r\n        let title = layerTitleRef.current.value.trim();\r\n        let newLayer = { ...props.layer, name: name, title: title};\r\n        props.onSubmitLayerEditForm(newLayer);\r\n        return;\r\n    };\r\n\r\n    let setFocus = (ev) => {\r\n        ev.stopPropagation();\r\n        ev.target.focus();\r\n    };\r\n\r\n    let onCancelLayerEditForm = (ev) => {\r\n        props.onEscapeLayerEditForm();\r\n    };\r\n\r\n    let onMouseMoveHandler = (ev) => {\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    useEffect( () => {\r\n        layerNameRef.current.focus();\r\n    },[layerNameRef])\r\n\r\n    return (\r\n        <form className={styles[\"Layer-edit-form\"]}\r\n              onSubmit={onSubmitLayerEditForm}\r\n              onMouseMove={onMouseMoveHandler}\r\n        >\r\n            <article>\r\n                <label htmlFor=\"layerName\">Name:</label>\r\n                <input type=\"text\" id=\"layerName\" ref={layerNameRef} defaultValue={props.layer.name}\r\n                       onClick={setFocus}/>\r\n            </article>\r\n            <article>\r\n\r\n                <textarea id=\"layerTitle\" ref={layerTitleRef} cols=\"70\" rows=\"3\" defaultValue={props.layer.title}\r\n                          onClick={setFocus}>\r\n            </textarea>\r\n            </article>\r\n            <input type=\"submit\" style={{display:\"none\"}}/>\r\n            <button onClick={onCancelLayerEditForm}>Cancel</button>\r\n            <button onClick={(ev) => onSubmitLayerEditForm(ev.target.parent)}>OK</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default LayerEditForm;\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport ModalPopup from \"../../UI/ModalPopup/ModalPopup\";\r\nimport LayerEditForm from \"../LayerEditForm/LayerEditForm\";\r\nimport styles from './LayerListElement.module.css';\r\n\r\nclass LayerListElement extends Component {\r\n    componentDidUpdate() {\r\n        if (document.activeElement.nodeName === \"CANVAS\")\r\n            return;\r\n        let elem = this.refs.layerName;\r\n        if (this.props.layer.affected) {\r\n            elem.focus();\r\n        }\r\n    }\r\n\r\n    rgba(hex, opacity) {\r\n        let r, g, b, percent;\r\n        if (hex) {\r\n            hex = hex.replace('#', '');\r\n            r = parseInt(hex.substring(0, 2), 16);\r\n            g = parseInt(hex.substring(2, 4), 16);\r\n            b = parseInt(hex.substring(4, 6), 16);\r\n            percent = opacity;\r\n        }\r\n        else {\r\n            r = 147;\r\n            g = 128;\r\n            b = 108;\r\n            percent = 0;\r\n        }\r\n        let result = `rgba(${r},${g},${b},${percent / 100})`;\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        // let style = this.props.layer.displayed ?\r\n        //     styleSheet.displayed : styleSheet.undisplayed;\r\n\r\n        let displayed = this.props.layer.displayed ? \"Layer-displayed\" : \"Layer-undisplayed\";\r\n        let color = displayed ? this.rgba(this.props.layer.color, 100) : this.rgba();\r\n        let bgcolor = displayed ? this.rgba(this.props.layer.color, 30) : this.rgba();\r\n        let alpha = this.props.layer.affected ? 1 : 0;\r\n        let layerNameOpacity = this.props.layer.shapes.length === 0 ? 0.6 : 1.0;\r\n        return [\r\n            <li key={1}\r\n                className={styles.Layer}\r\n                onClick={this.props.onLayerClicked}\r\n                onDoubleClick={this.props.onLayerDoubleClicked}>\r\n\r\n                <div className={styles.LayerSelectionBox}\r\n                     onClick={this.props.onAffectedBoxClicked}\r\n                >\r\n                    <h4 className={styles.LayerSelectionMark}\r\n                        style={{opacity: alpha, color: color}}>\r\n                        ✓\r\n                    </h4>\r\n                </div>\r\n\r\n                <div className={styles.LayerNameBox}\r\n                     style={{backgroundColor: bgcolor, opacity: layerNameOpacity}}>\r\n                    <h4 ref=\"layerName\"\r\n                        title={this.props.layer.title}\r\n                        tabIndex='1'\r\n                    >\r\n                        {this.props.layer.name}\r\n                    </h4>\r\n                </div>\r\n\r\n            </li>,\r\n\r\n            <ModalPopup\r\n                key={2}\r\n                showPopup={this.props.layer.edited}\r\n                closePopup={this.props.onEscapeLayerEditForm}\r\n                header=\"Layer properties\"\r\n            >\r\n                <LayerEditForm\r\n                    layer={this.props.layer}\r\n                    onSubmitLayerEditForm={this.props.onSubmitLayerEditForm}\r\n                    onEscapeLayerEditForm={this.props.onEscapeLayerEditForm}\r\n                />\r\n            </ModalPopup>\r\n        ]\r\n    }\r\n}\r\n\r\nexport default LayerListElement;\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport LayerListToolbar from \"../../components/LayersList/LayerListToolbar/LayerListToolbar\";\r\nimport LayerListElement from '../../components/LayersList/LayerListElement/LayerListElement';\r\nimport * as actions from '../../store/actions/layersActions';\r\nimport { connect } from 'react-redux';\r\nimport styles from './LayersList.module.css';\r\n\r\nclass LayersList extends Component {\r\n    height = 0;\r\n\r\n    handleKeyDown = (e) => {\r\n        // e.stopPropagation();\r\n        // e.preventDefault();\r\n\r\n        if (e.target.parentElement.parentElement &&\r\n            e.target.parentElement.parentElement.parentElement &&\r\n            e.target.parentElement.parentElement.parentElement.id &&\r\n            e.target.parentElement.parentElement.parentElement.id === \"layersList\") {\r\n\r\n\r\n            switch (e.code) {\r\n                case \"ArrowRight\":\r\n                case \"ArrowDown\":\r\n                    this.props.setAffectedNextLayer();\r\n                    break;\r\n                case \"ArrowLeft\":\r\n                case \"ArrowUp\":\r\n                    this.props.setAffectedPrevLayer();\r\n                    break;\r\n                /* tab does not work properly\r\n            case \"Tab\":\r\n                if (e.shiftKey) {\r\n                    this.dispatch({\r\n                        type: ActionTypes.LAYERS_LIST_ARROW_UP_PRESSED\r\n                    });\r\n                }\r\n                else {\r\n                    this.dispatch({\r\n                        type: ActionTypes.LAYERS_LIST_ARROW_DOWN_PRESSED\r\n                    });\r\n                }\r\n                break;\r\n                */\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    onLayerListClicked = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Keyboard event\r\n        // var _keydown = _.throttle(this.keydown, 100);\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n        // var _keyup = _.throttle(this.keyup, 500);\r\n        // document.addEventListener('keyup', this.handleKeyUp);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.height = this.refs.layersComponent.clientHeight;\r\n    }\r\n\r\n    render() {\r\n        const style = this.props.showLayerList ? styles[\"App-layers-displayed\"] : styles[\"App-layers\"];\r\n        return (\r\n            <div className={style}\r\n                 ref=\"layersComponent\"\r\n                 onClick={this.onLayerListClicked}\r\n            >\r\n                {/*<h5>Layers</h5>*/}\r\n                <LayerListToolbar\r\n                    // onAddLayerButtonClicked={() => this.props.onAddLayerButtonClicked(this.props.stage)}\r\n                    onEditLayerButtonClicked={this.props.onEditLayerButtonClicked}\r\n                    onDeleteLayerButtonClicked={this.props.onDeleteLayerButtonClicked}\r\n                    onSortLayersButtonClicked={this.props.onSortLayersButtonClicked}\r\n                />\r\n                <ul id=\"layersList\"\r\n                    style={{maxHeight:0.82*(this.height-40)}}>\r\n                { this.props.layers.map((layer) =>\r\n                    <LayerListElement\r\n                        key={layer.name}\r\n                        layer={layer}\r\n                        onLayerClicked={() => this.props.onLayerClicked(layer)}\r\n                        onAffectedBoxClicked={(event) => this.props.onAffectedBoxClicked(event, layer)}\r\n                        onSubmitLayerEditForm={this.props.onSubmitLayerEditForm}\r\n                        onEscapeLayerEditForm={this.props.onEscapeLayerEditForm}\r\n                    />)\r\n                }\r\n                </ul>\r\n                {/*{addLayer}*/}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage,\r\n        showLayerList: state.app.showLayerList         // on mobile device\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // onAddLayerButtonClicked: (stage) => dispatch(actions.addEmptyLayer(stage)),\r\n        onEditLayerButtonClicked: () => dispatch(actions.openAffectedLayerEditForm()),\r\n        onDeleteLayerButtonClicked: () => dispatch(actions.deleteAffectedLayer()),\r\n        // onSortLayersButtonClicked: () => dispatch(actions.sortLayers()),\r\n        onLayerClicked: (layer) => dispatch(actions.toggleDisplayLayer(layer)),\r\n        onAffectedBoxClicked: (event, layer) => dispatch(actions.toggleAffectedLayer(event, layer)),\r\n        onSubmitLayerEditForm: (newLayer) => dispatch(actions.updateLayer(newLayer)),\r\n        onEscapeLayerEditForm: () => dispatch(actions.closeEditLayerForm()),\r\n        setAffectedNextLayer: () => dispatch(actions.setAffectedNextLayer()),\r\n        setAffectedPrevLayer: () => dispatch(actions.setAffectedPrevLayer())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LayersList);\r\n\r\n// export default LayersList;\r\n","/**\r\n * Created by alexanderbol on 06/05/2017.\r\n */\r\nimport styles from './AsideComponent.module.css';\r\n\r\nconst AsideComponent = () => {\r\n    return (\r\n        <aside className={styles[\"App-aside\"]}>\r\n            <h5>&nbsp;</h5>\r\n        </aside>\r\n    )\r\n};\r\n\r\nexport default AsideComponent;\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as ActionTypes from \"./store/actionTypes\";\r\nimport * as cloudActions from \"./store/actions/cloudStorageActions\";\r\nimport MainComponent from \"./containers/MainComponent/MainComponent\";\r\nimport LayersList from \"./containers/LayerList/LayersList\";\r\nimport AsideComponent from \"./components/Layout/AsideComponent/AsideComponent\";\r\n// import DocumentName from \"./components/MainComponent/DocumentName/DocumentName\";\r\n\r\nconst appBody = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            {/*<DocumentName name={props.document.name}*/}\r\n                          {/*username={props.username}*/}\r\n                          {/*updateDocumentName={props.updateDocumentName} />*/}\r\n            <div className=\"App-body\" onPaste={props.pasteDataFromBuffer}>\r\n                <MainComponent history={props.history}\r\n                               onManageCloudStorageButtonClicked={props.onManageCloudStorageButtonClicked}\r\n                />\r\n                <LayersList/>\r\n                <AsideComponent/>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({cloudStorage, auth}) => {\r\n    return {\r\n        document: cloudStorage.document,\r\n        username: auth.username\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        pasteDataFromBuffer: (event) => dispatch({\r\n            type: ActionTypes.DATA_FROM_BUFFER_PASTED,\r\n            data: event.clipboardData\r\n        }),\r\n        updateDocumentName: (name) => dispatch(cloudActions.updateDocumentName(name))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(appBody);\r\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nimport { withRouter } from 'react-router-dom';\r\nimport classes from './HeaderComponent.module.css';\r\n// import Logo from './Logo/Logo';\r\n// import Navigation from './Navigation/Navigation';\r\n\r\nconst HeaderComponent = (props) => {\r\n    const style = props.location.pathname === \"/documents\" ?\r\n        classes[\"App-header-documents-page\"] :\r\n        classes[\"App-header\"];\r\n    return (\r\n        <header className={style}>\r\n            {/*<h2>Debug Viewer</h2>*/}\r\n            <h2>{props.title}</h2>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default withRouter(HeaderComponent);\r\n\r\n/*\r\n<header className={style}>\r\n    <Logo />\r\n    <Navigation isAuthenticated={props.isAuthenticated} />\r\n    {props.isAuthenticated ? <span>Hello {props.username}</span> : null}\r\n    {props.location.pathname === \"/documents\" ? <hr/> : null}\r\n</header>\r\n*/\r\n","import {Component} from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport Layers from \"../../models/layers\";\r\n// import {parseODB} from \"../../dataParsers/parserODB\";\r\nimport {parseTXT} from \"../../dataParsers/parseTXT\";\r\nimport Model from \"../../models/model\";\r\nimport * as ActionTypes from \"../../store/actionTypes\";\r\nimport * as actions from '../../store/actions/appActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Demo extends Component {\r\n    state={\r\n        done:false\r\n    };\r\n    componentDidUpdate() {\r\n        if (this.props.stage && !this.state.done) {\r\n            let stage = this.props.stage;\r\n            let layers = this.props.layers;\r\n\r\n            // let url1 = \"https://gist.githubusercontent.com/alexbol99/e8ff96c445fc58da5d0f66ccf58d9282/raw/be4273f3b68b104e02f918495592d8308a066344/poly1.txt\";\r\n            // let url2 = \"https://gist.githubusercontent.com/alexbol99/b445045a8bbb41b4bde7724b5e474ddf/raw/705314f25757633c6a3d9199d5be101028ea0316/poly2.txt\";\r\n            // let url3 = \"https://gist.githubusercontent.com/alexbol99/715dc06c8295f90ef18385a0d8040d5c/raw/c95c46c0eae9069d004480ccd0ac80ca89e818f2/poly3.txt\";\r\n            // let url4 = \"https://gist.githubusercontent.com/alexbol99/1226284eb0c0ac3aa9c645d9f7849eb5/raw/a35baaadb8d9e5e0580d33cf4546bf0d05ad37dc/poly4.txt\";\r\n            let url234 = \"https://gist.githubusercontent.com/alexbol99/e570fe783be88b556f4ca4b332da73f7/raw/741c87a7ceccdeadd9fbbac05bdfda22ebe94927/poly234.txt\";\r\n\r\n            // axios(\"https://gist.githubusercontent.com/alexbol99/825fdf2dd508467cc852eb22aa36183d/raw/d10e853338afd8294eeb3ffdebe3bc380477a978/features\")\r\n\r\n            Promise.all([axios(url234)])\r\n                .then( (responses) => {\r\n                    for (let i=0; i < 1; i++) {\r\n                        let resp = responses[i];\r\n                        let layer = Layers.newLayer(stage, layers);\r\n                        layer.color = Layers.getNextColor(layers);\r\n                        layer.name = \"poly\";\r\n                        layer.title = \"\";\r\n                        layer.affected = false;\r\n                        layer.displayed = true;\r\n\r\n                        let job = parseTXT(layer.name, resp.data);\r\n\r\n                        for (let shape of job.shapes) {\r\n                            let model = new Model(shape, undefined, shape.label);\r\n                            layer.add(model);\r\n                        }\r\n\r\n                        this.props.panAndZoomToShape(stage, layer);\r\n                        this.props.addNewLayer(layer);\r\n                        this.props.asyncOperationEnded();\r\n                    }\r\n                })\r\n                .catch( error => {\r\n                    console.log(error);\r\n                    this.props.asyncOperationEnded();\r\n                });\r\n\r\n            this.setState({done:true});\r\n            this.props.asyncOperationStarted();\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        panAndZoomToShape: (stage, layer) => dispatch({\r\n            type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n            stage: stage,\r\n            shape: layer\r\n        }),\r\n        addNewLayer: (layer) => dispatch({\r\n            type: ActionTypes.ADD_NEW_LAYER,\r\n            layer: layer\r\n        }),\r\n        asyncOperationStarted: () => dispatch(actions.asyncOperationStarted()),\r\n        asyncOperationEnded: () => dispatch(actions.asyncOperationEnded())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Demo);\r\n","import {Component} from 'react';\r\nimport * as ActionTypes from \"../../store/actionTypes\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass SkeletonRecognition extends Component {\r\n    componentDidMount() {\r\n        this.props.applySkeletonRecognition();\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        applySkeletonRecognition: () => dispatch({type: ActionTypes.SKELETON_RECOGNITION_URI})\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SkeletonRecognition);\r\n","import Flatten from \"@flatten-js/core\";\r\nimport {Vector, Segment, Arc, Line, Box, Polygon} from \"@flatten-js/core\";\r\n// let Flatten = require('flatten-js');\r\n\r\n// let {Vector, Segment, Arc, Line, Box, Polygon} = Flatten;\r\n\r\nclass CollisionDistance {\r\n    static apply(polygon1, polygon2) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        for (let edge of [...polygon2.edges]) {\r\n            let distance = CollisionDistance.edge2polygon(edge, polygon1);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static edge2polygon(edge2, polygon1) {\r\n        let shapeBox = edge2.shape.box;\r\n        let box = new Box(\r\n            Number.NEGATIVE_INFINITY,\r\n            shapeBox.ymin,\r\n            Number.POSITIVE_INFINITY,\r\n            shapeBox.ymax\r\n        );\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        let resp_edges =  polygon1.edges.search(box);\r\n        for (let edge1 of resp_edges) {\r\n            let distance;\r\n            if (edge1.shape instanceof Segment && edge2.shape instanceof Segment) {\r\n                distance = CollisionDistance.segment2segment(edge1.shape, edge2.shape);\r\n            }\r\n            else if (edge1.shape instanceof Arc && edge2.shape instanceof Segment) {\r\n                distance = CollisionDistance.segment2arc(edge2.shape, edge1.shape);\r\n            }\r\n            else if (edge1.shape instanceof Segment && edge2.shape instanceof Arc) {\r\n                distance = CollisionDistance.segment2arc(edge1.shape, edge2.shape);\r\n            }\r\n            else if (edge1.shape instanceof Arc && edge2.shape instanceof Arc) {\r\n                distance = CollisionDistance.arc2arc(edge1.shape, edge2.shape);\r\n            }\r\n\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static point2shape(point, shape) {\r\n        let line = new Line(point, new Vector(0,1));\r\n        let intersections = line.intersect(shape);          // segment or arc\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        for (let ip of intersections) {\r\n            // eslint-disable-next-line\r\n            let [distance, shortest_segment] = point.distanceTo(ip);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static segment2segment(segment1, segment2) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        for (let point of segment1.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, segment2);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        for (let point of segment2.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, segment1);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static segment2arc(segment, arc) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        let v_s = new Vector(segment.start, segment.end);\r\n        v_s = v_s.normalize();\r\n\r\n        let v_n = [v_s.rotate90CCW().multiply(arc.r), v_s.rotate90CW().multiply(arc.r)];\r\n        let distance;\r\n\r\n        // Distance between tangent point and segment\r\n        for (let v of v_n) {\r\n            let tangent_point = arc.center.translate(v);  // tangent point in direction of the normal vector\r\n            if (tangent_point.on(arc)) {\r\n                distance = CollisionDistance.point2shape(tangent_point, segment);\r\n                if (distance < collision_distance) {\r\n                    collision_distance = distance;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let point of arc.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, segment);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        for (let point of segment.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, arc);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static arc2arc(arc1, arc2) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        let distance;\r\n\r\n        // test translation of arc2.center to arc1 enlarged by r2\r\n        let arc_enlarged = arc1.clone();\r\n        arc_enlarged.r += arc2.r;\r\n        distance = CollisionDistance.point2shape(arc2.center, arc_enlarged);\r\n        if (distance < collision_distance) {\r\n            // additional check that transformed arc actually touching\r\n            // eslint-disable-next-line\r\n            let [dist_tmp, shortest_segment_tmp] =\r\n                arc1.distanceTo( CollisionDistance.translateArc(arc2, new Vector(-distance,0)));\r\n            if (Flatten.Utils.EQ_0(dist_tmp)) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n\r\n        // test translation of arc2.center to arc1 reduced by r2\r\n        if (Flatten.Utils.GE(arc1.r, arc2.r)) {\r\n            let arc_reduced = arc1.clone();\r\n            arc_reduced.r -= arc2.r;\r\n            distance = CollisionDistance.point2shape(arc2.center, arc_reduced);\r\n            if (distance < collision_distance) {\r\n                // additional check that transformed arc actually touching\r\n                // eslint-disable-next-line\r\n                let [dist_tmp, shortest_segment_tmp] =\r\n                    arc1.distanceTo( CollisionDistance.translateArc(arc2, new Vector(-distance,0)));\r\n                if (Flatten.Utils.EQ_0(dist_tmp)) {\r\n                    collision_distance = distance;\r\n                }\r\n            }\r\n        }\r\n\r\n        // test translation of arc1.center to arc2 reduced by r1\r\n        if (Flatten.Utils.LT(arc1.r, arc2.r)) {\r\n            let arc_reduced = arc2.clone();\r\n            arc_reduced.r -= arc1.r;\r\n            distance = CollisionDistance.point2shape(arc1.center, arc_reduced);\r\n            if (distance < collision_distance) {\r\n                // additional check that transformed arc actually touching\r\n                // eslint-disable-next-line\r\n                let [dist_tmp, shortest_segment_tmp] =\r\n                    arc1.distanceTo( CollisionDistance.translateArc(arc2, new Vector(-distance,0)));\r\n                if (Flatten.Utils.EQ_0(dist_tmp)) {\r\n                    collision_distance = distance;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let point of arc1.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, arc2);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        for (let point of arc2.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, arc1);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static translateArc(arc, vec) {\r\n        let arc_tmp = arc.clone();\r\n        arc_tmp.pc = arc_tmp.pc.translate(vec);\r\n        return arc_tmp;\r\n    }\r\n\r\n    static translate(polygon, vec) {\r\n        let newPolygon = new Polygon();\r\n        for (let face of polygon.faces) {\r\n            let shapes = [];\r\n            for (let edge of face) {\r\n                if (edge.shape instanceof Segment) {\r\n                    shapes.push(\r\n                        new Segment(edge.shape.ps.translate(vec), edge.shape.pe.translate(vec))\r\n                    )\r\n                }\r\n                else if (edge.shape instanceof  Arc) {\r\n                    let arc_trans = edge.shape.clone();\r\n                    arc_trans.pc = edge.shape.pc.translate(vec);\r\n                    shapes.push(arc_trans);\r\n                }\r\n            }\r\n            newPolygon.addFace(shapes);\r\n        }\r\n        return newPolygon;\r\n    }\r\n\r\n};\r\n\r\nCollisionDistance.Flatten = Flatten;\r\n\r\nexport default CollisionDistance;\r\n","import {Component} from 'react';\r\nimport Flatten from '@flatten-js/core';\r\nimport CollisionDistance from \"../../models/collisionDistance\";\r\nimport axios from \"axios\";\r\nimport Layers from \"../../models/layers\";\r\n// import {Model} from \"../../models/model\";\r\nimport * as ActionTypes from \"../../store/actionTypes\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/appActions\";\r\n\r\nlet {vector} = Flatten;\r\n\r\nclass CollisionDemo extends Component {\r\n    state={\r\n        done:false,\r\n        data:[]\r\n    };\r\n    componentDidUpdate() {\r\n        if (this.props.stage && !this.state.done) {\r\n            let stage = this.props.stage;\r\n            let layers = this.props.layers;\r\n\r\n            let layer = Layers.newLayer(stage, layers);\r\n            layer.color = Layers.getNextColor(layers);\r\n            layer.name = \"collision_demo\";\r\n            layer.title = \"collision_demo\";\r\n            layer.affected = true;\r\n            layer.displayed = true;\r\n\r\n            axios(\"https://gist.githubusercontent.com/alexbol99/81893d40ec5eaa00d0336c35e069dd73/raw/b9328a4c6d7d6a44f375c68b4ec207690f40fd19/Block_53388_2parts_Cont.txt\")\r\n                .then( (resp) => {\r\n                    let parser = this.props.parser;\r\n                    let polygon1 = parser.parseToPolygon(resp.data);\r\n                    layer.add(polygon1);\r\n\r\n                    let vec = vector( 2*(polygon1.box.xmax - polygon1.box.xmin), 0 );\r\n                    let polygon2 = polygon1.translate(vec);\r\n                    layer.add(polygon2);\r\n\r\n                    let collision = CollisionDistance.apply(polygon2, polygon1);\r\n                    let polygon3 = polygon2.translate(vector(-collision, 0));\r\n                    layer.add(polygon3);\r\n\r\n                    // layers.push(layer);\r\n\r\n                    this.props.panAndZoomToShape(stage, layer);\r\n                    this.props.addNewLayer(layer);\r\n                    this.props.applyCollisionDemo();\r\n                    this.props.asyncOperationEnded();\r\n                });\r\n            this.setState({done:true});\r\n            this.props.asyncOperationStarted();\r\n        }\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage,\r\n        parser: state.app.parser\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        panAndZoomToShape: (stage, layer) => dispatch({\r\n            type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n            stage: stage,\r\n            shape: layer\r\n        }),\r\n        addNewLayer: (layer) => dispatch({\r\n            type: ActionTypes.ADD_NEW_LAYER,\r\n            layer: layer\r\n        }),\r\n        applyCollisionDemo: () => dispatch({\r\n            type: ActionTypes.COLLISION_DEMO_URI\r\n        }),\r\n        asyncOperationStarted: () => dispatch(actions.asyncOperationStarted()),\r\n        asyncOperationEnded: () => dispatch(actions.asyncOperationEnded())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CollisionDemo);\r\n","import Modal from '../Modal';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <Modal>\r\n            <div className={classes.BackDrop} >\r\n                <div className={classes.Loader}>Loading ...</div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default spinner;","import * as actionTypes from '../actionTypes';\r\nimport axios from 'axios';\r\n\r\nconst apiKey = \"AIzaSyDMUAcjgolAlapdpFmPEz8SaId1DZw7MpQ\";\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_STARTED\r\n    }\r\n};\r\n\r\nexport const authSucceed = (token, userId, username=null) => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_SUCCEED,\r\n        token,\r\n        userId,\r\n        username\r\n    }\r\n};\r\n\r\nexport const authFailed = (error) => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_FAILED,\r\n        error\r\n    }\r\n};\r\n\r\nexport const authSetUsername = (username) => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_SET_USERNAME,\r\n        username\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_LOGOUT\r\n    }\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            const email = localStorage.getItem('email');\r\n            const password = localStorage.getItem('password');\r\n            if (email && password) {\r\n                dispatch(logIn(email, password))\r\n            }\r\n            else {\r\n                dispatch(logout())\r\n            }\r\n        }, expirationTime * 1000)\r\n    }\r\n};\r\n\r\nexport const logIn = (email, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        };\r\n        localStorage.setItem('email', email);\r\n        localStorage.setItem('password', password);\r\n        const url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=\" + apiKey;\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n\r\n                dispatch(authSucceed(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n                const queryParams = '?auth=' + response.data.idToken + '&orderBy=\"userId\"&equalTo=\"' + response.data.localId + '\"';\r\n                return axios.get(\"https://debug-viewer.firebaseio.com/users.json\" + queryParams);\r\n            })\r\n            .then(response => {\r\n                if (Object.values(response.data.length > 0)) {\r\n                    const username = Object.values(response.data)[0].username;\r\n                    localStorage.setItem('username', username);\r\n                    dispatch(authSetUsername(Object.values(response.data)[0].username))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(authFailed(error.response.data.error))\r\n            })\r\n    }\r\n};\r\n\r\nexport const signUp = (username, email, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        };\r\n        const url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=\" + apiKey;\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                localStorage.setItem('username', username);\r\n\r\n                dispatch(authSucceed(response.data.idToken, response.data.localId, username));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n\r\n                const user = {\r\n                    userId: response.data.localId,\r\n                    username: username\r\n                };\r\n                return axios.post(\"https://debug-viewer.firebaseio.com/users.json\", user);\r\n            })\r\n            .then(response => {\r\n                // do nothing\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response.data.error);\r\n                dispatch(authFailed(error.response.data.error))\r\n            })\r\n    }\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        }\r\n        else {\r\n            const userId = localStorage.getItem('userId');\r\n            const username = localStorage.getItem('username');\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate > new Date()) {\r\n                const timeLeft = expirationDate.getTime() - new Date().getTime()\r\n                dispatch(authSucceed(token, userId, username));\r\n                dispatch(checkAuthTimeout(timeLeft / 1000));\r\n            }\r\n            else {\r\n                dispatch(logout());\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n","import {Component} from 'react';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\n\r\nimport AppBody from './AppBody';\r\nimport HeaderComponent from './components/Layout/HeaderComponent/HeaderComponent';\r\n// import Signup from './containers/Auth/SignUp/Signup';\r\n// import Login from './containers/Auth/Login/Login';\r\n// import Logout from './containers/Auth/Logout';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './App.css';\r\n\r\n// import CloudDocument from './components/Constructions/CloudDocument';\r\nimport Demo from './components/Constructions/Demo';\r\n// import BooleanTest from './components/Constructions/BooleanTest';\r\nimport SkeletonRecognition from './components/Constructions/SkeletonRecognition';\r\nimport CollisionDemo from \"./components/Constructions/CollisionDemo\";\r\nimport Spinner from \"./components/UI/Spinner/Spinner\";\r\n// import DocumentsComponent from \"./containers/DocumentsComponent/DocumentsComponent\";\r\nimport * as authActions from \"./store/actions/auth\";\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.authCheckState();\r\n        window.addEventListener('beforeunload', function (e) {\r\n            e.preventDefault();\r\n            e.returnValue = '';\r\n        });\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.location.pathname === '/' && this.props.document.id !== undefined) {\r\n            this.props.history.push(\"/documents/\" + this.props.document.id)\r\n        }\r\n\r\n        // if (this.props.location.pathname.split('/').length > 2 &&\r\n        //     this.props.location.pathname.split('/')[2].length > 0 &&\r\n        //     this.props.document.id === undefined) {\r\n        //     this.props.history.push(\"/\");\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <HeaderComponent\r\n                    title={this.props.title}\r\n                    version={this.props.version}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                    username={this.props.username}\r\n                />\r\n\r\n                <AppBody/>\r\n\r\n                <Switch>\r\n                    {/*<Route path=\"/documents\" exact component={DocumentsComponent}/>*/}\r\n                    {/*<Route path=\"/signup\" component={Signup} />*/}\r\n                    {/*<Route path=\"/login\" component={Login} />*/}\r\n                    {/*<Route path=\"/logout\" component={Logout} />*/}\r\n\r\n                    <Route path=\"/demo\" exact component={Demo}/>\r\n                    {/*<Route path=\"/\" component={AppBody}/>*/}\r\n\r\n                    {/*<Route path=\"/documents/:id\" component={CloudDocument}/>*/}\r\n\r\n\r\n                    <Route path=\"/skeleton\" component={SkeletonRecognition}/>\r\n                    <Route path=\"/collision-distance\" component={CollisionDemo}/>\r\n\r\n                </Switch>\r\n\r\n                {this.props.showSpinner ? <Spinner/> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({auth, app, cloudStorage}) => {\r\n    return {\r\n        title: app.title,\r\n        version: app.version,\r\n        showSpinner: app.showSpinner,\r\n        document: cloudStorage.document,\r\n        isAuthenticated: auth.token !== null,\r\n        username: auth.username\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authCheckState: () => dispatch(authActions.authCheckState())\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n\r\n/*\r\n                    <Route path=\"/boolean-test\" component={BooleanTest}/>\r\n */\r\n","import ReactDOM from 'react-dom';\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport reducer from './store/reducer';\r\nimport log from './middleware/log';\r\n// import readFiles from './middleware/readFiles';\r\nimport pasteData from './middleware/pasteData';\r\nimport stageController from './middleware/stageController';\r\nimport skeleton_recognition from './middleware/skeleton_recognition';\r\nimport App from \"./App\";\r\n\r\nimport './index.css';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer,\r\n    composeEnhancers(\r\n        applyMiddleware(log, pasteData, skeleton_recognition, stageController, thunk)\r\n    )\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2f7hp\",\"IconTrigger\":\"Button_IconTrigger__1Epo2\",\"IconModeActive\":\"Button_IconModeActive__1D5wv\",\"IconModeNotActive\":\"Button_IconModeNotActive__1HT4h\",\"DrawerButton\":\"Button_DrawerButton__1FZqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UploadPopup\":\"UploadPopup_UploadPopup__Ahi3U\",\"fadeIn\":\"UploadPopup_fadeIn__3EQ7m\",\"UploadTarget\":\"UploadPopup_UploadTarget__1Z4jp\",\"UploadTargetDragLeave\":\"UploadPopup_UploadTargetDragLeave__fmHKo\",\"UploadTargetDragOver\":\"UploadPopup_UploadTargetDragOver__1RGOi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer\":\"LayerListElement_Layer__2faNs\",\"LayerSelectionBox\":\"LayerListElement_LayerSelectionBox__2quJM\",\"LayerSelectionMark\":\"LayerListElement_LayerSelectionMark__36ikh\",\"LayerNameBox\":\"LayerListElement_LayerNameBox__WKaNU\",\"Layer-displayed\":\"LayerListElement_Layer-displayed__2OF6t\",\"Layer-undisplayed\":\"LayerListElement_Layer-undisplayed__2LFfj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonSeparator\":\"ButtonSeparator_ButtonSeparator__2OrIo\",\"IconSeparator\":\"ButtonSeparator_IconSeparator__2_jWh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-toolbar\":\"ToolbarComponent_App-toolbar__387rI\",\"App-toolbar-units\":\"ToolbarComponent_App-toolbar-units__Oiw_d\",\"DrawerButton\":\"ToolbarComponent_DrawerButton__3-5zZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"ModalPopup_BackDrop__2YR2Q\",\"ModalPopup\":\"ModalPopup_ModalPopup__1agxT\",\"fadeIn\":\"ModalPopup_fadeIn__7Wo-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-layers\":\"LayersList_App-layers__140NG\",\"App-layers-displayed\":\"LayersList_App-layers-displayed__22N0s\",\"fadeIn\":\"LayersList_fadeIn__3eUVT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-header\":\"HeaderComponent_App-header__2ahiT\",\"App-header-documents-page\":\"HeaderComponent_App-header-documents-page__3qQEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"Spinner_BackDrop__2JQB7\",\"Loader\":\"Spinner_Loader__2CR35\",\"load2\":\"Spinner_load2__1_J4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-canvas\":\"CanvasComponent_App-canvas__2U2Tt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-status-bar\":\"StatusComponent_App-status-bar__2cyuH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LabelsLayer\":\"labelsLayer_LabelsLayer__15IU0\",\"LabelComponent\":\"labelsLayer_LabelComponent__2hx0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VertexLabel\":\"VertexLabel_VertexLabel__1E4O3\",\"fadeIn\":\"VertexLabel_fadeIn__3VBpZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutPopup\":\"AboutPopup_AboutPopup__194nD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DownloadPopup\":\"DownloadPopup_DownloadPopup__14yy5\",\"fadeIn\":\"DownloadPopup_fadeIn__EVW3r\",\"Open\":\"DownloadPopup_Open__2KTju\",\"Close\":\"DownloadPopup_Close___5jcj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Snackbar\":\"Snackbar_Snackbar__vz5yL\",\"fadeInOut\":\"Snackbar_fadeInOut__2TuNS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main-content\":\"MainComponent_Main-content__2wQN7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer-list-toolbar\":\"LayerListToolbar_Layer-list-toolbar__dkMLf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer-edit-form\":\"LayerEditForm_Layer-edit-form__1jukg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-aside\":\"AsideComponent_App-aside__iZYZh\"};"],"sourceRoot":""}