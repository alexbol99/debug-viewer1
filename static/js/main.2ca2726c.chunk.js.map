{"version":3,"sources":["components/UI/Button/Button.module.css","components/UploadPopup/UploadPopup.module.css","components/LayersList/LayerListElement/LayerListElement.module.css","components/UI/Spinner/Spinner.module.css","components/UI/ModalPopup/ModalPopup.module.css","components/UI/ButtonSeparator/ButtonSeparator.module.css","components/EditorComponent/ToolbarComponent/ToolbarComponent.module.css","components/Layout/HeaderComponent/HeaderComponent.module.css","components/EditorComponent/EditorComponent.module.css","tools/DisplayCoordinates/DisplayCoordinatesTool.module.css","components/MainComponent/GraphicsComponent/LabelsLayerComponent/labelsLayer.module.css","components/MainComponent/GraphicsComponent/domelements/VertexLabel/VertexLabel.module.css","components/LayersList/LayerListToolbar/LayerListToolbar.module.css","components/LayersList/LayerEditForm/LayerEditForm.module.css","components/EditorComponent/LayersWidget/LayersWidget.module.css","tools/MeasureBetweenPoints/MeasureBetweenPoints.module.css","containers/HomeComponent/HomeComponent.module.css","components/AboutPopup/AboutPopup.module.css","components/DownloadPopup/DownloadPopup.module.css","components/UI/Snackbar/Snackbar.module.css","serviceWorker.js","components/Layout/HeaderComponent/HeaderComponent.js","components/UI/Modal.js","components/UI/Spinner/Spinner.js","store/actionTypes.js","models/model.js","models/layer.js","models/layers.js","store/reducers/layersReducer.js","store/reducers/measureShapesReducer.js","store/actions/layersActions.js","models/utils.js","tools/DisplayCoordinates/DisplayCoordinatesTool.js","components/EditorComponent/StageComponent/StageComponent.js","store/reducers/mouse.js","store/actions/stageActions.js","models/stage.js","hooks/useMouse.js","models/graphics.js","components/MainComponent/GraphicsComponent/graphics/shapeComponent.js","components/MainComponent/GraphicsComponent/graphics/imageComponent.js","components/MainComponent/GraphicsComponent/layerComponent.js","components/MainComponent/GraphicsComponent/domelements/labelComponent.js","components/MainComponent/GraphicsComponent/LabelsLayerComponent/labelsLayerComponent.js","components/MainComponent/GraphicsComponent/domelements/VertexLabel/VertexLabel.js","components/MainComponent/GraphicsComponent/graphics/vertexComponent.js","components/MainComponent/GraphicsComponent/graphics/verticesComponent.js","components/MainComponent/GraphicsComponent/verticesLayerComponent.js","components/MainComponent/GraphicsComponent/layersComponent.js","components/UI/Button/Button.js","components/LayersList/LayerListToolbar/LayerListToolbar.js","components/UI/ModalPopup/ModalPopup.js","components/LayersList/LayerEditForm/LayerEditForm.js","components/LayersList/LayerListElement/LayerListElement.js","components/EditorComponent/LayersWidget/LayersWidget.js","tools/MeasureBetweenPoints/MeasureBetweenPoints.js","tools/measureShapesTool.js","components/EditorComponent/EditorComponent.js","store/actions/measureShapesActions.js","models/job.js","models/createArcs.js","models/polygonOffset.js","dataParsers/parseFlighta.js","dataParsers/parseDebug.js","dataParsers/parseTXT.js","containers/DemoComponent/DemoComponent.js","dataParsers/parseJSON.js","store/reducers/units.js","store/reducers/app.js","store/reducers/upload.js","store/actions/appActions.js","dataParsers/parserXML.js","dataParsers/parserODB.js","dataParsers/parseCSV.js","store/actions/upload.js","components/UI/ButtonSeparator/ButtonSeparator.js","components/EditorComponent/ToolbarComponent/ToolbarComponent.js","components/AboutPopup/AboutPopup.js","dataParsers/createXML.js","components/DownloadPopup/DownloadPopup.js","components/UI/Snackbar/Snackbar.js","components/UploadPopup/UploadPopup.js","models/readFile.js","dataParsers/parseAll.js","containers/HomeComponent/HomeComponent.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","HeaderComponent","props","className","classes","title","modalRoot","document","getElementById","Modal","el","createElement","appendChild","this","removeChild","ReactDOM","createPortal","children","Component","spinner","BackDrop","Loader","STAGE_UNMOUNTED","PAN_BY_DRAG_BUTTON_CLICKED","MEASURE_POINTS_BUTTON_PRESSED","MEASURE_SHAPES_BUTTON_PRESSED","TOGGLE_ABOUT_POPUP_CLICKED","TOGGLE_UNITS_CLICKED","TOGGLE_WIDTH_MODE_CLICKED","TOGGLE_DISPLAY_VERTICES_CLICKED","TOGGLE_DISPLAY_LABELS_CLICKED","TOGGLE_SHOW_LAYER_LIST_CLICKED","TOGGLE_DOWNLOAD_POPUP_CLICKED","TOGGLE_UPLOAD_POPUP_CLICKED","MOUSE_MOVED_ON_STAGE","MOUSE_DOWN_ON_STAGE","MOUSE_UP_ON_STAGE","MOUSE_WHEEL_MOVE_ON_STAGE","MOUSE_ROLL_OVER_SHAPE","MOUSE_ROLL_OUT_SHAPE","MOUSE_CLICKED_ON_SHAPE","PINCH_DOWN_ON_STAGE","PINCH_MOVED_ON_STAGE","PINCH_UP_ON_STAGE","ADD_LAYER_BUTTON_PRESSED","ADD_NEW_LAYER","DELETE_LAYER_BUTTON_PRESSED","SORT_LAYERS_BUTTON_PRESSED","TOGGLE_DISPLAY_LAYER_PRESSED","TOGGLE_AFFECTED_LAYER_PRESSED","OPEN_LAYER_EDIT_FORM_PRESSED","SUBMIT_LAYER_EDIT_FORM_PRESSED","ESCAPE_LAYER_EDIT_FORM_PRESSED","LAYERS_LIST_ARROW_DOWN_PRESSED","LAYERS_LIST_ARROW_UP_PRESSED","FILES_UPLOAD_COMPLETED","INITIALIZE_UPLOAD_STATE","CLEAR_ALL_BUTTON_CLICKED","defaultStyle","strokeStyle","stroke","fill","alpha","Model","geom","undefined","style","label","model","Object","assign","box","Layer","stage","shapes","name","color","displayed","edited","affected","layer","shape","push","newShape","add","Box","merge","clone","Point","xmin","xmax","ymin","ymax","JSON","stringify","colors","Layers","layers","getNewName","length","defaultName","inc","comparator","find","lay","currentAffectedLayer","getAffected","col","index","findIndex","l","newLayers","filter","getNextColor","slice","sort","l1","l2","name1","toUpperCase","name2","map","toJSON","layersReducer","newLayer","state","action","affectedLayer","affectedLayerId","type","ActionTypes","delete","setAffected","toggleDisplayed","setEdited","setNameAndTitle","nextLayer","newCurLayer","newNextLayer","defaultMeasureShapesState","measureShapesActive","measureShapesFirstClick","hoveredShape","firstMeasuredShape","secondMeasuredShape","firstMeasuredLayer","secondMeasuredLayer","distance","shortestSegment","is_mobile","mobilecheck","measureShapesReducer","shape1","shape2","Flatten","Distance","addNewLayer","is_equal","obj1","obj2","equal","keys","key","format","num","divisor","decimals","toFixed","DisplayCoordinatesTool","coordX","coordY","mainCanvas","canvas","top","offsetTop","left","width","x","C2W_X","y","C2W_Y","position","styles","StageComponent","transform","controls","useEffect","getContext","originX","originY","zoomFactor","resolution","setTransform","update","defaultMouseState","startX","startY","touchPoints","delta","ratio","mouse","x1","y1","x2","y2","dx","dy","distStart","Math","sqrt","distCurrent","handleMouseWheelMove","Stage","Touch","enable","mouseMoveOutside","enableMouseOver","clientWidth","clientHeight","height","origin","oldOrigin","oldZoomFactor","pinchAnchorX","pinchAnchorY","pinchStarted","minX","minY","maxX","maxY","addChild","scalar","scalingFactor","canvasX","canvasY","worldX","worldY","point","W2C_X","W2C_Y","newOrigin","deltaX","deltaY","curRatio","min","max","focusX","focusY","bIn","zoomIn","zoomOut","newFocusX","newFocusY","panBy","zoom","zoomByPinchStop","panByMouseStop","center","isNaN","panToCoordinate","zoomToLimits","setHome","clearRect","CreatejsStage","useMouse","canvasElement","useState","setStage","useReducer","mouseState","mouseDispatch","getTouchPoints","event","nativeEvent","touches","clientX","target","offsetLeft","clientY","handleMouseMove","useCallback","focus","stageActions","stageX","stageY","handleMouseDown","zoomByPinchStart","panByMouseStart","handleMouseUp","stopPropagation","preventDefault","handleMouseLeave","blur","body","handleMouseWheel","detail","wheelDelta","offsetX","offsetY","handleMouseWheelFox","layerX","layerY","newStage","on","addEventListener","passive","off","removeEventListener","graphics","graphics_point","Segment","graphics_segment","Arc","graphics_arc","Circle","graphics_circle","graphics_box","Polygon","graphics_polygon","radius","Graphics","beginFill","command","circle","drawCircle","segment","ignoreScale","setStrokeStyle","beginStroke","moveTo","ps","lineTo","pe","endStroke","arc","pc","r","startAngle","endAngle","counterClockwise","drawRect","setGraphicsEdge","edge","setGraphicsEdgeSegment","setGraphicsEdgeArc","setGraphicsFace","face","first","start","polygon","faces","ShapeComponent","params","handleMouseOver","onMouseOver","handleMouseOut","onMouseOut","handleClick","onClick","Shape","hovered","selected","widthOn","aperture","isEmpty","redraw","nextProps","nextState","clear","ImageComponent","bitmap","image","naturalWidth","naturalHeight","scaleX","scaleY","tx","ty","regX","regY","img","Image","onload","Bitmap","onImageLoaded","setAttribute","src","uri","loadImage","LayerComponent","displayLabels","handleMouseRollOverShape","handleMouseRollOutShape","handleClickOnShape","labelComponent","LabelComponent","labelsLayerComponent","trim","VertexLabel","vertex","VertexComponent","shadow","Shadow","setState","console","log","mouseEnabled","VerticesComponent","vertices","verticesLayerComponent","displayVertices","LayersComponent","button","iconStyle","IconTrigger","active","IconModeActive","IconModeNotActive","buttonStyle","mobileOnly","iconName","size","LayerListToolbar","Button","onEditLayerButtonClicked","onDeleteLayerButtonClicked","backDropRef","useRef","ref","ev","current","closePopup","ModalPopup","dragX","dragY","elementDrag","element","closeDragElement","onmouseup","onmousemove","handleKeyDown","code","showPopup","onMouseDown","header","LayerEditForm","layerNameRef","layerTitleRef","onSubmitLayerEditForm","value","setFocus","onSubmit","onMouseMove","htmlFor","id","defaultValue","cols","rows","display","onEscapeLayerEditForm","parent","LayerListElement","activeElement","nodeName","elem","rgba","hex","opacity","g","b","percent","replace","parseInt","substring","bgcolor","layerNameOpacity","onLayerClicked","LayerSelectionBox","onAffectedBoxClicked","LayerSelectionMark","LayerNameBox","backgroundColor","tabIndex","LayersWidget","widgetRef","setHeight","e","parentElement","setAffectedNextLayer","setAffectedPrevLayer","onLayerListClicked","maxHeight","toggleDisplayLayer","toggleAffectedLayer","initialState","points","MeasureBetweenPoints","units","rect","setRect","setSegment","measurementState","dispatch","draw","measurePoints","point1","point2","pllX","pllY","abs","graphicsRect","graphicsSegment","visible","erase","handleMouseMoved","rectShape","segmentShape","text","dist","measurement","MeasureShapesTool","labelShape","Text","font","unscale","redrawLabel","initialTransformState","EditorComponent","editorRef","layersDispatch","measureShapesState","measureShapesDispatch","onPasteDataFromBuffer","data","layerActions","wrkLayer","homeTransform","getInitialTransform","measurePointsActive","newTransform","panByMouseMove","zoomByMouse","zoomByPinchMove","zoomHomeCallback","useImperativeHandle","zoomHome","measuredLayersDisplayed","showLayersWidget","unitsName","measureShapesActions","forwardRef","Job","filename","profiles","materials","arcSE","end","vector","slope","Utils","EQ","PI","BooleanOperations","BOOLEAN_UNION","unify","subtract","addToIntPoints","getSortedArray","splitByIntersections","removeNotRelevantChains","removeOldFaces","restoreFaces","offsetArc","arc_cap1","arc_cap2","w","arc_outer","sweep","arcStartSweep","arcEndSweep","arc_inner","CW","CCW","addFace","setArcLength","ips","Face","getSelfIntersections","edges","edge_cap1","edge_cap2","int_points","pt","int_points_sorted","bv","OUTSIDE","int_point","edge_before","edge_after","INSIDE","next","prev","orientation","ORIENTATION","reverse","offsetSegment","seg","v_seg_unit","normalize","v_left","rotate90CCW","multiply","v_right","rotate90CW","seg_left","translate","seg_right","cap1","cap2","parseComplexShape","row_lines","loop_start","loop","poly","i","terms","split","includes","equalTo","parseToFlightaShapes","str","line","parseFlighta","job","parseToPoint","parenth","parseToSegment","termArr","psArr","peArr","parseToArc","pcArr","parseToCircle","parseToRectangle","pllArr","parseToODBLine","parseToODBArc","parseDebug","arrayOfLines","search","nedgesStr","nedges","j","parseToPolygon","parseToShapes","pointArr","parseToPoints","parseTXT","shapesArray","DemoComponent","setLayers","a","fetch","resp","prevLayers","fetchDemo","catch","error","onClearAllButtonClicked","parseJSONShape","jsonShape","parseJSON","jsonArray","parse","Error","Array","faceArray","unitsList","initialUnitsState","unitsReducer","curUnitsId","newUnits","defaultAppState","version","process","build","showAboutPopup","importDataToNewLayer","showSpinner","showDownloadPopup","showUploadPopup","app","defaultUploadState","uploadStarted","uploadCompleted","uploadedFiles","upload","toggleAboutPopup","toggleDownloadPopup","toggleUploadPopup","parseEdges","edgesXML","from","getAttribute","parsePolygon","polygonsXML","islands","getElementsByTagName","holes","parseSegment","segmentXML","parseCurve","curveXML","parsePoint","pointXML","parseImage","imageXML","parseXML","xmlDoc","DOMParser","parseFromString","titles","firstChild","nodeValue","profilesXML","materialXML","segmentsXML","curvesXML","curve","pointsXML","imagesXML","InchToPixels","round","Number","MilsToPixels","lines","end_of_face","parseLine","apertures","ap_value","parseArc","parseODB","substr","polarity","odbLine","odbArc","ap_key","micronToPixels","parseCSV","px","py","nx","ny","buttonSeparator","ButtonSeparator","IconSeparator","ToolbarComponent","appStateDispatch","appActions","onSortLayersButtonClicked","onHomeButtonPressed","onMeasureBetweenShapesButtonPressed","onUnitClicked","AboutPopup","href","pointToXMLString","xw","startElement","writeAttribute","endElement","segmentToXMLString","arcToXMLString","circleToXMLString","polygonToXMlString","createXMLString","XMLWriter","startDocument","endDocument","toString","DownloadPopup","downloadData","xmlString","encodeURIComponent","download","Snackbar","message","onAnimationEnd","UploadPopup","inputElementRef","dragOver","setDragOver","snackbarMessage","newFilesNum","initUploadState","UploadTarget","UploadTargetDragOver","UploadTargetDragLeave","onDrop","files","dataTransfer","items","kind","file","getAsFile","onFilesSelected","onDragOverCapture","onDragLeaveCapture","click","multiple","onChange","readFile","File","FileReader","FileList","reader","string","Promise","resolve","reject","result","readAsText","extension","at","HomeComponent","unitsState","unitsDispatch","appState","uploadDispatch","addShapesToNewLayer","filesSelectedHandler","promises","allSettled","res","p","status","forEach","actionTypes","clipboardData","getAsString","withRouter","returnValue","exact","path","Spinner","render","basename","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ca2726c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2f7hp\",\"IconTrigger\":\"Button_IconTrigger__1Epo2\",\"IconModeActive\":\"Button_IconModeActive__1D5wv\",\"IconModeNotActive\":\"Button_IconModeNotActive__1HT4h\",\"DrawerButton\":\"Button_DrawerButton__1FZqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UploadPopup\":\"UploadPopup_UploadPopup__Ahi3U\",\"fadeIn\":\"UploadPopup_fadeIn__3EQ7m\",\"UploadTarget\":\"UploadPopup_UploadTarget__1Z4jp\",\"UploadTargetDragLeave\":\"UploadPopup_UploadTargetDragLeave__fmHKo\",\"UploadTargetDragOver\":\"UploadPopup_UploadTargetDragOver__1RGOi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer\":\"LayerListElement_Layer__2faNs\",\"LayerSelectionBox\":\"LayerListElement_LayerSelectionBox__2quJM\",\"LayerSelectionMark\":\"LayerListElement_LayerSelectionMark__36ikh\",\"LayerNameBox\":\"LayerListElement_LayerNameBox__WKaNU\",\"Layer-displayed\":\"LayerListElement_Layer-displayed__2OF6t\",\"Layer-undisplayed\":\"LayerListElement_Layer-undisplayed__2LFfj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"Spinner_BackDrop__2JQB7\",\"Loader\":\"Spinner_Loader__2CR35\",\"load2\":\"Spinner_load2__1_J4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"ModalPopup_BackDrop__2YR2Q\",\"ModalPopup\":\"ModalPopup_ModalPopup__1agxT\",\"fadeIn\":\"ModalPopup_fadeIn__7Wo-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonSeparator\":\"ButtonSeparator_ButtonSeparator__2OrIo\",\"IconSeparator\":\"ButtonSeparator_IconSeparator__2_jWh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-toolbar\":\"ToolbarComponent_App-toolbar__3XIoN\",\"App-toolbar-units\":\"ToolbarComponent_App-toolbar-units__1KsD9\",\"DrawerButton\":\"ToolbarComponent_DrawerButton__3Ah48\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-header\":\"HeaderComponent_App-header__2ahiT\",\"App-header-documents-page\":\"HeaderComponent_App-header-documents-page__3qQEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditorComponent\":\"EditorComponent_EditorComponent__lnBl3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayCoordinatesTool\":\"DisplayCoordinatesTool_DisplayCoordinatesTool__Iv7DM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LabelsLayer\":\"labelsLayer_LabelsLayer__15IU0\",\"LabelComponent\":\"labelsLayer_LabelComponent__2hx0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VertexLabel\":\"VertexLabel_VertexLabel__1E4O3\",\"fadeIn\":\"VertexLabel_fadeIn__3VBpZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer-list-toolbar\":\"LayerListToolbar_Layer-list-toolbar__dkMLf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer-edit-form\":\"LayerEditForm_Layer-edit-form__1jukg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-layers\":\"LayersWidget_App-layers__1mgA5\",\"App-layers-displayed\":\"LayersWidget_App-layers-displayed__3nc8w\",\"fadeIn\":\"LayersWidget_fadeIn__TZnM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MeasureBetweenPoints\":\"MeasureBetweenPoints_MeasureBetweenPoints__LIJcL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomeComponent\":\"HomeComponent_HomeComponent__3mOy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutPopup\":\"AboutPopup_AboutPopup__194nD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DownloadPopup\":\"DownloadPopup_DownloadPopup__14yy5\",\"fadeIn\":\"DownloadPopup_fadeIn__EVW3r\",\"Open\":\"DownloadPopup_Open__2KTju\",\"Close\":\"DownloadPopup_Close___5jcj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Snackbar\":\"Snackbar_Snackbar__vz5yL\",\"fadeInOut\":\"Snackbar_fadeInOut__2TuNS\"};","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nimport classes from './HeaderComponent.module.css';\r\n// import Logo from './Logo/Logo';\r\n// import Navigation from './Navigation/Navigation';\r\n\r\nconst HeaderComponent = (props) => {\r\n    // const style = props.location.pathname === \"/documents\" ?\r\n    //     classes[\"App-header-documents-page\"] :\r\n    //     classes[\"App-header\"];\r\n    return (\r\n        <header className={classes[\"App-header\"]}>\r\n            {/*<h2>Debug Viewer</h2>*/}\r\n            <h2>{props.title}</h2>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default HeaderComponent;\r\n\r\n/*\r\n<header className={style}>\r\n    <Logo />\r\n    <Navigation isAuthenticated={props.isAuthenticated} />\r\n    {props.isAuthenticated ? <span>Hello {props.username}</span> : null}\r\n    {props.location.pathname === \"/documents\" ? <hr/> : null}\r\n</header>\r\n*/\r\n","import {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\n// A Modal component that is an abstraction around the portal API.\r\nclass Modal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Create a div that we'll render the modal into. Because each\r\n        // Modal component has its own element, we can render multiple\r\n        // modal components into the modal container.\r\n        this.el = document.createElement('div');\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Append the element into the DOM on mount. We'll render\r\n        // into the modal container element (see the HTML tab).\r\n        modalRoot.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // Remove the element from the DOM when we unmount\r\n        modalRoot.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        // Use a portal to render the children into the element\r\n        return ReactDOM.createPortal(\r\n            // Any valid React child: JSX, strings, arrays, etc.\r\n            this.props.children,\r\n            // A DOM element\r\n            this.el,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import Modal from '../Modal';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <Modal>\r\n            <div className={classes.BackDrop} >\r\n                <div className={classes.Loader}>Loading ...</div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default spinner;","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nexport const NEW_STAGE_CREATED = \"NEW_STAGE_CREATED\";\r\nexport const STAGE_RESIZED = \"STAGE_RESIZED\";\r\nexport const NEW_SHAPE_PASTED = \"NEW_SHAPE_PASTED\";\r\nexport const CLEAR_ALL = \"CLEAR_ALL\";\r\nexport const STAGE_UNMOUNTED = \"STAGE_UNMOUNTED\";\r\n\r\n/** Toolbar buttons **/\r\nexport const PAN_BY_DRAG_BUTTON_CLICKED = \"PAN_BY_DRAG_BUTTON_CLICKED\";\r\n// export const SAVE_DOCUMENT_BUTTON_CLICKED = \"SAVE_DOCUMENT_BUTTON_CLICKED\";\r\nexport const MANAGE_CLOUD_STORAGE_BUTTON_CLICKED = \"MANAGE_CLOUD_STORAGE_BUTTON_CLICKED\";\r\n\r\nexport const MEASURE_POINTS_BUTTON_PRESSED = \"MEASURE_POINTS_BUTTON_PRESSED\";\r\nexport const MEASURE_SHAPES_BUTTON_PRESSED = \"MEASURE_SHAPES_BUTTON_PRESSED\";\r\nexport const TOGGLE_ABOUT_POPUP_CLICKED = \"TOGGLE_ABOUT_POPUP_CLICKED\";\r\n// export const CLOSE_ABOUT_POPUP_BUTTON_PRESSED = \"CLOSE_ABOUT_POPUP_BUTTON_PRESSED\";\r\nexport const TOGGLE_UNITS_CLICKED = \"TOGGLE_UNITS_CLICKED\";\r\nexport const TOGGLE_WIDTH_MODE_CLICKED = \"TOGGLE_WIDTH_MODE_CLICKED\";\r\nexport const TOGGLE_DISPLAY_VERTICES_CLICKED = \"TOGGLE_DISPLAY_VERTICES_CLICKED\";\r\nexport const TOGGLE_DISPLAY_LABELS_CLICKED = \"TOGGLE_DISPLAY_LABELS_CLICKED\";\r\nexport const TOGGLE_SHOW_LAYER_LIST_CLICKED = \"TOGGLE_SHOW_LAYER_LIST_CLICKED\";\r\nexport const TOGGLE_DOWNLOAD_POPUP_CLICKED = \"TOGGLE_DOWNLOAD_POPUP_CLICKED\";\r\nexport const TOGGLE_UPLOAD_POPUP_CLICKED=\"TOGGLE_UPLOAD_POPUP_CLICKED\";\r\n\r\nexport const MOUSE_MOVED_ON_STAGE = \"MOUSE_MOVED_ON_STAGE\";\r\nexport const MOUSE_DOWN_ON_STAGE = \"MOUSE_DOWN_ON_STAGE\";\r\nexport const MOUSE_UP_ON_STAGE = \"MOUSE_UP_ON_STAGE\";\r\nexport const MOUSE_WHEEL_MOVE_ON_STAGE = \"MOUSE_WHEEL_MOVE_ON_STAGE\";\r\n\r\nexport const MOUSE_ROLL_OVER_SHAPE = \"MOUSE_ROLL_OVER_SHAPE\";\r\nexport const MOUSE_ROLL_OUT_SHAPE = \"MOUSE_ROLL_OUT_SHAPE\";\r\nexport const MOUSE_CLICKED_ON_SHAPE = \"MOUSE_CLICKED_ON_SHAPE\";\r\n\r\nexport const PINCH_DOWN_ON_STAGE = \"PINCH_DOWN_ON_STAGE\";\r\nexport const PINCH_MOVED_ON_STAGE = \"PINCH_MOVED_ON_STAGE\";\r\nexport const PINCH_UP_ON_STAGE = \"PINCH_UP_ON_STAGE\";\r\n\r\n// export const STAGE_SET_ORIGIN = \"STAGE_SET_ORIGIN\";\r\n// export const HOME_BUTTON_CLICKED = \"HOME_BUTTON_CLICKED\";\r\n// export const UNSET_ZOOM_HOME_FLAG = \"UNSET_ZOOM_HOME_FLAG\";\r\n// export const PAN_TO_COORDINATE = \"PAN_TO_COORDINATE\";\r\nexport const PAN_AND_ZOOM_TO_SHAPE = \"PAN_AND_ZOOM_TO_SHAPE\";\r\n\r\nexport const LAYER_LIST_PANEL_PRESSED = \"LAYER_LIST_PANEL_PRESSED\";\r\nexport const ADD_LAYER_BUTTON_PRESSED = \"ADD_LAYER_BUTTON_PRESSED\";\r\nexport const ADD_NEW_LAYER = \"ADD_NEW_LAYER\";\r\nexport const DELETE_LAYER_BUTTON_PRESSED = \"DELETE_LAYER_BUTTON_PRESSED\";\r\nexport const SORT_LAYERS_BUTTON_PRESSED = \"SORT_LAYERS_BUTTON_PRESSED\";\r\nexport const CLEAN_AND_UPDATE_LAYERS = \"CLEAN_AND_UPDATE_LAYERS\";\r\n\r\nexport const TOGGLE_DISPLAY_LAYER_PRESSED = \"TOGGLE_DISPLAY_LAYER_PRESSED\";\r\nexport const TOGGLE_AFFECTED_LAYER_PRESSED=\"TOGGLE_AFFECTED_LAYER_PRESSED\";\r\nexport const OPEN_LAYER_EDIT_FORM_PRESSED = \"OPEN_LAYER_EDIT_FORM_PRESSED\";\r\nexport const SUBMIT_LAYER_EDIT_FORM_PRESSED = \"SUBMIT_LAYER_EDIT_FORM_PRESSED\";\r\nexport const ESCAPE_LAYER_EDIT_FORM_PRESSED = \"ESCAPE_LAYER_EDIT_FORM_PRESSED\";\r\n\r\nexport const LAYERS_LIST_ARROW_DOWN_PRESSED = \"LAYERS_LIST_ARROW_DOWN_PRESSED\";\r\nexport const LAYERS_LIST_ARROW_UP_PRESSED = \"LAYERS_LIST_ARROW_UP_PRESSED\";\r\n\r\n// export const TOGGLE_WATCH_EXPAND_CLICKED = \"TOGGLE_WATCH_EXPAND_CLICKED\";\r\n\r\n// export const FILENAME_LIST_SELECTED = \"FILENAME_LIST_SELECTED\";\r\nexport const FILES_UPLOAD_COMPLETED = \"FILES_UPLOAD_COMPLETED\";\r\nexport const INITIALIZE_UPLOAD_STATE = \"INITIALIZE_UPLOAD_STATE\";\r\nexport const DATA_FROM_BUFFER_PASTED = \"DATA_FROM_BUFFER_PASTED\";\r\n\r\n/** AABB Distance Measurement DemoComponent **/\r\n// export const AABB_DEMO_URI = \"AABB_DEMO_URI\";\r\n// export const AABB_DEMO_NEXT_DIST_STEP = \"AABB_DEMO_NEXT_DIST_STEP\";\r\n// export const AABB_TREE_NEXT_LEVEL = \"AABB_TREE_NEXT_LEVEL\";\r\n\r\n/** Collision demo **/\r\n// export const COLLISION_DEMO_URI = \"COLLISION_DEMO_URI\";\r\n// export const COLLISION_DEMO_BUTTON_PRESSED = \"COLLISION_DEMO_BUTTON_PRESSED\";\r\n\r\nexport const ASYNC_OPERATION_STARTED = \"ASYNC_OPERATION_STARTED\";\r\nexport const ASYNC_OPERATION_ENDED = \"ASYNC_OPERATION_ENDED\";\r\n\r\n/** Documents list **/\r\n// export const REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED = \"REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED\";\r\n// export const REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED = \"REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED\";\r\n// export const REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED = \"REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED\";\r\n// export const REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED = \"REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED\";\r\n// export const DELETE_DOCUMENT_FROM_DATABASE_SUCCEED = \"DELETE_DOCUMENT_FROM_DATABASE_SUCCEED\";\r\n// export const DOCUMENT_SELECTED_FROM_LIST = \"DOCUMENT_SELECTED_FROM_LIST\";\r\n// export const DOCUMENT_NAME_UPDATED = \"DOCUMENT_NAME_UPDATED\";\r\nexport const CLEAR_ALL_BUTTON_CLICKED = \"CLEAR_ALL_BUTTON_CLICKED\";\r\n\r\n/* Authentication */\r\n// export const AUTHENTICATION_STARTED = \"AUTHENTICATION_STARTED\";\r\n// export const AUTHENTICATION_SUCCEED = \"AUTHENTICATION_SUCCEED\";\r\n// export const AUTHENTICATION_FAILED = \"AUTHENTICATION_FAILED\";\r\n// export const AUTHENTICATION_LOGOUT = \"AUTHENTICATION_LOGOUT\";\r\n// export const AUTHENTICATION_SET_USERNAME = \"AUTENTICATION_SET_USERNAME\";\r\n\r\n","\r\nlet defaultStyle = {\r\n    strokeStyle: 1,\r\n    stroke: \"#FF0303\",\r\n    fill: \"#FF0303\",\r\n    alpha: 1.0\r\n};\r\n\r\n/* Class Model represents data model that will be added to layer */\r\nclass Model {\r\n    constructor(geom = undefined, style = undefined, label = \"\") {\r\n        this.geom = geom;\r\n        this.style = style || defaultStyle;\r\n        this.label = label;\r\n    }\r\n\r\n    clone() {\r\n        let model = new Model(this.geom, this.style, this.label);\r\n        return Object.assign(model, this);\r\n    }\r\n\r\n    get box() {\r\n        return this.geom.box;\r\n    }\r\n/*\r\n    static transformPoint(pt, stage) {\r\n        return new Flatten.Point(stage.W2C_X(pt.x), stage.W2C_Y(pt.y));\r\n    }\r\n\r\n    static transformSegment(segment, stage) {\r\n        return new Flatten.Segment(\r\n            Model.transformPoint(segment.ps, stage),\r\n            Model.transformPoint(segment.pe, stage)\r\n        )\r\n    }\r\n\r\n    static transformArc(arc, stage) {\r\n        return new Flatten.Arc(\r\n            Model.transformPoint(arc.pc, stage),\r\n            stage.W2C_Scalar(arc.r),\r\n            arc.startAngle,\r\n            arc.endAngle,\r\n            arc.counterClockwise\r\n        )\r\n    }\r\n\r\n    static transformEdge(shape, stage) {\r\n        if (shape instanceof Flatten.Segment) {\r\n            return Model.transformSegment(shape, stage);\r\n        }\r\n        else if (shape instanceof Flatten.Arc) {\r\n            return Model.transformArc(shape, stage);\r\n        }\r\n    }\r\n\r\n    static transformFace(face, stage) {\r\n        // Get shapes of face as array\r\n        let shapes = [];\r\n        for (let edge of face) {\r\n            shapes.push(edge.shape);\r\n        }\r\n\r\n        // Transform array of edges\r\n        return shapes.map(shape => Model.transformEdge(shape, stage));\r\n    }\r\n\r\n    static transformPolygon(polygon, stage) {\r\n        let newPolygon = new Flatten.Polygon();\r\n        let shapes = [];\r\n        for (let face of polygon.faces) {\r\n            shapes = Model.transformFace(face, stage);\r\n            newPolygon.addFace(shapes);\r\n        }\r\n        return newPolygon;\r\n    }\r\n*/\r\n}\r\n\r\nexport default Model;","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport {Point, Box} from '@flatten-js/core';\r\n// import { Shape } from '../models/shape';\r\nimport Model from './model';\r\n\r\nclass Layer {\r\n    constructor(stage) {\r\n        // super();\r\n        // cannot define Layer as extension of PlanarSet due to bug in compiler ?\r\n        this.stage = stage;\r\n        this.shapes = [];         // new Flatten.PlanarSet();\r\n        this.name = \"\";\r\n        this.color = \"\";\r\n        this.title = \"\";\r\n        this.displayed = false;\r\n        this.edited = false;\r\n        this.affected = false;\r\n    }\r\n\r\n    clone() {\r\n        let layer = new Layer(this.stage);\r\n        return Object.assign(layer, this);\r\n    }\r\n\r\n    add(shape) {\r\n        if (shape instanceof Model) {\r\n            this.shapes.push(shape);       // add(shape)\r\n        }\r\n        else {\r\n            let geom = shape;\r\n            let newShape = new Model(geom, {}, shape.label) // , this.stage);\r\n            this.shapes.push(newShape);     // add(newShape);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    addShapesArray(shapes) {\r\n        for (let shape of shapes) {\r\n            this.add(shape);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get box() {\r\n        let box = new Box();\r\n        for (let shape of this.shapes) {\r\n            box = box.merge(shape.geom instanceof Box ? shape.clone() : shape.box);\r\n        }\r\n        return box;\r\n    }\r\n\r\n    get center() {\r\n        let box = this.box;\r\n        return new Point((box.xmin + box.xmax)/2, (box.ymin + box.ymax)/2);\r\n    }\r\n\r\n    toggleDisplayed(color) {\r\n        let displayed = !this.displayed;\r\n        return Object.assign(this.clone(),\r\n            {\r\n                displayed : displayed,\r\n                color: color\r\n            });\r\n    }\r\n\r\n    setAffected(affected) {\r\n        this.affected = affected;\r\n        return this;\r\n        // return Object.assign(this.clone(),\r\n        //     {\r\n        //         affected : affected\r\n        //     });\r\n    }\r\n\r\n    setEdited(edited) {\r\n        return Object.assign(this.clone(),\r\n            {\r\n                edited : edited\r\n            });\r\n    }\r\n\r\n    setNameAndTitle(name,title) {\r\n        return Object.assign(this.clone(),\r\n            {\r\n                name : name,\r\n                title: title,\r\n                edited: false\r\n            });\r\n    }\r\n\r\n    setAlpha() {\r\n        for(let shape of this.shapes) {\r\n            shape.alpha = this.displayed ? 1 : 0;\r\n        }\r\n        return this.shapes;\r\n    }\r\n\r\n    // toggleExpanded(shapeToggle) {\r\n    //     for(let shape of this.shapes) {\r\n    //         if (shape === shapeToggle) {\r\n    //             shape.expanded = !shape.expanded;\r\n    //         }\r\n    //     }\r\n    //     return this;\r\n    // }\r\n\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            title: this.title,\r\n            shapes: JSON.stringify(this.shapes, null, ' ')\r\n        };\r\n    }\r\n}\r\n\r\nexport default Layer;\r\n","/**\r\n * Created by alexanderbol on 20/04/2017.\r\n */\r\n\r\nimport Layer from '../models/layer';\r\n\r\nconst colors = [\r\n    \"#FF0303\",\r\n    \"#4AA403\",\r\n    \"#540080\",\r\n    \"#FFFF40\",\r\n    \"#FF0080\",\r\n    \"#AED424\",\r\n    \"#545400\",\r\n    \"#FFA980\",\r\n    \"#A95480\",\r\n    \"#A9A9FF\",\r\n    \"#00FF00\",\r\n    \"#FFEE76\",\r\n    \"#A40576\",\r\n    \"#4385C8\",\r\n    \"#1CC826\",\r\n    \"#BDBD00\",\r\n    \"#48316E\",\r\n    \"#14616E\",\r\n    \"#8040BD\",\r\n    \"#DC7676\",\r\n    \"#924845\",\r\n    \"#A90000\",\r\n    \"#FFA900\"\r\n];\r\n\r\nclass Layers {\r\n\r\n    static newLayer(stage, layers) {\r\n        let layer = new Layer(stage);\r\n        layer.name = Layers.getNewName(layers);\r\n        if (layers.length === 0) { // first layer\r\n            // layer.color = Layers.getNextColor(layersReducer);\r\n            layer.displayed = false;\r\n            layer.affected = false;\r\n        }\r\n        return layer;\r\n    }\r\n\r\n    static get defaultName() {\r\n        return \"layer\";\r\n    }\r\n\r\n    static getNewName(layers) {\r\n        let name = Layers.defaultName;\r\n        let inc = 1;\r\n        let comparator = (layer) => layer.name === name;\r\n        while (layers.find(comparator) ) {\r\n            name = Layers.defaultName + inc;\r\n            inc++;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    static getAffected(layers) {\r\n        return layers.find((lay) => lay.affected);\r\n    }\r\n\r\n    static setAffected(layers, layer) {\r\n        let currentAffectedLayer = Layers.getAffected(layers);\r\n        if (currentAffectedLayer) {\r\n            currentAffectedLayer.affected = false;\r\n        }\r\n        layer.affected = true;\r\n    }\r\n\r\n    static getNextColor(layers) {\r\n        let color = \"\";\r\n        for (let col of colors) {\r\n            if (!layers.find((layer) =>\r\n                layer.displayed && layer.color === col)) {\r\n                color = col;\r\n                break;\r\n            }\r\n        }\r\n        return color;\r\n    }\r\n\r\n    static delete(layers, layer) {\r\n        let index = layers.findIndex((l) => l === layer);\r\n        let newLayers = layers.filter(l => l !== layer);\r\n        if (index > 0) {\r\n            newLayers[index-1].affected = true;\r\n            if (newLayers[index-1].color === \"\") {\r\n                newLayers[index - 1].color = Layers.getNextColor(newLayers);\r\n            }\r\n            newLayers[index-1].displayed = true;\r\n        }\r\n        return newLayers;\r\n        // another option to delete from array:\r\n        // const newLayers = [...layersReducer]\r\n        // return newLayers.splice( index, 1);\r\n    }\r\n\r\n    static sort(layers) {\r\n        let newLayers = layers.slice();\r\n        newLayers.sort( function(l1, l2) {\r\n            let name1 = l1.name.toUpperCase();\r\n            let name2 = l2.name.toUpperCase();\r\n            if (name1 < name2) {\r\n                return -1;\r\n            }\r\n            if (name1 > name2) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n        return newLayers;\r\n    }\r\n\r\n    static toJSON(layers) {\r\n        return layers.map( layer => layer.toJSON() );\r\n    }\r\n}\r\n\r\nexport default Layers;\r\n","import * as ActionTypes from \"../actionTypes\";\r\nimport Layers from \"../../models/layers\";\r\n\r\nconst layersReducer = (state = [], action) => {\r\n    let affectedLayer = state.find(layer => layer.affected);\r\n    let affectedLayerId = state.findIndex(layer => layer.affected);\r\n    let newLayer;\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LAYER_BUTTON_PRESSED:\r\n            newLayer = Layers.newLayer(action.stage, state);\r\n            return [...state, newLayer];\r\n\r\n        case ActionTypes.ADD_NEW_LAYER:\r\n            return [...state, action.layer];\r\n\r\n        case ActionTypes.DELETE_LAYER_BUTTON_PRESSED:\r\n            if (affectedLayer) {\r\n                return Layers.delete(state, affectedLayer);\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        case ActionTypes.CLEAR_ALL_BUTTON_CLICKED:\r\n            return [];\r\n\r\n        case ActionTypes.SORT_LAYERS_BUTTON_PRESSED:\r\n            return Layers.sort(state);\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED:\r\n            let color = \"\";\r\n            if (!action.layer.displayed) {\r\n                color = Layers.getNextColor(state);\r\n                if (color === \"\") return;  // no free colors\r\n            }\r\n            return state.map((layer) => {\r\n                if (layer !== action.layer) {\r\n                    // if action.layer will be undisplayed,\r\n                    // it cannot become affected, then\r\n                    // keep affected on this layer\r\n                    if (action.layer.displayed) {\r\n                        return layer;\r\n                    }\r\n                    else {\r\n                        return layer.setAffected(false);\r\n                    }\r\n                }\r\n                else {\r\n                    let newLayer = layer.toggleDisplayed(color);\r\n                    newLayer.affected = newLayer.displayed;\r\n                    return newLayer;\r\n                }\r\n                // return layer.toggleDisplayed(color);\r\n            });\r\n\r\n        case ActionTypes.TOGGLE_AFFECTED_LAYER_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer !== action.layer) {\r\n                    return layer.setAffected(false);\r\n                }\r\n                else {\r\n                    return layer.setAffected(!layer.affected);\r\n                }\r\n            });\r\n\r\n        // case ActionTypes.NEW_SHAPE_PASTED:\r\n        //     return state.map((layer) => {\r\n        //         if (layer.affected) {\r\n        //             return layer.addShapesArray(action.shapesArray);\r\n        //         }\r\n        //         else {\r\n        //             return layer;\r\n        //         }\r\n        //     });\r\n\r\n        case ActionTypes.OPEN_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer !== affectedLayer) {\r\n                    return layer;\r\n                }\r\n                else {\r\n                    return layer.setEdited(true);\r\n                }\r\n            });\r\n\r\n        case ActionTypes.SUBMIT_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer.edited) {\r\n                    return layer.setNameAndTitle(action.newLayer.name, action.newLayer.title);\r\n                }\r\n                else {\r\n                    return layer;\r\n                }\r\n            });\r\n\r\n        case ActionTypes.ESCAPE_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer.edited) {             // !== action.layer) {\r\n                    return layer.setEdited(false);\r\n                }\r\n                else {\r\n                    return layer;\r\n                }\r\n            });\r\n\r\n        case ActionTypes.LAYERS_LIST_ARROW_DOWN_PRESSED:\r\n            if (affectedLayerId === state.length - 1) {\r\n                return state;\r\n            }\r\n            else {\r\n\r\n                let nextLayer = state[affectedLayerId + 1];\r\n\r\n                return state.map(layer => {\r\n                    if (layer === affectedLayer) {\r\n                        let newCurLayer = layer.toggleDisplayed(\"\");\r\n                        newCurLayer.affected = false;\r\n                        return newCurLayer;\r\n                    }\r\n                    else if (layer === nextLayer) {\r\n                        let color = affectedLayer.color;\r\n                        let newNextLayer = layer.toggleDisplayed(color);\r\n                        newNextLayer.affected = true;\r\n                        return newNextLayer;\r\n                    }\r\n                    else {\r\n                        return layer;\r\n                    }\r\n                });\r\n            }\r\n\r\n        case ActionTypes.LAYERS_LIST_ARROW_UP_PRESSED:\r\n            if (affectedLayerId === 0) {\r\n                return state;\r\n            }\r\n            else {\r\n                let nextLayer = state[affectedLayerId - 1];\r\n\r\n                return state.map(layer => {\r\n                    if (layer === affectedLayer) {\r\n                        let newCurLayer = layer.toggleDisplayed(\"\");\r\n                        newCurLayer.affected = false;\r\n                        return newCurLayer;\r\n                    }\r\n                    else if (layer === nextLayer) {\r\n                        let newNextLayer = layer.toggleDisplayed(affectedLayer.color);\r\n                        newNextLayer.displayed = true;\r\n                        newNextLayer.affected = true;\r\n                        return newNextLayer;\r\n                    }\r\n                    else {\r\n                        return layer;\r\n                    }\r\n                });\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layersReducer;\r\n","import * as ActionTypes from \"../actionTypes\";\r\nimport Flatten from \"@flatten-js/core\";\r\n\r\nexport const defaultMeasureShapesState = {\r\n    measureShapesActive: false,\r\n    measureShapesFirstClick: true,\r\n    hoveredShape: null,\r\n    firstMeasuredShape: null,\r\n    secondMeasuredShape: null,\r\n    firstMeasuredLayer: null,\r\n    secondMeasuredLayer: null,\r\n    distance: undefined,\r\n    shortestSegment: null\r\n};\r\n\r\nconst is_mobile = window.mobilecheck();\r\n\r\nconst measureShapesReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED:\r\n            return {\r\n                ...state,\r\n                measureShapesActive: true\r\n            };\r\n        case ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED:\r\n            return defaultMeasureShapesState;\r\n\r\n        case ActionTypes.MEASURE_POINTS_BUTTON_PRESSED:\r\n            return defaultMeasureShapesState;\r\n\r\n        case ActionTypes.MOUSE_ROLL_OVER_SHAPE:\r\n            return {\r\n                ...state,\r\n                hoveredShape: state.measureShapesActive ? action.shape : null\r\n            };\r\n        case ActionTypes.MOUSE_ROLL_OUT_SHAPE:\r\n            return {\r\n                ...state,\r\n                hoveredShape: null\r\n            };\r\n        case ActionTypes.MOUSE_CLICKED_ON_SHAPE:\r\n            if (!state.measureShapesActive) {\r\n                return state;\r\n            }\r\n            // measureShapesActive\r\n\r\n            if (state.measureShapesFirstClick) {\r\n                return {\r\n                    ...state,\r\n                    firstMeasuredShape: action.shape,\r\n                    firstMeasuredLayer: action.layer,\r\n                    secondMeasuredShape: null,\r\n                    secondMeasuredLayer: null,\r\n                    measureShapesFirstClick: false,\r\n                    distance: undefined,\r\n                    shortestSegment: null\r\n                }\r\n            }\r\n            else {    // second click\r\n                if (action.shape === state.firstMeasuredShape) {\r\n                    return state;  // second click on the same shape\r\n                }\r\n\r\n                let shape1 = state.firstMeasuredShape.geom;\r\n                let shape2 = action.shape.geom;\r\n                let distance, shortestSegment;\r\n                // if (shape1 instanceof Flatten.Polygon && shape2 instanceof Flatten.Polygon) {\r\n                //     [distance, shortestSegment] = Flatten.Distance.polygon2polygon(shape1, shape2);\r\n                // }\r\n                // else {\r\n                [distance, shortestSegment] = Flatten.Distance.distance(shape1, shape2);\r\n                // }\r\n\r\n\r\n                return {\r\n                    ...state,\r\n                    secondMeasuredShape: action.shape,\r\n                    secondMeasuredLayer: action.layer,\r\n                    measureShapesFirstClick: true,\r\n                    distance: distance,\r\n                    shortestSegment: shortestSegment\r\n                };\r\n            }\r\n        case ActionTypes.MOUSE_DOWN_ON_STAGE:\r\n            if (state.hoveredShape || is_mobile) {\r\n                return state\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    measureShapesFirstClick: true,\r\n                    firstMeasuredShape: null,\r\n                    firstMeasuredLayer: null,\r\n                    secondMeasuredShape: null,\r\n                    secondMeasuredLayer: null,\r\n                    distance: undefined,\r\n                    shortestSegment: null\r\n                };\r\n            }\r\n\r\n        case ActionTypes.DELETE_LAYER_BUTTON_PRESSED:\r\n            // TODO: dispatch action on delete layer to come here\r\n            if (action.layer === state.firstMeasuredLayer ||\r\n                action.layer === state.secondMeasuredLayer) {\r\n                return defaultMeasureShapesState;\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED:\r\n            // TODO: dispatch action on delete layer to come here\r\n            if (action.layer.displayed &&\r\n                (action.layer === state.firstMeasuredLayer ||\r\n                    action.layer === state.secondMeasuredLayer)) {\r\n                return defaultMeasureShapesState;\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default measureShapesReducer;","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const addEmptyLayer = (stage) => {\r\n    return {\r\n        type: ActionTypes.ADD_LAYER_BUTTON_PRESSED,\r\n        stage: stage\r\n    }\r\n};\r\n\r\nexport const addNewLayer = (layer) => {\r\n    return {\r\n        type: ActionTypes.ADD_NEW_LAYER,\r\n        layer\r\n    }\r\n};\r\n\r\nexport const deleteAffectedLayer = () => {\r\n    return {\r\n        type: ActionTypes.DELETE_LAYER_BUTTON_PRESSED\r\n    };\r\n};\r\n\r\nexport const sortLayers = () => {\r\n    return {\r\n        type: ActionTypes.SORT_LAYERS_BUTTON_PRESSED\r\n    };\r\n};\r\n\r\nexport const toggleDisplayLayer = (layer) => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED,\r\n        layer\r\n    }\r\n};\r\n\r\nexport const toggleAffectedLayer = (event, layer) => {\r\n    event.stopPropagation();\r\n    return {\r\n        type: ActionTypes.TOGGLE_AFFECTED_LAYER_PRESSED,\r\n        layer: layer\r\n    };\r\n};\r\n\r\nexport const updateLayer = (newLayer) => {\r\n    return {\r\n        type: ActionTypes.SUBMIT_LAYER_EDIT_FORM_PRESSED,\r\n        newLayer: newLayer\r\n    };\r\n};\r\n\r\nexport const closeEditLayerForm = () => {\r\n    return {\r\n        type: ActionTypes.ESCAPE_LAYER_EDIT_FORM_PRESSED\r\n    };\r\n};\r\n\r\nexport const openAffectedLayerEditForm = () => {\r\n    return {\r\n        type: ActionTypes.OPEN_LAYER_EDIT_FORM_PRESSED,\r\n    }\r\n};\r\n\r\nexport const setAffectedNextLayer = () => {\r\n    return {\r\n        type: ActionTypes.LAYERS_LIST_ARROW_DOWN_PRESSED\r\n    }\r\n};\r\n\r\nexport const setAffectedPrevLayer = () => {\r\n    return {\r\n        type: ActionTypes.LAYERS_LIST_ARROW_UP_PRESSED\r\n    }\r\n};\r\n\r\nexport const deleteAllLayers = () => {\r\n    return {\r\n        type: ActionTypes.CLEAR_ALL_BUTTON_CLICKED,\r\n    }\r\n}\r\n\r\n\r\n\r\n","export const is_equal = (obj1, obj2) => {\r\n    let equal = true;\r\n    for (let key of Object.keys(obj2)) {\r\n        if (obj2[key] !== obj1[key]) {\r\n            equal = false;\r\n            break;\r\n        }\r\n    }\r\n    return equal;\r\n};\r\n\r\nexport const format = (num, divisor, decimals) => {\r\n    return (num/divisor).toFixed(decimals);\r\n};\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\nimport {format} from '../../models/utils';\r\nimport styles from './DisplayCoordinatesTool.module.css';\r\n\r\nconst DisplayCoordinatesTool = ({stage, coordX, coordY, divisor, decimals}) => {\r\n    if (!stage) return null;\r\n    let mainCanvas = stage.canvas;\r\n    let top = mainCanvas.offsetTop + 10;\r\n    let left = mainCanvas.width - 200; //  mainCanvas.offsetLeft + 10;\r\n    let x = stage.C2W_X(coordX);\r\n    let y = stage.C2W_Y(coordY);\r\n    return (\r\n        <div style={{position: 'absolute', top: top, left: left}} className={styles.DisplayCoordinatesTool}>\r\n            <h5>\r\n                X: {format(x,divisor,decimals)} Y: {format(y,divisor,decimals)}\r\n            </h5>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DisplayCoordinatesTool;\r\n","import {Fragment, useEffect} from 'react';\r\n\r\nconst StageComponent = ({children, stage, layers, transform, controls}) => {\r\n    useEffect( () => {\r\n        if (stage.canvas && stage.canvas.getContext('2d')) {\r\n\r\n            let originX = transform.originX;\r\n            let originY = transform.originY;\r\n            let zoomFactor = transform.zoomFactor * transform.resolution;\r\n            stage.setTransform(originX, originY, zoomFactor, -zoomFactor);\r\n\r\n            stage.update();\r\n        }\r\n\r\n        return () => {\r\n            // this.props.onStageUnmounted();\r\n        }\r\n    }, [stage, layers, transform]);\r\n\r\n    useEffect(() => {\r\n        if (stage.canvas && stage.canvas.getContext('2d')) {\r\n            stage.update();\r\n        }\r\n    }, [stage, layers, controls])\r\n\r\n    return (\r\n        <Fragment>\r\n            {children}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default StageComponent;\r\n","import * as ActionTypes from \"../actionTypes\";\r\n\r\nexport const defaultMouseState = {\r\n    x: 0,\r\n    y: 0,\r\n    startX: undefined,\r\n    startY: undefined,\r\n    touchPoints: undefined,\r\n    delta: 0,\r\n    ratio: 1\r\n};\r\n\r\nconst mouse = (state = defaultMouseState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.MOUSE_MOVED_ON_STAGE:\r\n            return {...state,\r\n                x: action.x,\r\n                y: action.y,\r\n                delta: 0\r\n            };\r\n\r\n        case ActionTypes.MOUSE_DOWN_ON_STAGE:\r\n            return {...state,\r\n                startX: action.x,\r\n                startY: action.y,\r\n                delta: 0\r\n            };\r\n\r\n        case ActionTypes.MOUSE_UP_ON_STAGE:\r\n            return {...state,\r\n                startX: undefined,\r\n                startY: undefined,\r\n                delta: 0\r\n            };\r\n\r\n        case ActionTypes.MOUSE_WHEEL_MOVE_ON_STAGE:\r\n            return {...state,\r\n                startX: undefined,\r\n                startY: undefined,\r\n                delta: action.delta\r\n            };\r\n\r\n        case ActionTypes.PINCH_DOWN_ON_STAGE: {\r\n            return {\r\n                ...state,\r\n                touchPoints: [\r\n                    {x: action.x1, y: action.y1},\r\n                    {x: action.x2, y: action.y2}\r\n                ],\r\n                ratio: 1.0\r\n            }\r\n        }\r\n\r\n        case ActionTypes.PINCH_MOVED_ON_STAGE: {\r\n            let dx = state.touchPoints[0].x - state.touchPoints[1].x;\r\n            let dy = state.touchPoints[0].y - state.touchPoints[1].y;\r\n            let distStart = Math.sqrt(dx*dx + dy*dy);\r\n\r\n            dx = action.x2 - action.x1;\r\n            dy = action.y2 - action.y1;\r\n            let distCurrent = Math.sqrt(dx*dx + dy*dy);\r\n            let ratio = distCurrent / distStart;\r\n\r\n            return {\r\n                ...state,\r\n                touchPoints: [\r\n                    {x: action.x1, y: action.y1},\r\n                    {x: action.x2, y: action.y2}\r\n                ],\r\n                ratio: ratio\r\n            }\r\n        }\r\n\r\n        case ActionTypes.PINCH_UP_ON_STAGE: {\r\n            return {\r\n                ...state,\r\n                touchPoints: undefined,\r\n                ratio: 1.0\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mouse;\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const registerStage = (stage) => {\r\n    return {\r\n        type: ActionTypes.NEW_STAGE_CREATED,\r\n        stage: stage\r\n    }\r\n};\r\n\r\nexport const handleMouseDown = (stage, x, y) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_DOWN_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y\r\n    }\r\n};\r\n\r\nexport const handleMouseUp = (stage, x, y) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_UP_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y\r\n    }\r\n};\r\n\r\nexport const handleMouseMove = (stage, x, y/*, dx, dy*/) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_MOVED_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y\r\n        // dx: dx,\r\n        // dy: dy\r\n    }\r\n};\r\n\r\nexport const handleMouseWheelMove = (stage, x, y, delta) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_WHEEL_MOVE_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y,\r\n        delta: delta\r\n    }\r\n};\r\n\r\nexport const handlePinchDown = (stage, touchPoints) => {\r\n    return {\r\n        type: ActionTypes.PINCH_DOWN_ON_STAGE,\r\n        stage: stage,\r\n        x1: touchPoints[0].x,\r\n        y1: touchPoints[0].y,\r\n        x2: touchPoints[1].x,\r\n        y2: touchPoints[1].y\r\n    }\r\n};\r\n\r\nexport const handlePinchMove = (stage, touchPoints) => {\r\n    return {\r\n        type: ActionTypes.PINCH_MOVED_ON_STAGE,\r\n        stage: stage,\r\n        x1: touchPoints[0].x,\r\n        y1: touchPoints[0].y,\r\n        x2: touchPoints[1].x,\r\n        y2: touchPoints[1].y\r\n    }\r\n};\r\n\r\nexport const handlePinchUp = (stage) => {\r\n    return {\r\n        type: ActionTypes.PINCH_UP_ON_STAGE,\r\n        stage\r\n    }\r\n};\r\n\r\n\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\nimport {Box} from '@flatten-js/core';\r\nimport { Stage as CreatejsStage, Touch } from \"@createjs/easeljs\";\r\n\r\nclass Stage extends CreatejsStage {\r\n    constructor(canvas) {\r\n        super(canvas);\r\n\r\n        Touch.enable(this);\r\n        this.mouseMoveOutside = false;   // true;\r\n        // this.enableDOMEvents(false);\r\n        this.enableMouseOver(20);\r\n\r\n        if (this.canvas.clientWidth > 0 && this.canvas.clientHeight > 0) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n            // this.updateViewport(this.canvas.width, this.canvas.height);\r\n        }\r\n        this.origin = {x: this.canvas.width / 2, y: this.canvas.height / 2};\r\n        this.resolution = 0.00001;          // MM 2 Pixels when zoomFactor = 1;\r\n        this.zoomFactor = 1.0;\r\n\r\n        this.oldOrigin = {x: undefined, y: undefined};   // used by pan\r\n        // used by zoom by pinch\r\n        this.oldZoomFactor = undefined;\r\n        this.pinchAnchorX = undefined;\r\n        this.pinchAnchorY = undefined;\r\n        this.pinchStarted = false;\r\n    }\r\n\r\n    get box() {\r\n        let minX = this.C2W_X(0);\r\n        let minY = this.C2W_Y(this.canvas.height);\r\n        let maxX = this.C2W_X(this.canvas.width);\r\n        let maxY = this.C2W_Y(0);\r\n\r\n        return ( new Box(minX, minY, maxX, maxY) );\r\n    }\r\n\r\n    clone() {\r\n        let stage = new Stage(this.canvas);\r\n        return Object.assign(stage, this);\r\n    }\r\n\r\n    add(shape) {\r\n        this.addChild(shape);\r\n        return this;\r\n    }\r\n\r\n    scalingFactor() {\r\n        return this.resolution * this.zoomFactor;\r\n    }\r\n\r\n    C2W_Scalar(scalar) {\r\n        return (scalar / this.scalingFactor());\r\n    }\r\n\r\n    W2C_Scalar(scalar) {\r\n        return (this.scalingFactor() * scalar);\r\n    }\r\n\r\n    C2W_X(canvasX) {\r\n        return ((canvasX - this.origin.x) / this.scalingFactor());\r\n    }\r\n\r\n    C2W_Y(canvasY) {\r\n        return ((this.origin.y - canvasY) / this.scalingFactor());\r\n    }\r\n\r\n    W2C_X(worldX) {\r\n        return (this.scalingFactor() * worldX + this.origin.x);\r\n    }\r\n\r\n    W2C_Y(worldY) {\r\n        return (this.origin.y - this.scalingFactor() * worldY);\r\n    }\r\n\r\n    W2C(point) {\r\n        return {x: this.W2C_X(point.x), y: this.W2C_Y(point.y)}\r\n    }\r\n\r\n    panTo(newOrigin) {\r\n        this.origin = {x: newOrigin.x, y: newOrigin.y}\r\n    }\r\n\r\n    panBy(deltaX, deltaY) {\r\n        this.origin = {\r\n            x: this.origin.x + deltaX,\r\n            y: this.origin.y + deltaY\r\n        }\r\n    }\r\n\r\n    // zoom by 10% each time\r\n    zoomIn(ratio) {\r\n        let curRatio = ratio || 1.1;\r\n        this.zoomFactor = Math.min(10000000, curRatio * this.zoomFactor);\r\n    }\r\n\r\n    zoomOut(ratio) {\r\n        let curRatio = ratio || 1.1;\r\n        this.zoomFactor = Math.max(0.001, this.zoomFactor / curRatio);\r\n    }\r\n\r\n    // ZoomIn/Out + \"Focus follows mouse\"\r\n    zoom(focusX, focusY, bIn, ratio) {\r\n        let worldX = this.C2W_X(focusX);    // world coordinate of mouse focus before zoom\r\n        let worldY = this.C2W_Y(focusY);\r\n\r\n        bIn ? this.zoomIn(ratio) : this.zoomOut(ratio);\r\n\r\n        let newFocusX = this.W2C_X(worldX); // canvas coordinate after zoom\r\n        let newFocusY = this.W2C_Y(worldY);\r\n\r\n        this.panBy(focusX - newFocusX, focusY - newFocusY);\r\n\r\n        return [newFocusX, newFocusY];\r\n    }\r\n\r\n    zoomByMouse(focusX, focusY, bIn, ratio) {\r\n        this.zoom(focusX, focusY, bIn, ratio);\r\n        return {\r\n            originX: this.origin.x,\r\n            originY: this.origin.y,\r\n            resolution: this.resolution,\r\n            zoomFactor: this.zoomFactor\r\n        };\r\n    }\r\n\r\n    zoomToLimits(width, height) {\r\n        // prevent zero division in case of single point box\r\n        if (width === 0) width = 400000;\r\n        if (height === 0) height = 400000;\r\n        let resolution = Math.min(this.canvas.width / (1.1*width), this.canvas.height / (1.1*height));\r\n        let zoomFactor = resolution / this.resolution;\r\n        let ratio = zoomFactor / this.zoomFactor;\r\n        let bIn = true; //ratio > 1;\r\n\r\n        let focusX = this.canvas.width/2;\r\n        let focusY = this.canvas.height/2;\r\n        this.zoom(focusX, focusY, bIn, ratio);\r\n\r\n        return {\r\n            originX: this.origin.x,\r\n            originY: this.origin.y,\r\n            resolution: this.resolution,\r\n            zoomFactor: this.zoomFactor\r\n        };\r\n    }\r\n\r\n    resize() {\r\n        // this.origin.x = this.canvas.width / 2;\r\n        // this.origin.y = this.canvas.height / 2;\r\n        if (this.canvas.clientWidth > 0 && this.canvas.clientHeight > 0) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n        }\r\n    }\r\n\r\n    // drawSomething() {\r\n    //     let shape = new Shape();\r\n    //     shape.graphics.beginFill('red').drawRect(0, 0, 20, 20);\r\n    //     this.addChild(shape);\r\n    //     this.update();\r\n    // }\r\n\r\n    panByMouseStart() {\r\n        this.oldOrigin.x = this.origin.x;\r\n        this.oldOrigin.y = this.origin.y;\r\n        this.zoomByPinchStop();\r\n    }\r\n\r\n    panByMouseMove(dx, dy) {\r\n        if (this.pinchStarted) return;\r\n        if (dx !== undefined && dy !== undefined &&\r\n            this.oldOrigin.x !== undefined && this.oldOrigin.y !== undefined) {\r\n            this.origin = {\r\n                    x: this.oldOrigin.x + dx,\r\n                    y: this.oldOrigin.y + dy\r\n                };\r\n        }\r\n        return {\r\n            originX: this.origin.x,\r\n            originY: this.origin.y,\r\n            resolution: this.resolution,\r\n            zoomFactor: this.zoomFactor\r\n        };\r\n    }\r\n\r\n    panByMouseStop() {\r\n        this.oldOrigin.x = undefined;\r\n        this.oldOrigin.y = undefined;\r\n    }\r\n\r\n    panToCoordinate(x, y) {\r\n        let canvasX = this.W2C_X(x);\r\n        let canvasY = this.W2C_Y(y);\r\n\r\n        let dx = this.canvas.width / 2 - canvasX;\r\n        let dy = this.canvas.height / 2 - canvasY;\r\n        this.panBy(dx, dy);\r\n    }\r\n\r\n    zoomByPinchStart(canvasX, canvasY) {\r\n        this.oldZoomFactor = this.zoomFactor;\r\n        this.pinchAnchorX = this.C2W_X(canvasX);\r\n        this.pinchAnchorY = this.C2W_Y(canvasY);\r\n        this.pinchStarted = true;\r\n        this.panByMouseStop();\r\n    }\r\n\r\n    zoomByPinchMove(canvasX, canvasY, ratio) {\r\n        this.zoomFactor = ratio * this.oldZoomFactor;\r\n        this.origin = {\r\n            x: canvasX - this.scalingFactor() * this.pinchAnchorX,\r\n            y: canvasY + this.scalingFactor() * this.pinchAnchorY\r\n        }\r\n        return {\r\n            originX: this.origin.x,\r\n            originY: this.origin.y,\r\n            resolution: this.resolution,\r\n            zoomFactor: this.zoomFactor\r\n        }\r\n    }\r\n\r\n    zoomByPinchStop() {\r\n        this.oldZoomFactor = undefined;\r\n        this.pinchAnchorX = undefined;\r\n        this.pinchAnchorY = undefined;\r\n        this.pinchStarted = false;\r\n    }\r\n\r\n    setHome(shape) {\r\n        const center = shape.center;\r\n        const box = shape.box;\r\n        if (isNaN(center.x) || isNaN(center.y)) return;\r\n        this.panToCoordinate(center.x, center.y);\r\n        this.zoomToLimits(box.xmax - box.xmin, box.ymax - box.ymin);\r\n    }\r\n\r\n    getInitialTransform(shape) {\r\n        this.setHome(shape);\r\n        return {\r\n            originX: this.origin.x,\r\n            originY: this.origin.y,\r\n            resolution: this.resolution,\r\n            zoomFactor: this.zoomFactor}\r\n    }\r\n\r\n    clear() {\r\n        this.canvas.getContext('2d').clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n}\r\n\r\nexport default Stage;\r\n","import {useCallback, useEffect, useReducer, useState} from \"react\";\r\nimport mouse, {defaultMouseState} from \"../store/reducers/mouse\";\r\nimport * as stageActions from \"../store/actions/stageActions\";\r\nimport Stage from \"../models/stage\";\r\n\r\nconst useMouse = (canvasElement) => {\r\n    const [stage, setStage] = useState(null);\r\n    const [mouseState, mouseDispatch] = useReducer(mouse, defaultMouseState);\r\n\r\n    const getTouchPoints = (event) => {\r\n        const touchPoints = [\r\n            {\r\n                x: event.nativeEvent.touches[0].clientX - event.nativeEvent.target.offsetLeft,\r\n                y: event.nativeEvent.touches[0].clientY - event.nativeEvent.target.offsetTop\r\n            },\r\n            {\r\n                x: event.nativeEvent.touches[1].clientX - event.nativeEvent.target.offsetLeft,\r\n                y: event.nativeEvent.touches[1].clientY - event.nativeEvent.target.offsetTop\r\n            },\r\n        ];\r\n        return touchPoints;\r\n    }\r\n\r\n    const handleMouseMove = useCallback( (event) => {\r\n        stage.canvas.focus();\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n             mouseDispatch(stageActions.handleMouseMove(stage, event.stageX, event.stageY));\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            const touchPoints = getTouchPoints(event);\r\n            mouseDispatch(stageActions.handlePinchMove(stage, touchPoints));\r\n        }\r\n    }, [stage])\r\n\r\n    const handleMouseDown = useCallback( (event) => {\r\n        // if (event.pointerID === -1 || event.pointerID === 0) {\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n            stage.panByMouseStart();\r\n            mouseDispatch(stageActions.handleMouseDown(stage, event.stageX, event.stageY));\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            const touchPoints = getTouchPoints(event);\r\n            stage.zoomByPinchStart(touchPoints[0].x, touchPoints[0].y);\r\n            mouseDispatch(stageActions.handlePinchDown(stage, touchPoints));\r\n        }\r\n    }, [stage]);\r\n\r\n    const handleMouseUp = useCallback( (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n            stage.panByMouseStop();\r\n            mouseDispatch(stageActions.handleMouseUp(stage));\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            stage.zoomByPinchStop();\r\n            mouseDispatch(stageActions.handlePinchUp(stage));\r\n        }\r\n    }, [stage]);\r\n\r\n    const handleMouseLeave = useCallback( (event) => {   // nothing works except click\r\n        stage.canvas.blur();\r\n        document.body.focus();\r\n    }, [stage]);\r\n\r\n    const handleMouseWheel = useCallback((event) => {\r\n        let delta = event.detail || event.wheelDelta;\r\n        // if (delta !== 0) {\r\n            mouseDispatch(stageActions.handleMouseWheelMove(stage, event.offsetX, event.offsetY, delta));\r\n        // }\r\n    },[stage]);\r\n\r\n    const handleMouseWheelFox = useCallback((event) => {\r\n        /*event.preventDefault();*/\r\n        // if (event.detail !== 0) {\r\n            mouseDispatch(stageActions.handleMouseWheelMove(stage, event.layerX, event.layerY, -event.detail));\r\n        // }\r\n    },[stage]);\r\n\r\n    useEffect( () => {\r\n        if (canvasElement) {\r\n            const newStage = new Stage(canvasElement);\r\n            setStage(newStage);\r\n        }\r\n    },[canvasElement])\r\n\r\n    useEffect( () => {\r\n        if (stage) {\r\n            stage.on(\"stagemousedown\", handleMouseDown);\r\n            stage.on(\"stagemousemove\", handleMouseMove);\r\n            stage.on(\"stagemouseup\", handleMouseUp);\r\n            stage.on(\"mouseleave\", handleMouseLeave);\r\n            stage.canvas.addEventListener(\"mousewheel\", handleMouseWheel, {passive: true});\r\n            stage.canvas.addEventListener(\"DOMMouseScroll\", handleMouseWheelFox, {passive: true});\r\n\r\n            return () => {\r\n                stage.off(\"stagemousedown\", handleMouseDown);\r\n                stage.off(\"stagemousemove\", handleMouseMove);\r\n                stage.off(\"stagemouseup\", handleMouseUp);\r\n                stage.off(\"mouseleave\", handleMouseLeave);\r\n                stage.canvas.removeEventListener(\"mousewheel\", handleMouseWheel);\r\n                stage.canvas.removeEventListener(\"DOMMouseScroll\", handleMouseWheelFox);\r\n            }\r\n        }\r\n    },[stage, handleMouseDown, handleMouseMove, handleMouseUp, handleMouseLeave,\r\n        handleMouseWheel, handleMouseWheelFox]);\r\n\r\n    // console.log(mouseState)\r\n\r\n    return [stage, mouseState];\r\n}\r\n\r\nexport default useMouse;\r\n","import {Point, Segment, Circle, Arc, Polygon, Box} from '@flatten-js/core';\r\nimport {Graphics} from '@createjs/easeljs';\r\n\r\n/* Provide conversion methods from FlattenJS objects to CreateJS Graphics */\r\nexport function graphics(shape, style = undefined) {\r\n    if (shape instanceof Point) {\r\n        return graphics_point(shape, style);\r\n    }\r\n    if (shape instanceof Segment) {\r\n        return graphics_segment(shape, style);\r\n    }\r\n    if (shape instanceof Arc) {\r\n        return graphics_arc(shape, style);\r\n    }\r\n    if (shape instanceof Circle) {\r\n        return graphics_circle(shape, style);\r\n    }\r\n    if (shape instanceof Box) {\r\n        return graphics_box(shape, style);\r\n    }\r\n    if (shape instanceof Polygon) {\r\n        return graphics_polygon(shape, style);\r\n    }\r\n    return null;\r\n}\r\n\r\n// Point.prototype.graphics = function(style) {\r\nfunction graphics_point(point, style) {\r\n    let radius = (style && style.radius) ? style.radius : 3;\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    let graphics = new Graphics();\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n    graphics.circle = graphics.drawCircle(point.x, point.y, radius).command;\r\n    return graphics;\r\n};\r\n\r\n// Segment.prototype.graphics = function(style) {\r\nfunction graphics_segment(segment, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle !== undefined ? style.strokeStyle : 2;\r\n    let ignoreScale = style && style.ignoreScale !== undefined ? style.ignoreScale : true;\r\n    let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    return graphics\r\n        .setStrokeStyle(strokeStyle,1,0,10,ignoreScale)\r\n        .beginStroke(stroke)\r\n        .moveTo(segment.ps.x, segment.ps.y)\r\n        .lineTo(segment.pe.x, segment.pe.y)\r\n        .endStroke();\r\n};\r\n\r\n// Arc.prototype.graphics = function(style) {\r\nfunction graphics_arc(arc, style) {\r\n    // let startAngle = 2 * Math.PI - this.startAngle;\r\n    // let endAngle =  2 * Math.PI - this.endAngle;\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 2;\r\n    let ignoreScale = style && style.ignoreScale !== undefined ? style.ignoreScale : true;\r\n    let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    return graphics\r\n        .setStrokeStyle(strokeStyle,1,0,10,ignoreScale)\r\n        .beginStroke(stroke)\r\n        .arc(arc.pc.x, arc.pc.y, arc.r, arc.startAngle, arc.endAngle, !arc.counterClockwise)\r\n        .endStroke();\r\n};\r\n\r\n// Circle.prototype.graphics = function(style) {\r\nfunction graphics_circle(circle, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    // let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    let stroke = style && style.stroke ? style.stroke : \"#FF0303\";\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    graphics.setStrokeStyle(strokeStyle,0,0,10,true);\r\n    graphics.stroke = graphics.beginStroke(stroke).command;\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n    graphics.drawCircle(circle.pc.x, circle.pc.y, circle.r);\r\n    return graphics;\r\n};\r\n\r\n\r\nfunction graphics_box(box, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    let stroke = style && style.stroke ? style.stroke : \"#FF0303\";\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    graphics.setStrokeStyle(strokeStyle,0,0,10,true);\r\n    graphics.stroke = graphics.beginStroke(stroke).command;\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n    graphics.drawRect(box.xmin, box.ymin, box.xmax-box.xmin, box.ymax-box.ymin);\r\n    return graphics;\r\n};\r\n\r\nfunction setGraphicsEdgeSegment(graphics, segment) {\r\n    graphics.lineTo(segment.pe.x, segment.pe.y);\r\n}\r\n\r\nfunction setGraphicsEdgeArc(graphics, arc) {\r\n    // let startAngle = 2 * Math.PI - arc.startAngle;\r\n    // let endAngle = 2 * Math.PI - arc.endAngle;\r\n    graphics.arc(arc.pc.x, arc.pc.y, arc.r, arc.startAngle, arc.endAngle, !arc.counterClockwise);\r\n}\r\n\r\nfunction setGraphicsEdge(graphics, edge) {\r\n    if (edge.shape instanceof Segment) {\r\n        setGraphicsEdgeSegment(graphics, edge.shape);\r\n    }\r\n    else if (edge.shape instanceof Arc) {\r\n        setGraphicsEdgeArc(graphics, edge.shape);\r\n    }\r\n}\r\n\r\nfunction setGraphicsFace(graphics, face) {\r\n    let ps = face.first.start;\r\n    graphics.moveTo(ps.x, ps.y);\r\n\r\n    for (let edge of face) {\r\n        setGraphicsEdge(graphics, edge);\r\n    }\r\n}\r\n\r\n// Polygon.prototype.graphics = function(style) {\r\nfunction graphics_polygon(polygon, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    let stroke = style && style.stroke ? style.stroke : \"#FF0303\";\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    graphics.setStrokeStyle(strokeStyle,0,0,10,true);\r\n    graphics.stroke = graphics.beginStroke(stroke).command;\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n\r\n    for (let face of polygon.faces) {\r\n        setGraphicsFace(graphics, face);\r\n    }\r\n\r\n    graphics.endStroke();\r\n    return graphics;\r\n};\r\n\r\n","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Shape} from '@createjs/easeljs';\r\nimport {graphics} from '../../../../models/graphics';\r\nimport {is_equal} from '../../../../models/utils';\r\n\r\nexport class ShapeComponent extends Component {\r\n    constructor(params) {\r\n        super(params);\r\n        this.shape = new Shape();\r\n        params.stage.addChild(this.shape);\r\n    }\r\n\r\n    handleMouseOver = (event) => {\r\n        this.props.onMouseOver(this.props.model);\r\n    };\r\n\r\n    handleMouseOut = (event) => {\r\n        this.props.onMouseOut();\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        this.props.onClick(this.props.model, this.props.layer);\r\n    };\r\n\r\n    redraw() {\r\n        // Draw shape\r\n        let stage = this.props.stage;\r\n        let color = (this.props.hovered || this.props.selected) ? \"black\" : this.props.color;\r\n        let alpha = (this.props.hovered || this.props.selected) ? 1.0 : 0.6;\r\n        let widthOn = this.props.widthOn;\r\n\r\n        let strokeStyle = this.props.model.geom.aperture ? this.props.model.geom.aperture : undefined;\r\n        let fill = widthOn ? this.props.color : \"white\";\r\n\r\n        if (this.shape.graphics.isEmpty()) {\r\n            this.shape.graphics = graphics(this.props.model.geom,{\r\n                strokeStyle: strokeStyle,\r\n                ignoreScale: true,\r\n                stroke: color,\r\n                fill: fill,\r\n                radius: 3. / (stage.zoomFactor * stage.resolution)\r\n            });\r\n\r\n            // this.skeletonShape = new Shape();\r\n            // this.skeletonShape.graphics = this.props.model.geom.graphics({\r\n            //     strokeStyle: 1,\r\n            //     ignoreScale: true,\r\n            //     stroke: color,\r\n            //     fill: fill,\r\n            //     radius: 3. / (stage.zoomFactor * stage.resolution)\r\n            // });\r\n            // this.skeletonShape.alpha = 1;\r\n            // this.props.stage.addChild(this.skeletonShape);\r\n        }\r\n        else {\r\n            if (this.shape.graphics.stroke) this.shape.graphics.stroke.style = color;\r\n            if (this.shape.graphics.fill) this.shape.graphics.fill.style = fill;\r\n            if (this.shape.graphics.circle) this.shape.graphics.circle.radius =\r\n                3. / (stage.zoomFactor * stage.resolution);\r\n        }\r\n        this.shape.alpha = this.props.displayed ? alpha : 0.0;\r\n\r\n        // let box = this.props.model.geom.box;\r\n        // this.shape.cache(box.xmin, box.ymin, box.xmax - box.xmin, box.ymax - box.ymin);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.shape.on(\"mouseover\", this.handleMouseOver);\r\n        this.shape.on(\"mouseout\", this.handleMouseOut);\r\n        this.shape.on(\"click\", this.handleClick);\r\n\r\n        // this.shape.mouseEnabled = false;\r\n\r\n        this.redraw();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (is_equal(this.props, nextProps)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.redraw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.shape.off(\"mouseover\", this.handleMouseOver);\r\n        this.shape.off(\"mouseout\", this.handleMouseOut);\r\n        this.shape.off(\"click\", this.handleClick);\r\n        this.props.stage.removeChild(this.shape);\r\n        this.shape.graphics.clear();\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Bitmap} from '@createjs/easeljs';\r\nimport '../../../../models/graphics';\r\nimport {is_equal} from '../../../../models/utils';\r\n// import storage from '../../../../firebase-storage';\r\n\r\nexport class ImageComponent extends Component {\r\n    handleMouseOver = (event) => {\r\n        this.props.onMouseOver(this.props.model);\r\n    };\r\n\r\n    handleMouseOut = (event) => {\r\n        this.props.onMouseOut();\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        this.props.onClick(this.props.model, this.props.layer);\r\n    };\r\n\r\n    redraw() {\r\n        if (!this.bitmap) return;\r\n        // Draw shape\r\n        let alpha = 1; // (this.props.hovered || this.props.selected) ? 1.0 : 0.6;\r\n        this.bitmap.alpha = this.props.displayed ? alpha : 0.0;\r\n\r\n        let width = this.props.model.geom.width;\r\n        let ratio = this.bitmap.image.naturalWidth/this.bitmap.image.naturalHeight;\r\n        this.props.model.geom.height = this.props.model.geom.width / ratio;\r\n        let scaleX = width/this.bitmap.image.naturalWidth; // 1. / (stage.zoomFactor * stage.resolution);\r\n        let scaleY = width/(this.bitmap.image.naturalHeight*ratio);\r\n        let tx = this.props.model.geom.center.x; // stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n        let ty = this.props.model.geom.center.y; // -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n\r\n        this.bitmap.setTransform(tx, ty, scaleX, -scaleY);\r\n\r\n        this.bitmap.regX = this.bitmap.image.naturalWidth/2;\r\n        this.bitmap.regY = this.bitmap.image.naturalHeight/2;\r\n\r\n        // let box = this.state.polygon.geom.box;\r\n        // this.shape.cache(box.xmin, box.ymin, box.xmax - box.xmin, box.ymax - box.ymin);\r\n    }\r\n\r\n    loadImage() {\r\n        const img = new Image();\r\n\r\n        img.onload = () => {\r\n            // img.crossOrigin=\"Anonymous\";\r\n            this.bitmap = new Bitmap(img);\r\n            this.props.stage.addChild(this.bitmap);\r\n\r\n            // this.bitmap.on(\"mouseover\", this.handleMouseOver);\r\n            // this.bitmap.on(\"mouseout\", this.handleMouseOut);\r\n            // this.bitmap.on(\"click\", this.handleClick);\r\n\r\n            // this.shape.mouseEnabled = false;\r\n            this.redraw();\r\n\r\n            this.props.onImageLoaded(this.props.model, this.props.layer, img);\r\n        };\r\n        img.setAttribute('crossOrigin', 'anonymous'); // works for me\r\n\r\n        // Create a reference from a Google Cloud Storage URI\r\n        //const ref = storage.refFromURL(this.props.model.geom.uri);\r\n\r\n        // ref.getDownloadURL()\r\n        //    .then( url => {\r\n        //\r\n        //         img.src = url;\r\n        //     })\r\n        //     .catch( error => console.log(error))\r\n\r\n        img.src = this.props.model.geom.uri;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadImage()\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (is_equal(this.props, nextProps)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.redraw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // this.bitmap.off(\"mouseover\", this.handleMouseOver);\r\n        // this.bitmap.off(\"mouseout\", this.handleMouseOut);\r\n        // this.bitmap.off(\"click\", this.handleClick);\r\n\r\n        this.props.stage.removeChild(this.bitmap);\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n","import {ShapeComponent} from './graphics/shapeComponent';\r\nimport {ImageComponent} from \"./graphics/imageComponent\";\r\n\r\nconst LayerComponent = (props) => {\r\n    const onImageLoaded = (model, layer, image) => {\r\n        // props.setHomeView(props.stage, props.layer);\r\n        //this.forceUpdate();       // ??? unclear why on Home button click not updated\r\n    }\r\n\r\n    return (\r\n        props.layer.shapes.map((shape, index) => {\r\n                return shape.geom.uri ? (\r\n                    <ImageComponent\r\n                        key={index}\r\n                        stage={props.stage}\r\n                        layer={props.layer}\r\n                        model={shape}\r\n                        displayed={props.layer.displayed}\r\n                        hovered={shape === props.hoveredShape}\r\n                        selected={\r\n                            shape === props.firstMeasuredShape ||\r\n                            shape === props.secondMeasuredShape\r\n                        }\r\n                        color={props.layer.color}\r\n                        widthOn={props.widthOn}\r\n                        displayLabels={props.displayLabels}\r\n                        zoomFactor={props.zoomFactor}\r\n                        // onMouseOver={props.onMouseOver}\r\n                        // onMouseOut={props.onMouseOut}\r\n                        // onClick={props.onClick}\r\n                        onImageLoaded={onImageLoaded}\r\n                    />\r\n                ) : (\r\n                    <ShapeComponent\r\n                        key={index}\r\n                        stage={props.stage}\r\n                        layer={props.layer}\r\n                        model={shape}\r\n                        displayed={props.layer.displayed}\r\n                        color={props.layer.color}\r\n                        widthOn={props.widthOn}\r\n                        zoomFactor={props.zoomFactor}\r\n                        onMouseOver={props.handleMouseRollOverShape}\r\n                        onMouseOut={props.handleMouseRollOutShape}\r\n                        onClick={props.handleClickOnShape}\r\n                        hovered={shape === props.hoveredShape}\r\n                        selected={\r\n                            shape === props.firstMeasuredShape ||\r\n                            shape === props.secondMeasuredShape\r\n                        }\r\n                    />)\r\n            }\r\n        )\r\n    )\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         measurePointsActive: state.app.measurePointsActive,\r\n//         measureShapesTool: state.measureShapesTool,\r\n//         hoveredShape: state.measureShapesTool.hoveredShape,\r\n//         firstMeasuredShape: state.measureShapesTool.firstMeasuredShape,\r\n//         secondMeasuredShape: state.measureShapesTool.secondMeasuredShape\r\n//     }\r\n// };\r\n//\r\n// const mapDispatchToProps = dispatch => {\r\n//     return {\r\n//         setHomeView: (stage, shape) => dispatch(actions.setHomeView(stage, shape)),\r\n//         handleMouseRollOverShape: (shape) => dispatch(actions.handleMouseRollOverShape(shape)),\r\n//         handleMouseRollOutShape: () => dispatch(actions.handleMouseRollOutShape()),\r\n//         handleClickOnShape: (shape, layer) => dispatch(actions.handleClickOnShape(shape, layer)),\r\n//     }\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(LayerComponent);\r\n\r\nexport default LayerComponent;","import classes from '../LabelsLayerComponent/labelsLayer.module.css';\r\n\r\nconst labelComponent = ( {stage, shape} ) => {\r\n    let center = shape.geom.center || shape.geom;  // Point has no method center\r\n    let left = stage.canvas.offsetLeft + stage.W2C_X(center.x) + 6;\r\n    let top = stage.canvas.offsetTop + stage.W2C_Y(center.y) - 4;\r\n    let inside = left > stage.canvas.offsetLeft && left < stage.canvas.offsetLeft + stage.canvas.width &&\r\n        top > stage.canvas.offsetTop && top < stage.canvas.offsetTop + stage.canvas.height;\r\n\r\n    return inside ? (\r\n        <div style={{position:\"absolute\", left:left+\"px\", top: top+\"px\"}} className={classes.LabelComponent}>\r\n            <h5>{shape.label}</h5>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default labelComponent;","import LabelComponent from '../domelements/labelComponent';\r\n\r\nconst labelsLayerComponent = (props) => {\r\n    return (props.layer.displayed && props.displayLabels) ? (\r\n        props.layer.shapes.map((shape, index) => {\r\n                return (shape.label && shape.label.trim() !== \"\") ? (\r\n                    <LabelComponent\r\n                        key={index}\r\n                        stage={props.stage}\r\n                        shape={shape}\r\n                        zoomFactor={props.zoomFactor}\r\n                        originX={props.originX}\r\n                        originY={props.originY}\r\n                    />) : null;\r\n            }\r\n        )\r\n    ) : null;\r\n};\r\n\r\nexport default labelsLayerComponent;\r\n","import {format} from \"../../../../../models/utils\";\r\nimport classes from './VertexLabel.module.css';\r\n\r\nconst VertexLabel = (props) => {\r\n    let stage = props.stage;\r\n    let left = stage.canvas.offsetLeft + stage.W2C_X(props.vertex.x) + 6;\r\n    let top = stage.canvas.offsetTop + stage.W2C_Y(props.vertex.y) - 10;\r\n    // let inside = left > stage.canvas.offsetLeft && left < stage.canvas.offsetLeft + stage.canvas.width &&\r\n    //     top > stage.canvas.offsetTop && top < stage.canvas.offsetTop + stage.canvas.height;\r\n    let x = format(props.vertex.x, props.divisor, props.decimals);\r\n    let y = format(props.vertex.y, props.divisor, props.decimals);\r\n\r\n    return (\r\n        <div className={classes.VertexLabel} style={{left:left, top:top}}>\r\n            <h5>\r\n                x={x} y={y}\r\n            </h5>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default VertexLabel;","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Shape, Shadow} from '@createjs/easeljs';\r\nimport {graphics} from '../../../../models/graphics';\r\nimport {is_equal} from '../../../../models/utils';\r\nimport VertexLabel from '../domelements/VertexLabel/VertexLabel';\r\n\r\nclass VertexComponent extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.shape = new Shape();\r\n        props.stage.addChild(this.shape);\r\n\r\n        this.state = {\r\n            hovered: false\r\n        }\r\n    }\r\n\r\n    handleMouseOver = (event) => {\r\n        // this.props.onMouseOver(this.props.model);\r\n        this.shape.shadow = new Shadow(this.props.color, 0, 0, 10);\r\n        this.setState({hovered:true})\r\n    };\r\n\r\n    handleMouseOut = (event) => {\r\n        // this.props.onMouseOut();\r\n        this.shape.shadow = null;\r\n        this.setState({hovered:false})\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        // this.props.onClick(this.props.model, this.props.layer);\r\n        console.log(this.props.vertex);\r\n    };\r\n\r\n    redraw() {\r\n        let stage = this.props.stage;\r\n        let stroke = this.props.color;\r\n        let fill = this.props.color;\r\n        let alpha = 1.0;\r\n\r\n\r\n        if (this.shape.graphics.isEmpty()) {\r\n            this.shape.graphics = graphics(this.props.vertex,\r\n                {\r\n                    stroke: stroke,     // this.props.color,\r\n                    fill: fill,\r\n                    radius: 3. / (stage.zoomFactor * stage.resolution)\r\n                });\r\n        }\r\n        else {\r\n            this.shape.graphics.circle.radius = 3. / (stage.zoomFactor * stage.resolution);\r\n            this.shape.graphics.fill.style = fill;\r\n        }\r\n        this.shape.alpha = alpha;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.shape.on(\"mouseover\", this.handleMouseOver);\r\n        this.shape.on(\"mouseout\", this.handleMouseOut);\r\n        this.shape.on(\"click\", this.handleClick);\r\n\r\n        this.shape.mouseEnabled = true;\r\n\r\n        this.redraw();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (is_equal(this.props, nextProps) && is_equal(this.state, nextState)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.redraw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.shape.off(\"mouseover\", this.handleMouseOver);\r\n        this.shape.off(\"mouseout\", this.handleMouseOut);\r\n        this.shape.off(\"click\", this.handleClick);\r\n\r\n        this.props.stage.removeChild(this.shape);\r\n        this.shape.graphics.clear();\r\n    }\r\n\r\n    render() {\r\n        return this.state.hovered ? (\r\n            <VertexLabel\r\n                stage={this.props.stage}\r\n                vertex={this.props.vertex}\r\n                divisor={this.props.divisor}\r\n                decimals={this.props.decimals}\r\n            />\r\n            ) : null;\r\n    }\r\n}\r\n\r\nexport default VertexComponent;","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\nimport VertexComponent from './vertexComponent';\r\n\r\nconst VerticesComponent = (props) => {\r\n\r\n    return props.model.geom.vertices ?\r\n        props.model.geom.vertices.map((vertex, index) =>\r\n            <VertexComponent key={index}\r\n                             stage={props.stage}\r\n                             vertex={vertex}\r\n                             color={props.color}\r\n                             divisor={props.divisor}\r\n                             decimals={props.decimals}\r\n                             zoomFactor={props.zoomFactor}\r\n                             originX={props.originX}\r\n                             originY={props.originY}\r\n            />\r\n        ) : null;\r\n\r\n}\r\n\r\nexport default VerticesComponent;","import VerticesComponent from './graphics/verticesComponent';\r\n\r\nconst verticesLayerComponent = (props) => {\r\n    return (props.layer.displayed && props.displayVertices) ? (\r\n        props.layer.shapes.map((shape, index) =>\r\n            <VerticesComponent\r\n                key={index}\r\n                stage={props.stage}\r\n                model={shape}\r\n                color={props.layer.color}\r\n                divisor={props.divisor}\r\n                decimals={props.decimals}\r\n                zoomFactor={props.zoomFactor}\r\n                originX={props.originX}\r\n                originY={props.originY}\r\n            />\r\n        )\r\n    ) : null;\r\n};\r\n\r\nexport default verticesLayerComponent;\r\n","import {Fragment} from 'react';\r\nimport LayerComponent from \"./layerComponent\";\r\nimport LabelsLayerComponent from \"./LabelsLayerComponent/labelsLayerComponent\";\r\nimport VerticesLayerComponent from './verticesLayerComponent';\r\n\r\nconst LayersComponent = (props) => {\r\n\r\n    return props.layers.map((layer, index) =>\r\n        <Fragment key={index}>\r\n            <LayerComponent\r\n                stage={props.stage}\r\n                layer={layer}\r\n                widthOn={props.widthOn}\r\n                displayVertices={props.displayVertices}\r\n                zoomFactor={props.zoomFactor}\r\n                handleMouseRollOverShape={props.handleMouseRollOverShape}\r\n                handleMouseRollOutShape={props.handleMouseRollOutShape}\r\n                handleClickOnShape={props.handleClickOnShape}\r\n                hoveredShape={props.hoveredShape}\r\n                firstMeasuredShape={props.firstMeasuredShape}\r\n                secondMeasuredShape={props.secondMeasuredShape}\r\n            />\r\n\r\n            <LabelsLayerComponent\r\n                stage={props.stage}\r\n                layer={layer}\r\n                displayLabels={props.displayLabels}\r\n                zoomFactor={props.zoomFactor}\r\n                originX={props.originX}\r\n                originY={props.originY}\r\n            />\r\n\r\n            <VerticesLayerComponent\r\n                stage={props.stage}\r\n                layer={layer}\r\n                displayVertices={props.displayVertices}\r\n                divisor={props.divisor}\r\n                decimals={props.decimals}\r\n                zoomFactor={props.zoomFactor}\r\n                originX={props.originX}\r\n                originY={props.originY}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default LayersComponent\r\n","import FontAwesome from \"react-fontawesome\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst button = (props) => {\r\n    let iconStyle;\r\n    switch (props.type) {\r\n        case \"trigger\":\r\n            iconStyle = classes.IconTrigger;\r\n            break;\r\n        case \"mode\":\r\n            iconStyle = props.active ? classes.IconModeActive : classes.IconModeNotActive;\r\n            break;\r\n        default:\r\n            iconStyle = classes.IconTrigger;\r\n            break;\r\n    }\r\n    // eslint-disable-next-line\r\n    let buttonStyle = props.mobileOnly ? classes[\"Button\",\"DrawerButton\"] : classes[\"Button\"];\r\n    return (\r\n        <button title={props.title} onClick={props.onClick} className={buttonStyle}>\r\n            <FontAwesome\r\n                name={props.iconName}\r\n                size='2x'\r\n                className={iconStyle}\r\n            />\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default button;","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nimport styles from './LayerListToolbar.module.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\nconst LayerListToolbar = (props) => {\r\n    return (\r\n        <div className={styles[\"Layer-list-toolbar\"]}>\r\n            <Button type=\"trigger\" title=\"Edit selected layer's name and info\" iconName='pencil-alt'\r\n                    onClick={props.onEditLayerButtonClicked}\r\n            />\r\n\r\n            <Button type=\"trigger\" title=\"Delete selected layer\" iconName='trash-alt'\r\n                    onClick={props.onDeleteLayerButtonClicked}\r\n            />\r\n\r\n\r\n            {/*<button title=\"Add layer\" onClick={props.onAddLayerButtonClicked}>*/}\r\n            {/*    <FontAwesome*/}\r\n            {/*        name='plus'*/}\r\n            {/*        size='2x'*/}\r\n            {/*        style={{color: \"grey\"}}*/}\r\n            {/*    />*/}\r\n            {/*</button>*/}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LayerListToolbar;\r\n","import {useEffect, useRef} from 'react';\r\nimport Modal from '../Modal';\r\nimport classes from './ModalPopup.module.css';\r\n\r\nconst BackDrop = (props) => {\r\n    const backDropRef = useRef();\r\n\r\n    const onBackDropClicked = (ev) => {\r\n        if (ev.target === backDropRef.current) {\r\n            props.closePopup();\r\n        }\r\n    };\r\n\r\n    return <div ref={backDropRef} className={classes.BackDrop} onClick={onBackDropClicked}>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nconst ModalPopup = (props) => {\r\n    let offsetX;\r\n    let offsetY;\r\n    let dragX;\r\n    let dragY;\r\n\r\n    const elementDrag = (ev) => {\r\n        ev = ev || window.event;\r\n        // calculate the new cursor position:\r\n        offsetX = dragX - ev.clientX;\r\n        offsetY = dragY - ev.clientY;\r\n        dragX = ev.clientX;\r\n        dragY = ev.clientY;\r\n        // set the element's new position:\r\n        let element = ev.target;\r\n        element.style.top = (element.offsetTop - offsetY) + \"px\";\r\n        element.style.left = (element.offsetLeft - offsetX) + \"px\";\r\n    };\r\n\r\n    const closeDragElement = (ev) => {\r\n        /* stop moving when mouse button is released:*/\r\n        ev.target.onmouseup = null;\r\n        ev.target.onmousemove = null;\r\n    };\r\n\r\n    const dragMouseDown = (ev) => {\r\n        ev = ev || window.event;\r\n        // get the mouse cursor position at startup:\r\n        dragX = ev.clientX;\r\n        dragY = ev.clientY;\r\n        ev.target.onmouseup = closeDragElement;\r\n        // call a function whenever the cursor moves:\r\n        ev.target.onmousemove = elementDrag;\r\n    };\r\n\r\n    useEffect( () => {\r\n        const handleKeyDown = (ev) => {\r\n            if (ev.code === \"Escape\") {\r\n                props.closePopup();\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n        return () => document.removeEventListener('keydown', handleKeyDown);\r\n    }, [props])\r\n\r\n    return props.showPopup && (\r\n        <Modal>\r\n            <BackDrop closePopup={props.closePopup}>\r\n                <div className={classes.ModalPopup} onMouseDown={dragMouseDown}>\r\n                    <header>{props.header}</header>\r\n                    {props.children}\r\n                </div>\r\n            </BackDrop>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalPopup;\r\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nimport styles from './LayerEditForm.module.css';\r\nimport {useEffect, useRef} from \"react\";\r\n\r\nconst LayerEditForm = (props) => {\r\n    const layerNameRef = useRef();\r\n    const layerTitleRef = useRef();\r\n\r\n    let onSubmitLayerEditForm = (ev) => {\r\n        if (!ev)\r\n            return;\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n        const name = layerNameRef.current.value.trim();\r\n        let title = layerTitleRef.current.value.trim();\r\n        let newLayer = { ...props.layer, name: name, title: title};\r\n        props.onSubmitLayerEditForm(newLayer);\r\n        return;\r\n    };\r\n\r\n    let setFocus = (ev) => {\r\n        ev.stopPropagation();\r\n        ev.target.focus();\r\n    };\r\n\r\n    let onCancelLayerEditForm = (ev) => {\r\n        props.onEscapeLayerEditForm();\r\n    };\r\n\r\n    let onMouseMoveHandler = (ev) => {\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    useEffect( () => {\r\n        layerNameRef.current.focus();\r\n    },[layerNameRef])\r\n\r\n    return (\r\n        <form className={styles[\"Layer-edit-form\"]}\r\n              onSubmit={onSubmitLayerEditForm}\r\n              onMouseMove={onMouseMoveHandler}\r\n        >\r\n            <article>\r\n                <label htmlFor=\"layerName\">Name:</label>\r\n                <input type=\"text\" id=\"layerName\" ref={layerNameRef} defaultValue={props.layer.name}\r\n                       onClick={setFocus}/>\r\n            </article>\r\n            <article>\r\n\r\n                <textarea id=\"layerTitle\" ref={layerTitleRef} cols=\"70\" rows=\"3\" defaultValue={props.layer.title}\r\n                          onClick={setFocus}>\r\n            </textarea>\r\n            </article>\r\n            <input type=\"submit\" style={{display:\"none\"}}/>\r\n            <button onClick={onCancelLayerEditForm}>Cancel</button>\r\n            <button onClick={(ev) => onSubmitLayerEditForm(ev.target.parent)}>OK</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default LayerEditForm;\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport {Fragment, useEffect, useRef} from 'react';\r\nimport ModalPopup from \"../../UI/ModalPopup/ModalPopup\";\r\nimport LayerEditForm from \"../LayerEditForm/LayerEditForm\";\r\nimport styles from './LayerListElement.module.css';\r\n\r\nconst LayerListElement = (props) => {\r\n    const layerNameRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (document.activeElement.nodeName === \"CANVAS\")\r\n            return;\r\n        let elem = layerNameRef.current;\r\n        if (props.layer.affected) {\r\n            elem.focus();\r\n        }\r\n    })\r\n\r\n    const rgba = (hex, opacity) => {\r\n        let r, g, b, percent;\r\n        if (hex) {\r\n            hex = hex.replace('#', '');\r\n            r = parseInt(hex.substring(0, 2), 16);\r\n            g = parseInt(hex.substring(2, 4), 16);\r\n            b = parseInt(hex.substring(4, 6), 16);\r\n            percent = opacity;\r\n        }\r\n        else {\r\n            r = 147;\r\n            g = 128;\r\n            b = 108;\r\n            percent = 0;\r\n        }\r\n        let result = `rgba(${r},${g},${b},${percent / 100})`;\r\n\r\n        return result;\r\n    }\r\n\r\n    let displayed = props.layer.displayed ? \"Layer-displayed\" : \"Layer-undisplayed\";\r\n    let color = displayed ? rgba(props.layer.color, 100) : rgba();\r\n    let bgcolor = displayed ? rgba(props.layer.color, 30) : rgba();\r\n    let alpha = props.layer.affected ? 1 : 0;\r\n    let layerNameOpacity = props.layer.shapes.length === 0 ? 0.6 : 1.0;\r\n\r\n    return <Fragment>\r\n        <li\r\n            className={styles.Layer}\r\n            onClick={props.onLayerClicked}\r\n            // onDoubleClick={this.props.onLayerDoubleClicked}\r\n        >\r\n\r\n            <div className={styles.LayerSelectionBox}\r\n                 onClick={props.onAffectedBoxClicked}\r\n            >\r\n                <h4 className={styles.LayerSelectionMark}\r\n                    style={{opacity: alpha, color: color}}>\r\n                    ✓\r\n                </h4>\r\n            </div>\r\n\r\n            <div className={styles.LayerNameBox}\r\n                 style={{backgroundColor: bgcolor, opacity: layerNameOpacity}}>\r\n                <h4 ref={layerNameRef}\r\n                    title={props.layer.title}\r\n                    tabIndex='1'\r\n                >\r\n                    {props.layer.name}\r\n                </h4>\r\n            </div>\r\n\r\n        </li>\r\n        <ModalPopup\r\n            showPopup={props.layer.edited}\r\n            closePopup={props.onEscapeLayerEditForm}\r\n            header=\"Layer properties\"\r\n        >\r\n            <LayerEditForm\r\n                layer={props.layer}\r\n                onSubmitLayerEditForm={props.onSubmitLayerEditForm}\r\n                onEscapeLayerEditForm={props.onEscapeLayerEditForm}\r\n            />\r\n        </ModalPopup>\r\n\r\n    </Fragment>\r\n}\r\n\r\nexport default LayerListElement;\r\n","import {useCallback, useEffect, useRef, useState} from 'react';\r\nimport LayerListToolbar from \"../../LayersList/LayerListToolbar/LayerListToolbar\";\r\nimport LayerListElement from '../../LayersList/LayerListElement/LayerListElement';\r\nimport styles from './LayersWidget.module.css';\r\n\r\nconst LayersWidget = (props) => {\r\n    const widgetRef = useRef(null);\r\n    const [height, setHeight] = useState(0)\r\n\r\n    const handleKeyDown = useCallback((e) => {\r\n        // e.stopPropagation();\r\n        // e.preventDefault();\r\n\r\n        if (e.target.parentElement.parentElement &&\r\n            e.target.parentElement.parentElement.parentElement &&\r\n            e.target.parentElement.parentElement.parentElement.id &&\r\n            e.target.parentElement.parentElement.parentElement.id === \"layersList\") {\r\n\r\n\r\n            switch (e.code) {\r\n                case \"ArrowRight\":\r\n                case \"ArrowDown\":\r\n                    props.setAffectedNextLayer();\r\n                    break;\r\n                case \"ArrowLeft\":\r\n                case \"ArrowUp\":\r\n                    props.setAffectedPrevLayer();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    },[props]);\r\n\r\n    useEffect( () => {\r\n        setHeight(widgetRef.current.clientHeight)\r\n    },[]);\r\n\r\n    useEffect( () => {\r\n        document.addEventListener('keydown', handleKeyDown);\r\n    })\r\n\r\n    return (\r\n        <div className={styles[\"App-layers-displayed\"]}\r\n             ref={widgetRef}\r\n             onClick={props.onLayerListClicked}\r\n        >\r\n            {/*<h5>Layers</h5>*/}\r\n            <LayerListToolbar\r\n                // onAddLayerButtonClicked={() => this.props.onAddLayerButtonClicked(this.props.stage)}\r\n                onEditLayerButtonClicked={props.onEditLayerButtonClicked}\r\n                onDeleteLayerButtonClicked={props.onDeleteLayerButtonClicked}\r\n            />\r\n            <ul id=\"layersList\"\r\n                style={{maxHeight:0.82*(height-40)}}>\r\n                { props.layers.map((layer, index) =>\r\n                    <LayerListElement\r\n                        key={index}\r\n                        layer={layer}\r\n                        onLayerClicked={() => props.toggleDisplayLayer(layer)}\r\n                        onAffectedBoxClicked={(event) => props.toggleAffectedLayer(event, layer)}\r\n                        onSubmitLayerEditForm={props.onSubmitLayerEditForm}\r\n                        onEscapeLayerEditForm={props.onEscapeLayerEditForm}\r\n                    />)\r\n                }\r\n            </ul>\r\n            {/*{addLayer}*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LayersWidget;\r\n","import {useCallback, useEffect, useReducer, useState} from 'react';\r\nimport {Graphics, Shape} from \"@createjs/easeljs\";\r\nimport {format} from '../../models/utils';\r\nimport styles from './MeasureBetweenPoints.module.css';\r\n\r\nconst initialState = {\r\n    points: []\r\n}\r\n\r\nconst mouse = (state, action) => {\r\n    const stage = action.stage || null;\r\n    switch (action.type) {\r\n        case \"MOUSE_DOWN\":\r\n            if (state.points.length === 0) {\r\n                return {\r\n                    points: [{x: stage.C2W_X(action.x), y: stage.C2W_Y(action.y)}]\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    points:[]\r\n                }\r\n            }\r\n        case \"MOUSE_MOVED\":\r\n            if (state.points.length > 0) {\r\n                return {\r\n                    points: [\r\n                        {x: state.points[0].x, y: state.points[0].y},\r\n                        {x: stage.C2W_X(action.x), y: stage.C2W_Y(action.y)}]\r\n                }\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconst MeasureBetweenPoints = ({stage, transform, units, divisor, decimals}) => {\r\n    const [rect, setRect] = useState(null);\r\n    const [segment, setSegment] = useState(null);\r\n    const [measurementState, dispatch] = useReducer(mouse, initialState);\r\n\r\n    const draw = useCallback(() => {\r\n        const measurePoints = measurementState.points;\r\n        const point1 = {x: measurePoints[0].x, y: measurePoints[0].y}\r\n        const point2 = {x: measurePoints[1].x, y: measurePoints[1].y}\r\n\r\n        // Draw rectangle\r\n        let pllX = Math.min(point1.x, point2.x);\r\n        let pllY = Math.min(point1.y, point2.y);\r\n        let width = Math.abs(point1.x - point2.x);\r\n        let height = Math.abs(point1.y - point2.y);\r\n\r\n        let graphicsRect = new Graphics();\r\n        graphicsRect\r\n            .setStrokeStyle(1,0,0,10,true)\r\n            .beginStroke(\"#000000\")\r\n            .drawRect(pllX, pllY, width, height);\r\n        rect.graphics = graphicsRect;\r\n\r\n        let graphicsSegment = new Graphics();\r\n        graphicsSegment\r\n            .setStrokeStyle(1,1,0,10, true)\r\n            .beginStroke(\"#000000\")\r\n            .moveTo(point1.x, point1.y)\r\n            .lineTo(point2.x, point2.y)\r\n            .endStroke();\r\n        segment.graphics = graphicsSegment;\r\n\r\n        rect.visible = true;\r\n        segment.visible = true;\r\n        stage.update();\r\n\r\n    }, [stage, measurementState, rect, segment]);\r\n\r\n    const erase = useCallback( () => {\r\n        if (stage && rect && segment) {\r\n            rect.visible = false;\r\n            segment.visible = false;\r\n            stage.update();\r\n        }\r\n    }, [stage, rect, segment])\r\n\r\n    // Draw measurement on mouse move\r\n    useEffect(() => {\r\n        if (measurementState.points.length === 2) {\r\n            draw();\r\n        }\r\n        else {\r\n            erase();\r\n        }\r\n    }, [stage, measurementState, draw, erase])\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            if (stage) {\r\n                stage.removeChild(rect);\r\n                stage.removeChild(segment);\r\n            }\r\n        }\r\n        }, [stage, rect, segment])\r\n\r\n    useEffect(() => {\r\n        const handleMouseDown = (event) =>\r\n            dispatch({\r\n                type: \"MOUSE_DOWN\",\r\n                stage: stage,\r\n                x: event.stageX,\r\n                y: event.stageY\r\n            })\r\n\r\n        const handleMouseMoved = (event) =>\r\n            dispatch({\r\n                type: \"MOUSE_MOVED\",\r\n                stage: stage,\r\n                x: event.stageX,\r\n                y: event.stageY\r\n            })\r\n\r\n        if (stage) {\r\n            stage.addEventListener(\"stagemousedown\", handleMouseDown);\r\n            stage.addEventListener(\"stagemousemove\", handleMouseMoved)\r\n            // stage.on(\"stagemouseup\", handleMouseUp);\r\n            // stage.on(\"mouseleave\", handleMouseLeave);\r\n            // measureStage.canvas.addEventListener(\"mousewheel\", handleMouseWheel, {passive: true});\r\n            // stage.canvas.addEventListener(\"DOMMouseScroll\", handleMouseWheelFox, {passive: true});\r\n\r\n            let rectShape = new Shape();\r\n            stage.addChild(rectShape);\r\n            setRect(rectShape);\r\n\r\n            let segmentShape = new Shape();\r\n            stage.addChild(segmentShape);\r\n            setSegment(segmentShape);\r\n        }\r\n        return () => {\r\n            if (stage) {\r\n                stage.removeEventListener(\"stagemousedown\", handleMouseDown);\r\n                stage.removeEventListener(\"stagemousemove\", handleMouseMoved);\r\n                // stage.off(\"stagemouseup\", handleMouseUp);\r\n                // stage.off(\"mouseleave\", handleMouseLeave);\r\n                // measureStage.canvas.removeEventListener(\"mousewheel\", handleMouseWheel);\r\n                // stage.canvas.removeEventListener(\"DOMMouseScroll\", handleMouseWheelFox);\r\n            }\r\n        }\r\n    }, [stage]);\r\n\r\n    const measurement = (point1, point2, divisor, decimals) => {\r\n        let dx = Math.abs(point1.x - point2.x);\r\n        let dy = Math.abs(point1.y - point2.y);\r\n        let dist = Math.sqrt(dx * dx + dy * dy);\r\n        let message = \"DX=\" + format(dx, divisor, decimals) + \",DY=\" + format(dy, divisor, decimals) + \",D=\" + format(dist, divisor, decimals);\r\n        return message;\r\n    }\r\n\r\n    if (measurementState.points.length === 2) {\r\n        const measurePoints = measurementState.points;\r\n        const point1 = {x: measurePoints[0].x, y: measurePoints[0].y}\r\n        const point2 = {x: measurePoints[1].x, y: measurePoints[1].y}\r\n        const pllX = stage.W2C_X( Math.min(point1.x, point2.x) );\r\n        const pllY = stage.W2C_Y( Math.min(point1.y, point2.y) ) + stage.canvas.offsetTop;\r\n        const text = measurement(point1, point2, divisor, decimals);\r\n\r\n        return (\r\n            <div style={{position: 'absolute', left: pllX, top: pllY}} className={styles.MeasureBetweenPoints}>\r\n                <h5>{text}</h5>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default MeasureBetweenPoints;\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Shape, Text} from '@createjs/easeljs';\r\nimport {graphics} from '../models/graphics';\r\n\r\nclass MeasureShapesTool extends Component {\r\n    constructor(params) {\r\n        super();\r\n        this.segment = new Shape();\r\n        params.stage.addChild(this.segment);\r\n\r\n        this.labelShape = new Text();\r\n        this.labelShape.x = 0;\r\n        this.labelShape.y = 0;\r\n        params.stage.addChild(this.labelShape);\r\n\r\n        // var html = document.createElement('div');\r\n        // html.innerText = \"\"; // params.model.label;\r\n        // html.style.position = \"absolute\";\r\n        // html.style.top = 0;\r\n        // html.style.left = 0;\r\n        //\r\n        // document.body.appendChild(html);\r\n        // this.labelShape = new createjs.DOMElement(html);\r\n        // params.stage.addChild(this.labelShape);\r\n    }\r\n\r\n    // redrawLabel() {\r\n    //     if (!this.labelShape) return;\r\n    //\r\n    //     let stage = this.props.stage;\r\n    //\r\n    //     this.labelShape.htmlElement.style.display = \"block\";\r\n    //\r\n    //     let box = this.props.shortestSegment.box;\r\n    //     let point = {x: (box.xmin + box.xmax) / 2, y: (box.ymin + box.ymax) / 2};\r\n    //     let dx = 6. / (stage.zoomFactor * stage.resolution);\r\n    //     let dy = 4. / (stage.zoomFactor * stage.resolution);\r\n    //\r\n    //     this.labelShape.htmlElement.style.font = \"16px Arial\";\r\n    //     this.labelShape.htmlElement.innerText = this.props.shortestSegment.length;\r\n    //\r\n    //     let unscale = 1. / (stage.zoomFactor * stage.resolution);\r\n    //     let tx = stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n    //     let ty = -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n    //     this.labelShape.setTransform(tx, ty, unscale, -unscale);\r\n    // }\r\n\r\n    format(num) {\r\n        return (num/this.props.divisor).toFixed(this.props.decimals);\r\n    }\r\n\r\n    redrawLabel() {\r\n        if (!this.labelShape) return;\r\n\r\n        let stage = this.props.stage;\r\n\r\n        let box = this.props.shortestSegment.box;\r\n        let point = {x: (box.xmin + box.xmax) / 2, y: (box.ymin + box.ymax) / 2};\r\n        let dx = 6. / (stage.zoomFactor * stage.resolution);\r\n        let dy = 4. / (stage.zoomFactor * stage.resolution);\r\n\r\n        if (box.ymin === box.ymax) {\r\n            dx = 0;\r\n            dy = -dy;\r\n        }\r\n\r\n        // this.labelShape.htmlElement.style.display = \"block\";\r\n        // this.labelShape.htmlElement.style.font = \"16px Arial\";\r\n        // this.labelShape.htmlElement.innerText = this.props.shortestSegment.length;\r\n\r\n        this.labelShape.text = this.format(this.props.shortestSegment.length);\r\n\r\n        let fontSize = 14.; // / (stage.zoomFactor * stage.resolution);\r\n        this.labelShape.font = `${fontSize}px Arial`;\r\n\r\n        let unscale = 1. / (stage.zoomFactor * stage.resolution);\r\n        // let tx = stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n        // let ty = -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n        let tx = point.x + dx;\r\n        let ty = point.y + dy;\r\n        this.labelShape.setTransform(tx, ty, unscale, -unscale);\r\n    }\r\n\r\n    draw() {\r\n        if (this.props.shortestSegment) {\r\n            this.segment.graphics = graphics(this.props.shortestSegment);\r\n            this.redrawLabel();\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.draw();\r\n    }\r\n    componentDidUpdate() {\r\n        this.segment.graphics.clear();\r\n        if (this.props.firstMeasuredShape && this.props.secondMeasuredShape &&\r\n            this.props.firstMeasuredLayer.displayed &&\r\n            this.props.secondMeasuredLayer.displayed) {\r\n\r\n            this.draw();\r\n            this.redrawLabel();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.stage.removeChild(this.segment);\r\n        this.segment.graphics.clear();\r\n        this.props.stage.removeChild(this.labelShape);\r\n        this.labelShape.text = \"\";\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default MeasureShapesTool;","import {useEffect, useImperativeHandle, useReducer, useRef, useState, forwardRef, useCallback} from 'react';\r\nimport styles from './EditorComponent.module.css';\r\nimport layersReducer from \"../../store/reducers/layersReducer\";\r\nimport measureShapesReducer, {defaultMeasureShapesState} from \"../../store/reducers/measureShapesReducer\";\r\nimport * as layerActions from \"../../store/actions/layersActions\";\r\nimport * as measureShapesActions from \"../../store/actions/measureShapesActions\";\r\n\r\nimport DisplayCoordinatesTool from \"../../tools/DisplayCoordinates/DisplayCoordinatesTool\";\r\nimport StageComponent from \"./StageComponent/StageComponent\";\r\nimport useMouse from \"../../hooks/useMouse\";\r\nimport Layers from \"../../models/layers\";\r\nimport LayersComponent from \"../MainComponent/GraphicsComponent/layersComponent\";\r\nimport LayersWidget from \"./LayersWidget/LayersWidget\";\r\nimport MeasureBetweenPoints from \"../../tools/MeasureBetweenPoints/MeasureBetweenPoints\";\r\nimport MeasureShapesTool from \"../../tools/measureShapesTool\";\r\n\r\nconst initialTransformState = {originX: null, originY: null, resolution: 0.0001, zoomFactor: 1.0}\r\n\r\nconst EditorComponent = (props, ref) => {\r\n    const editorRef = useRef(null);\r\n    const canvasElement = useRef(null);\r\n    const [stage, mouseState] = useMouse(canvasElement.current);\r\n    const [transform, setTransform] = useState(initialTransformState);\r\n    const [layers, layersDispatch] = useReducer(layersReducer, [])\r\n    const [measureShapesState, measureShapesDispatch] = useReducer(measureShapesReducer, defaultMeasureShapesState);\r\n\r\n    useEffect( () => {\r\n        if (props.onPasteDataFromBuffer) {\r\n            document.addEventListener('paste', props.onPasteDataFromBuffer);\r\n        }\r\n        return () => {\r\n            if (props.onPasteDataFromBuffer) {\r\n                document.removeEventListener('paste', props.onPasteDataFromBuffer);\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    useEffect( () => {\r\n        if (props.data.length === 0) {\r\n            layersDispatch(layerActions.deleteAllLayers());\r\n        }\r\n        else {\r\n            for (const layer of props.data) {\r\n                if (layer.stage)       // only if layer.stage undefined, it is new layer, otherwise skip\r\n                    continue;\r\n                layersDispatch(layerActions.addNewLayer(layer));\r\n            }\r\n        }\r\n    }, [props.data])\r\n\r\n    // Set initial transformation on the new layer added\r\n    useEffect( () => {\r\n        const wrkLayer = Layers.getAffected(layers);\r\n        if (wrkLayer && stage) {\r\n            wrkLayer.stage = stage;\r\n            const homeTransform = stage.getInitialTransform(wrkLayer);\r\n            setTransform(homeTransform);\r\n        }\r\n    }, [stage, layers])\r\n\r\n    // Set transformation on pan by mouse\r\n    useEffect( () => {\r\n        if (stage && !props.measurePointsActive && mouseState.startX && mouseState.startY) {\r\n            const dx = mouseState.x - mouseState.startX;\r\n            const dy = mouseState.y - mouseState.startY;\r\n            if (dx !== 0 && dy !== 0) {\r\n                const newTransform = stage.panByMouseMove(dx, dy);\r\n                setTransform(newTransform);\r\n            }\r\n        }\r\n    }, [stage, mouseState, props.measurePointsActive])\r\n\r\n    // Set transformation on zoom by mouse wheel\r\n    useEffect( () => {\r\n        if (stage && mouseState.delta !== 0) {\r\n            let bIn = mouseState.delta > 0;\r\n            const newTransform = stage.zoomByMouse(mouseState.x, mouseState.y, bIn, 1.2);\r\n            setTransform(newTransform);\r\n        }\r\n    }, [stage, mouseState])\r\n\r\n    // Set transformation on zoom by pinch\r\n    useEffect( () => {\r\n        if (stage && mouseState.touchPoints) {\r\n            const newTransform = stage.zoomByPinchMove(mouseState.x1, mouseState.y1, mouseState.ratio);\r\n            setTransform(newTransform);\r\n        }\r\n    }, [stage, mouseState]);\r\n\r\n    const zoomHomeCallback = useCallback( () => {\r\n        const wrkLayer = Layers.getAffected(layers);\r\n        if (wrkLayer && stage) {\r\n            const center = wrkLayer.center;\r\n            const box = wrkLayer.box;\r\n            if (isNaN(center.x) || isNaN(center.y)) return;\r\n            stage.panToCoordinate(center.x, center.y);\r\n            const newTransform = stage.zoomToLimits(box.xmax - box.xmin, box.ymax - box.ymin);\r\n            setTransform(newTransform);\r\n        }\r\n    }, [stage, layers]);\r\n\r\n    useEffect( () => {\r\n        const handleKeyDown = (e) => {\r\n            // let ctrl = e.ctrlKey;\r\n            // if (e.target.id !== \"mainCanvas\")\r\n            //     return;\r\n            switch (e.code) {\r\n                case (\"KeyH\" || \"Home\"):\r\n                    zoomHomeCallback();\r\n                    break;\r\n\r\n                case (\"Home\"):\r\n                    zoomHomeCallback();\r\n                    break;\r\n\r\n                case \"KeyW\":\r\n                    // this.props.toggleWidthMode();     // toggle width On/Off in graphics model\r\n                    break;\r\n\r\n                case \"KeyE\":\r\n                    // this.props.toggleDisplayVertices();  // toggle vertices On/Off\r\n                    break;\r\n\r\n                case \"ArrowRight\":\r\n                    break;\r\n\r\n                case \"ArrowLeft\":\r\n                    break;\r\n                case \"ArrowUp\":\r\n                    break;\r\n                case \"ArrowDown\":\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        }\r\n    }, [stage, layers, zoomHomeCallback]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        zoomHome: zoomHomeCallback\r\n    }), [zoomHomeCallback]);\r\n\r\n    const measuredLayersDisplayed =\r\n        measureShapesState.firstMeasuredShape && measureShapesState.firstMeasuredLayer.displayed &&\r\n        measureShapesState.secondMeasuredShape && measureShapesState.secondMeasuredLayer.displayed;\r\n\r\n    return (\r\n        <div className={styles.EditorComponent} ref={editorRef}>\r\n            {props.showLayersWidget && <LayersWidget\r\n                stage={stage}\r\n                layers={layers}\r\n                toggleDisplayLayer={(layer) => layersDispatch(layerActions.toggleDisplayLayer(layer))}\r\n                toggleAffectedLayer={(event, layer) => layersDispatch(layerActions.toggleAffectedLayer(event, layer))}\r\n                onEditLayerButtonClicked={() => layersDispatch(layerActions.openAffectedLayerEditForm())}\r\n                onSubmitLayerEditForm = {(newLayer) => layersDispatch(layerActions.updateLayer(newLayer))}\r\n                onEscapeLayerEditForm = {() => layersDispatch(layerActions.closeEditLayerForm())}\r\n                onDeleteLayerButtonClicked= {() => layersDispatch(layerActions.deleteAffectedLayer())}\r\n                setAffectedNextLayer = {() => layersDispatch(layerActions.setAffectedNextLayer())}\r\n                setAffectedPrevLayer = {() => layersDispatch(layerActions.setAffectedPrevLayer())}\r\n            />}\r\n\r\n            <canvas\r\n                tabIndex=\"1\"\r\n                ref={canvasElement}\r\n                width=\"100\"\r\n                height=\"100\"\r\n            >\r\n            </canvas>\r\n\r\n            <DisplayCoordinatesTool\r\n                stage={stage}\r\n                unitsName={props.unitsName || \"pixels\"}\r\n                divisor={props.divisor || 1.0}\r\n                decimals={props.decimals || 0}\r\n                coordX={mouseState.x}\r\n                coordY={mouseState.y}\r\n            />\r\n\r\n            {stage ?\r\n                <StageComponent\r\n                    stage={stage}\r\n                    layers={layers}\r\n                    transform={transform}\r\n                    controls={props.controls}\r\n                >\r\n                    <LayersComponent\r\n                        stage={stage}\r\n                        layers={layers}\r\n                        widthOn={props.widthOn }\r\n                        displayVertices={props.displayVertices}\r\n                        displayLabels={props.displayLabels}\r\n                        zoomFactor={transform.zoomFactor}\r\n                        divisor={props.divisor || 1.0}\r\n                        decimals={props.decimals || 0}\r\n                        originX={stage.originX}\r\n                        originY={stage.originY}\r\n                        handleMouseRollOverShape={(shape) =>\r\n                            measureShapesDispatch(measureShapesActions.handleMouseRollOverShape(shape))}\r\n                        handleMouseRollOutShape={() =>\r\n                            measureShapesDispatch(measureShapesActions.handleMouseRollOutShape())}\r\n                        handleClickOnShape={(shape, layer) =>\r\n                            measureShapesDispatch(measureShapesActions.handleClickOnShape(shape, layer))}\r\n                        hoveredShape={measureShapesState.hoveredShape}\r\n                        firstMeasuredShape={measureShapesState.firstMeasuredShape}\r\n                        secondMeasuredShape={measureShapesState.secondMeasuredShape}\r\n                    />\r\n            </StageComponent> : null}\r\n\r\n            {props.measurePointsActive && <MeasureBetweenPoints\r\n                stage={stage}\r\n                mouseState={mouseState}\r\n                transform={transform}\r\n                unitsName={props.unitsName || \"pixels\"}\r\n                divisor={props.divisor || 1.0}\r\n                decimals={props.decimals || 0}\r\n            />}\r\n\r\n            {measureShapesState.distance &&\r\n            measureShapesState.shortestSegment && measuredLayersDisplayed &&\r\n            <MeasureShapesTool\r\n                stage={stage}\r\n                firstMeasuredShape={measureShapesState.firstMeasuredShape}\r\n                secondMeasuredShape={measureShapesState.secondMeasuredShape}\r\n                firstMeasuredLayer={measureShapesState.firstMeasuredLayer}\r\n                secondMeasuredLayer={measureShapesState.secondMeasuredLayer}\r\n                distance={measureShapesState.distance}\r\n                shortestSegment={measureShapesState.shortestSegment}\r\n                divisor={props.divisor || 1.0}\r\n                decimals={props.decimals || 0}\r\n            />}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default forwardRef(EditorComponent);\r\n","import * as ActionTypes from \"../actionTypes\";\r\n\r\nexport const toggleMeasureBetweenShapes = () => {\r\n    return {\r\n        type: ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED\r\n    }\r\n};\r\n\r\nexport const handleMouseRollOverShape = (shape) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_ROLL_OVER_SHAPE,\r\n        shape\r\n    }\r\n};\r\n\r\nexport const handleMouseRollOutShape = () => {\r\n    return {\r\n        type: ActionTypes.MOUSE_ROLL_OUT_SHAPE\r\n    }\r\n};\r\n\r\nexport const handleClickOnShape = (shape, layer) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_CLICKED_ON_SHAPE,\r\n        shape,\r\n        layer\r\n    }\r\n};\r\n\r\n","import {Box} from '@flatten-js/core';\r\n\r\nexport class Job {\r\n    constructor() {\r\n        this.filename = \"\";\r\n        this.title = \"\";\r\n        this.profiles = [];   // array of FlattenJS Polygons\r\n        this.materials = [];  // array of FlattenJS Polygons\r\n        this.shapes = [];     // array of other FlattenJS shapes\r\n    }\r\n\r\n    get box() {\r\n        let b = new Box();\r\n        for (let shape of this.profiles) {\r\n            b.merge(shape.box);\r\n        }\r\n        for (let shape of this.materials) {\r\n            b.merge(shape.box);\r\n        }\r\n        for (let shape of this.shapes) {\r\n            b.merge(shape.box);\r\n        }\r\n        return b;\r\n    }\r\n}","import {Utils, Arc, vector} from \"@flatten-js/core\";\r\n\r\nexport function arcSE(center, start, end, counterClockwise) {\r\n    let startAngle = vector(center,start).slope;\r\n    let endAngle = vector(center, end).slope;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, start).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\nexport function arcStartSweep(center, start, sweep, counterClockwise) {\r\n    let startAngle = vector(center,start).slope;\r\n    let endAngle = startAngle + sweep;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, start).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\nexport function arcEndSweep(center, end, sweep, counterClockwise) {\r\n    let endAngle = vector(center,end).slope;\r\n    let startAngle = endAngle - sweep;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, end).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\n","\r\n/**\r\n * Created by Alex Bol on 12/02/2018.\r\n */\r\nimport {Segment, Arc, Polygon, Face} from \"@flatten-js/core\";\r\nimport {CW, CCW, INSIDE, OUTSIDE, ORIENTATION} from \"@flatten-js/core\";\r\nimport {vector} from \"@flatten-js/core\";\r\nimport Flatten from \"@flatten-js/core\";\r\nimport {arcSE, arcStartSweep, arcEndSweep} from \"./createArcs\";\r\n\r\nconst {unify, subtract, BOOLEAN_UNION} = Flatten.BooleanOperations;\r\nconst {addToIntPoints, getSortedArray, splitByIntersections} = Flatten.BooleanOperations;\r\nconst {removeNotRelevantChains, removeOldFaces, restoreFaces} = Flatten.BooleanOperations;\r\n\r\n/**\r\n * Offset polygon by given value\r\n * @param {Polygon} polygon - input polygon\r\n * @param {number} value - offset value, may be positive or negative\r\n * @returns {Polygon} offsetPolygon\r\n */\r\n\r\n/**\r\n *\r\n * @param polygon\r\n * @param value\r\n *\r\n */\r\nexport function offset(polygon, value) {\r\n    let w = value;\r\n\r\n    let edges = [...polygon.edges];\r\n    let offsetPolygon = polygon.clone();\r\n    let offsetEdge;\r\n\r\n    if (w !== 0) {\r\n\r\n        for (let edge of edges) {\r\n            if (edge.isSegment()) {\r\n                offsetEdge = offsetSegment(edge.shape, w);\r\n            }\r\n            else {\r\n                offsetEdge = offsetArc(edge.shape, w);\r\n            }\r\n\r\n            if (w > 0) {\r\n                offsetPolygon = unify(offsetPolygon, offsetEdge);\r\n            }\r\n            else {\r\n                offsetPolygon = subtract(offsetPolygon, offsetEdge);\r\n            }\r\n        }\r\n    }\r\n\r\n    return offsetPolygon;\r\n}\r\n\r\nexport function offsetArc(arc, value) {\r\n\r\n    let w = Math.abs(value);\r\n\r\n    // Define outline polygon\r\n    let polygon = new Polygon();\r\n    let arc_cap1,arc_cap2;\r\n\r\n    let arc_outer = arc.clone();\r\n    arc_outer.r = arc.r + w;\r\n\r\n    arc_cap1 = arcStartSweep(arc.end, arc_outer.end, Math.PI, arc.counterClockwise);\r\n    arc_cap2 = arcEndSweep(arc.start, arc_outer.start, Math.PI, arc.counterClockwise);\r\n\r\n    let arc_inner = undefined;\r\n    if (arc.r > w) {\r\n        arc_inner = new Arc(arc.pc, arc.r - w, arc.endAngle, arc.startAngle,\r\n            arc.counterClockwise === CW ? CCW : CW);\r\n    }\r\n    else {\r\n        // arc_inner = new Arc(arc.pc, w - arc.r, arc.startAngle, arc.endAngle, arc.counterClockwise);\r\n        arc_inner = new Segment(arc_cap1.end, arc_cap2.start);\r\n    }\r\n\r\n    polygon.addFace([arc_outer, arc_cap1, arc_inner, arc_cap2]);\r\n    [...polygon.faces][0].setArcLength();\r\n\r\n    // Create intersection points\r\n    let ips = Face.getSelfIntersections([...polygon.faces][0], polygon.edges, false);\r\n\r\n    // TODO: getSelfIntersections returns points with correspondent edges - avoid duplication\r\n    ips = ips.slice(0,ips.length/2);    // for now slice array to avoid duplication in points\r\n\r\n    let int_points = [];\r\n    let edge_cap1;\r\n    let edge_cap2;\r\n\r\n    edge_cap1 = [...polygon.edges][1];\r\n    edge_cap2 = [...polygon.edges][3];\r\n\r\n    for (let pt of ips) {\r\n        addToIntPoints(edge_cap1, pt, int_points);\r\n        addToIntPoints(edge_cap2, pt, int_points);\r\n    }\r\n\r\n    // Sort intersection points and insert them as new vertices\r\n    let int_points_sorted = getSortedArray(int_points);\r\n    splitByIntersections(polygon, int_points_sorted);\r\n\r\n\r\n    // Set BV flags\r\n    let bv = OUTSIDE;\r\n    for (let int_point of int_points_sorted) {\r\n        int_point.edge_before.bv = bv;\r\n        int_point.edge_after.bv = (bv === OUTSIDE ? INSIDE : OUTSIDE);\r\n        bv = int_point.edge_after.bv;   // invert flag on each iteration\r\n    }\r\n\r\n    // Remove inner \"chains\"\r\n    let op = BOOLEAN_UNION;\r\n    removeNotRelevantChains(polygon, op, int_points_sorted, true);\r\n\r\n    // return int_points_sorted;\r\n    // Swap links\r\n    let num = int_points.length;\r\n    if (num > 0) {\r\n        let edge_before;\r\n        let edge_after;\r\n        // 0 => 3\r\n        edge_before = int_points_sorted[0].edge_before;\r\n        edge_after = int_points_sorted[num-1].edge_after;\r\n        edge_before.next = edge_after;\r\n        edge_after.prev = edge_before;\r\n\r\n        // Fill in missed links in intersection points\r\n        int_points_sorted[0].edge_after = int_points_sorted[num-1].edge_after;\r\n        int_points_sorted[num-1].edge_before = int_points_sorted[0].edge_before;\r\n\r\n        if (num === 4) {\r\n            // 2 => 1\r\n            edge_before = int_points_sorted[2].edge_before;\r\n            edge_after = int_points_sorted[1].edge_after;\r\n            edge_before.next = edge_after;\r\n            edge_after.prev = edge_before;\r\n\r\n            // Fill in missed links in intersection points\r\n            int_points_sorted[2].edge_after = int_points_sorted[1].edge_after;\r\n            int_points_sorted[1].edge_before = int_points_sorted[2].edge_before;\r\n        }\r\n\r\n        // remove old faces\r\n        removeOldFaces(polygon, int_points);\r\n        // restore faces\r\n        restoreFaces(polygon, int_points, int_points);\r\n    }\r\n\r\n    let face0 = [...polygon.faces][0];\r\n    if (face0.orientation() === ORIENTATION.CCW) {\r\n        polygon.reverse();\r\n    }\r\n    return polygon;\r\n}\r\n\r\nexport function offsetSegment(seg, value) {\r\n    let w = Math.abs(value);\r\n\r\n    let polygon = new Polygon();\r\n    let v_seg = vector(seg.end.x-seg.start.x, seg.end.y-seg.start.y);\r\n    let v_seg_unit = v_seg.normalize();\r\n    let v_left = v_seg_unit.rotate90CCW().multiply(w);\r\n    let v_right = v_seg_unit.rotate90CW().multiply(w);\r\n    let seg_left = seg.translate(v_left);\r\n    let seg_right = seg.translate(v_right).reverse();\r\n    let cap1 = arcSE(seg.end, seg_left.end, seg_right.start, CW);\r\n    let cap2 = arcSE(seg.start, seg_right.end, seg_left.start, CW);\r\n\r\n    polygon.addFace([seg_left, cap1, seg_right, cap2]);\r\n    return polygon;\r\n}\r\n","import { Job } from '../models/job';\r\nimport {point, segment, arc, Polygon, Utils, vector} from '@flatten-js/core';\r\n\r\nfunction arcSE(center, start, end, counterClockwise) {\r\n    let startAngle = vector(center, start).slope;\r\n    let endAngle = vector(center, end).slope;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2 * Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, start).length;\r\n\r\n    return arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\nfunction parseComplexShape(row_lines, start, end) {\r\n    let loop = [];\r\n    let loop_start;\r\n    let ps;\r\n    let pe;\r\n    let pc;\r\n    let shape;\r\n    let poly = new Polygon();\r\n\r\n    for (let i = start + 1; i < end; i++) {\r\n        let terms = row_lines[i].split(\" \");\r\n\r\n        if (terms[0] === \"A\") {\r\n            ps = point(parseInt(terms[5]), parseInt(terms[6]));\r\n            pe = point(parseInt(terms[7]), parseInt(terms[8]));\r\n            pc = point(parseInt(terms[9]), parseInt(terms[10]));\r\n            let counterClockwise = terms[12].includes(\"1\") ? true : false;\r\n            shape = arcSE(pc, ps, pe, counterClockwise);\r\n        } else if (terms[0] === \"L\") {\r\n            ps = point(parseInt(terms[1]), parseInt(terms[2]));\r\n            pe = point(parseInt(terms[3]), parseInt(terms[4]));\r\n            shape = segment(ps, pe);\r\n        }\r\n\r\n        if (loop.length === 0) {\r\n            loop_start = ps;\r\n        }\r\n\r\n        loop.push(shape);\r\n\r\n        if (pe.equalTo(loop_start)) {\r\n            poly.addFace(loop);\r\n            loop = [];\r\n        }\r\n    }\r\n\r\n    return poly;\r\n}\r\n\r\nexport function parseToFlightaShapes(str) {\r\n    let start = null;\r\n    let end = null;\r\n    let shapes = [];\r\n    let row_lines = str.match(/[^\\r\\n]+/g);\r\n    for (let i = 0; i < row_lines.length; i++) {\r\n        let line = row_lines[i].split(\" \");\r\n\r\n        if (line[0] === \"S\") {\r\n            start = i;\r\n            continue;\r\n        }\r\n\r\n        if (line[0] === \"E\" && start !== null) {\r\n            end = i;\r\n            let poly = parseComplexShape(row_lines, start, end);\r\n            start = null;\r\n            end = null;\r\n            shapes.push(poly)\r\n        }\r\n    }\r\n    return shapes;\r\n}\r\n\r\nexport function parseFlighta(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n    job.shapes = parseToFlightaShapes(str);\r\n    return job;\r\n}\r\n","/**\r\n * Created by alexanderbol on 01/05/2017.\r\n */\r\n\r\nimport {Point, Segment, Arc, Circle, Box, Polygon, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\nimport {offsetSegment, offsetArc} from \"../models/polygonOffset\";\r\nimport {parseToFlightaShapes} from \"./parseFlighta\";\r\n\r\n/*\r\nlet debug_str = `\r\n+\t\t[0]\t{nrec=27 nalloc=27 h_ind_id=-1 ...} mat_cont_hdr_struc\tmat_cont_struc\r\n+\t\t[1]\t{pmin=59146400,5973200 pmax=59606001,6438000} mat_cont_lim_struc\tmat_cont_struc\r\n+\t\t[2]\t{nedge=23 nalloc=25 ntop=2 ...} mat_cont_poly_struc\tmat_cont_struc\r\n+\t\t[3]\t{pmin=59146400,5973200 pmax=59606001,6438000} mat_cont_lim_struc\tmat_cont_struc\r\n+\t\t[4]\t{ps=59192738,6363124 pe=59216000,6372800 pc=59216000,6340000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[5]\t{ps=59216000,6372800 pe=59267652,6372800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[6]\t{ps=59267652,6372800 pe=59267652,6307200 pc=59360000,6340000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[7]\t{ps=59267652,6307200 pe=59229586,6307200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[8]\t{ps=59229586,6307200 pe=59212000,6289614} mat_seg_struc\tmat_cont_struc\r\n+\t\t[9]\t{ps=59212000,6289614 pe=59212000,6056386} mat_seg_struc\tmat_cont_struc\r\n+\t\t[10]\t{ps=59212000,6056386 pe=59229586,6038800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[11]\t{ps=59229586,6038800 pe=59469614,6038800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[12]\t{ps=59469614,6038800 pe=59487200,6056386} mat_seg_struc\tmat_cont_struc\r\n+\t\t[13]\t{ps=59487200,6056386 pe=59487200,6100500} mat_seg_struc\tmat_cont_struc\r\n+\t\t[14]\t{ps=59487200,6100500 pe=59434000,6180000 pc=59520000,6180000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[15]\t{ps=59434000,6180000 pe=59552800,6100500 pc=59520000,6180000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[16]\t{ps=59552800,6100500 pe=59552800,6042800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[17]\t{ps=59552800,6042800 pe=59543124,6019538 pc=59520000,6042800 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[18]\t{ps=59543124,6019538 pe=59506462,5982876} mat_seg_struc\tmat_cont_struc\r\n+\t\t[19]\t{ps=59506462,5982876 pe=59483200,5973200 pc=59483200,6006000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[20]\t{ps=59483200,5973200 pe=59216000,5973200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[21]\t{ps=59216000,5973200 pe=59192738,5982876 pc=59216000,6006000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[22]\t{ps=59192738,5982876 pe=59156076,6019538} mat_seg_struc\tmat_cont_struc\r\n+\t\t[23]\t{ps=59156076,6019538 pe=59146400,6042800 pc=59179200,6042800 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[24]\t{ps=59146400,6042800 pe=59146400,6303200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[25]\t{ps=59146400,6303200 pe=59156076,6326462 pc=59179200,6303200 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[26]\t{ps=59156076,6326462 pe=59192738,6363124} mat_seg_struc\tmat_cont_struc\r\n`;\r\n*/\r\n\r\n/*\r\n+\t\tcircle\t{pc=40445880,-10500080 r=41327880}\tmat_circle_struc\r\n+\t\tcircle\t{pc=38215880,-7700040 r=92456}\tmat_circle_struc\r\n+\t\trect\t{pll=38215880,-7700040 w=92456 h=50000}\tmat_rect_struc\r\n+\t\tshape1\t{type=512 s={...} }\t_mat_shape_struc\r\n+\t\tline\t{ps=-18423,529080 pe=1047776,480195 r=60000 cap=0}\tmat_line_struc\r\n+\t\tarc\t{ps=1001217,249728 pe=752127,51853 pc=853697,179712 cw=??? r=60000 cap=0}\tmat_arc_struc\r\n */\r\n\r\n\r\n    // function parseToWatchArray(str) {\r\n    //     let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n    //     let watchArray = [];\r\n    //     for (let line of arrayOfLines) {\r\n    //         watchArray.push(line.substring(line.indexOf('{')));\r\n    //     }\r\n    //     return watchArray;\r\n    // }\r\n\r\n    function parseToPoint(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let x, y;\r\n        // try to parse format: {p=7496986,-4460045}\r\n        x = parseInt(parenth.split('=')[1].split(',')[0],10);\r\n        y = parseInt(parenth.split('=')[1].split(',')[1],10);\r\n        if (isNaN(x) || isNaN(y)) {\r\n            // try to parse format: {x=7169200 y=3521200 }\r\n            x = parseInt(parenth.trim().split(' ')[0].split('=')[1],10);\r\n            y = parseInt(parenth.trim().split(' ')[1].split('=')[1],10);\r\n        }\r\n        //let pointArr = parenth.split('=')[1].split(',');\r\n        //let point = new Point(parseInt(pointArr[0],10), parseInt(pointArr[1],10));\r\n        let point = new Point(x,y);\r\n        point.label = line.split(/\\s+/)[1];\r\n        return point;\r\n    }\r\n\r\n    function parseToSegment(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        return new Segment(ps, pe);\r\n    }\r\n\r\n    function parseToArc(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let pcArr = termArr[2].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n\r\n        let cwStr = termArr[3].split('=')[1];\r\n        let counterClockwise = cwStr === '0' ? true : false;\r\n\r\n        let startAngle = vector(pc,ps).slope;\r\n        let endAngle = vector(pc, pe).slope;\r\n\r\n        if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n            // endAngle += 2*Math.PI;\r\n            endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n        }\r\n        let r = vector(pc, ps).length;\r\n\r\n        return new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n    }\r\n\r\n    function parseToCircle(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let pcArr = termArr[0].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n        let r = parseInt(termArr[1].split('=')[1],10);\r\n        // let circle = new Circle(pc, r);\r\n        // let polygon = new Polygon();\r\n        // polygon.addFace(circle);\r\n        return new Circle(pc, r);;\r\n    }\r\n\r\n    function parseToRectangle(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let pllArr = termArr[0].split('=')[1].split(',');\r\n        let xmin = parseInt(pllArr[0],10);\r\n        let ymin = parseInt(pllArr[1],10);\r\n        let width = parseInt(termArr[1].split('=')[1],10);\r\n        let height = parseInt(termArr[2].split('=')[1],10);\r\n\r\n        let box = new Box(xmin, ymin, xmin + width, ymin + height);\r\n        let polygon = new Polygon();\r\n        polygon.addFace(box);\r\n        return polygon;\r\n        // return new Box(xmin, ymin, xmin + width, ymin + height);\r\n    }\r\n\r\n    function parseToODBLine(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let w = parseInt(termArr[2].split('=')[1],10);\r\n\r\n        let segment = new Segment(ps, pe);\r\n        let polygon = w > 0 ? offsetSegment(segment, w) : new Polygon();\r\n\r\n        return polygon;\r\n    }\r\n\r\n    function parseToODBArc(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let pcArr = termArr[2].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n\r\n        let cwStr = termArr[3].split('=')[1];\r\n        let counterClockwise = cwStr === '0' ? true : false;\r\n\r\n        let startAngle = vector(pc,ps).slope;\r\n        let endAngle = vector(pc, pe).slope;\r\n\r\n        if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n            // endAngle += 2*Math.PI;\r\n            endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n        }\r\n        let r = vector(pc, ps).length;\r\n\r\n        let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n        let w = parseInt(termArr[4].split('=')[1],10);\r\n\r\n        let polygon = w > 0 ? offsetArc(arc, w) : new Polygon();\r\n\r\n        return polygon;\r\n    }\r\n\r\n    function parseToPolygon(str) {\r\n        let polygon = new Polygon();\r\n        // let mulitystr = debug_str;\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n\r\n        for (let i=0; i < arrayOfLines.length; i++) {\r\n            let line = arrayOfLines[i];\r\n            if (line.search('mat_cont_poly_struc') >= 0) {\r\n                let parenth = line.match(/\\{([^)]+)\\}/)[1];       // string inside {..}\r\n                let termArr = parenth.split(' ');                 // array of terms \"attr=value\"\r\n                let nedgesTerm = termArr[0];                      // \"nedge=nn\"\r\n                let nedgesStr = nedgesTerm.split('=')[1];\r\n                let nedges = parseInt(nedgesStr,10);\r\n\r\n                // Create new face from next #nedges of segments and arcs\r\n                let edges = [];\r\n                for (let j=i+2; j < i+2+nedges; j++) {\r\n                    line = arrayOfLines[j];\r\n                    // let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n                    // let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n                    if (line.search('mat_seg_struc') >= 0) {\r\n                        let segment = parseToSegment(line);\r\n                        edges.push(segment);\r\n                    }\r\n                    else if (line.search('mat_curve_struc') >= 0) {\r\n                        let arc = parseToArc(line);\r\n                        edges.push(arc);\r\n                    }\r\n                }\r\n                polygon.addFace(edges);\r\n            }\r\n        }\r\n        return polygon;\r\n    }\r\n\r\n    function parseToPoints(str) {\r\n        let points = [];\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n        for (let line of arrayOfLines) {\r\n            if (line.search('point_struc') >= 0) {\r\n                let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n                let pointArr = parenth.split('=')[1].split(',');\r\n                let point = new Point(parseInt(pointArr[0],10), parseInt(pointArr[1],10));\r\n                point.label = line.split(/\\s+/)[1];\r\n                points.push(point);\r\n            }\r\n        }\r\n        return points;\r\n    }\r\n\r\n    function parseToShapes(str) {\r\n        let shapes = [];\r\n        let shape;\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n\r\n        if (arrayOfLines[0].length === 1 && arrayOfLines[0] === \"N\") {\r\n            shapes = parseToFlightaShapes(str);\r\n            return shapes;\r\n        }\r\n\r\n        for (let line of arrayOfLines) {\r\n            if (line.search('point_struc') >= 0) {\r\n                shape = parseToPoint(line);\r\n            }\r\n            else if (line.search('_seg_struc') >= 0) {\r\n                shape = parseToSegment(line);\r\n            }\r\n            else if (line.search('_curve_struc') >= 0) {\r\n                shape = parseToArc(line);\r\n            }\r\n            else if (line.search('_circle_struc') >= 0) {\r\n                shape = parseToCircle(line);\r\n            }\r\n            else if (line.search('_rect_struc') >= 0) {\r\n                shape = parseToRectangle(line);\r\n            }\r\n            else if (line.search('_line_struc') >= 0) {\r\n                shape = parseToODBLine(line);\r\n            }\r\n            else if (line.search('_arc_struc') >= 0) {\r\n                shape = parseToODBArc(line);\r\n            }\r\n            shapes.push(shape);\r\n        }\r\n        return shapes;\r\n    }\r\n    \r\n    // Parse data pasted from Visual Studio debugger watch window\r\n    export function parseDebug(str) {\r\n        /* try polygon */\r\n        let polygon = parseToPolygon(str);\r\n        if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n            return [polygon];\r\n        }\r\n\r\n        /* try array of shapes excluding polygon or array of shapes in \"Flighta\" format */\r\n        let shapes = parseToShapes(str);\r\n        if (shapes.length > 0) {\r\n            return shapes;\r\n        }\r\n\r\n        /* try array of points */\r\n        let points = parseToPoints(str);\r\n        if (points.length > 0) {\r\n            return points;\r\n        }\r\n\r\n    }\r\n\r\n\r\n","import { Job } from '../models/job';\r\nimport {parseDebug} from './parseDebug';\r\n\r\nexport function parseTXT(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let shapesArray = parseDebug(str);\r\n\r\n    if (shapesArray.length > 0) {\r\n        for (let shape of shapesArray) {\r\n            job.shapes.push(shape)\r\n        }\r\n    }\r\n\r\n    return job\r\n}","import React, {useEffect, useState} from 'react';\r\nimport EditorComponent from \"../../components/EditorComponent/EditorComponent\";\r\n// import styles from \"./DemoComponent.module.css\";\r\nimport {parseTXT} from \"../../dataParsers/parseTXT\";\r\nimport Layers from \"../../models/layers\";\r\n\r\nlet url234 = \"https://gist.githubusercontent.com/alexbol99/e570fe783be88b556f4ca4b332da73f7/raw/741c87a7ceccdeadd9fbbac05bdfda22ebe94927/poly234.txt\";\r\n\r\nconst DemoComponent = () => {\r\n    const [layers,setLayers] = useState([]);\r\n\r\n    useEffect( () => {\r\n        const fetchDemo = async () => {\r\n            const resp = await fetch(url234);\r\n            const data = await resp.text();\r\n            const job = parseTXT(\"layer\"/*layer.name*/, data);\r\n\r\n            setLayers(prevLayers => {\r\n                const layer = Layers.newLayer(null, prevLayers);\r\n                layer.color = Layers.getNextColor(prevLayers);\r\n                layer.displayed = true;\r\n                layer.affected = true;\r\n                for (let shape of job.shapes) {\r\n                    layer.add(shape);\r\n                }\r\n                const newLayers = [...prevLayers, layer];\r\n                return newLayers;\r\n            });\r\n        }\r\n\r\n        fetchDemo()\r\n            .catch(console.error)\r\n\r\n    },[])\r\n\r\n    const clearCurrentDocument = () => {\r\n        setLayers([])\r\n        // this.props.history?.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <EditorComponent\r\n            onClearAllButtonClicked={clearCurrentDocument}\r\n        >\r\n            {layers}\r\n        </EditorComponent>\r\n    );\r\n};\r\n\r\nexport default DemoComponent;\r\n","// import { Job } from '../models/job';\r\nimport Flatten from '@flatten-js/core';\r\n\r\n// import Model from '../models/model';\r\nimport {Job} from \"../models/job\";\r\n\r\nFlatten.Image = class Image {\r\n    constructor() {\r\n        this.uri = \"\";\r\n        /**\r\n         * Center in world coordinates\r\n         * @type {Flatten.Point}\r\n         */\r\n        this.center = new Flatten.Point();\r\n        /**\r\n         * Width in world units (inch/mm)\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * Height in world units (inch/mm)\r\n         */\r\n        this.height = 0;\r\n    }\r\n    get box() {\r\n        return new Flatten.Box(\r\n            this.center.x - this.width/2,\r\n            this.center.y - this.height/2,\r\n            this.center.x + this.height/2,\r\n            this.center.y + this.height/2\r\n        );\r\n\r\n    }\r\n};\r\n\r\n// export function parseJSON(shapes) {\r\n//     let models = [];\r\n//     let geom;\r\n//     let model;\r\n//     for (let shape of JSON.parse(shapes)) {\r\n//         if (shape.geom instanceof Array) {      // TODO: add \"name\" to polygon stringified\r\n//             geom = new Flatten.Polygon();\r\n//             for (let faceArray of shape.geom) {\r\n//                 geom.addFace(faceArray);\r\n//             }\r\n//         }\r\n//         else if (shape.geom.uri) {\r\n//             geom = new Flatten.Image();\r\n//             geom.uri = shape.geom.uri;\r\n//             geom.center = shape.geom.center;\r\n//             geom.width = shape.geom.width;\r\n//             geom.height = shape.geom.height;\r\n//         }\r\n//         else {\r\n//             geom = Flatten[shape.geom.name](shape.geom);\r\n//         }\r\n//         model = new Model(geom, shape.style, shape.label);\r\n//         models.push(model);\r\n//     }\r\n//\r\n//     return models;\r\n// }\r\n\r\nfunction parseJSONShape(jsonShape) {\r\n    if (jsonShape.name === \"segment\") {\r\n        return new Flatten.Segment(jsonShape);\r\n    }\r\n\r\n    if (jsonShape.name === \"arc\") {\r\n        return new Flatten.Arc(jsonShape);\r\n    }\r\n\r\n    if (jsonShape.name === \"point\") {\r\n        return new Flatten.Point(jsonShape);\r\n    }\r\n}\r\n\r\nexport function parseJSON(filename=\"\", str) {\r\n    let job = new Job();\r\n\r\n    job.filename = filename;\r\n\r\n    let jsonArray;\r\n\r\n    try {\r\n        jsonArray = JSON.parse(str);\r\n    } catch (e) {\r\n        throw new Error(\"Illegal JSON string\")\r\n    }\r\n\r\n    if (jsonArray instanceof Array) {\r\n        try {\r\n            let polygon = new Flatten.Polygon();\r\n            for (let faceArray of jsonArray) {\r\n                polygon.addFace(faceArray);\r\n            }\r\n            job.shapes.push(polygon);\r\n        }\r\n        catch (e) {\r\n            for (let jsonShape of jsonArray) {\r\n                job.shapes.push( parseJSONShape(jsonShape) );\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        job.shapes.push( parseJSONShape(jsonArray) );\r\n    }\r\n\r\n    return job;\r\n}\r\n","import * as ActionTypes from \"../actionTypes\";\r\n\r\nconst unitsList = [\r\n    {\r\n        name: \"pixels\",\r\n        decimals: 0,\r\n        divisor: 1\r\n    },\r\n    {\r\n        name: \"inch\",\r\n        decimals: 7,\r\n        divisor: 10160000\r\n    },\r\n    {\r\n        name: \"mm\",\r\n        decimals: 6,\r\n        divisor: 400000\r\n    }];\r\n\r\nexport const initialUnitsState = unitsList[0];\r\n\r\nconst unitsReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.TOGGLE_UNITS_CLICKED:\r\n            let curUnitsId = unitsList.findIndex(units => state.name === units.name);\r\n            let newUnits = unitsList[(curUnitsId + 1) % 3];\r\n            return {...state,\r\n                name: newUnits.name,\r\n                decimals: newUnits.decimals,\r\n                divisor: newUnits.divisor\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default unitsReducer;\r\n","import * as ActionTypes from \"../actionTypes\";\r\n\r\nexport const defaultAppState = {\r\n    title: \"Debug Viewer\",\r\n    version: process.env.REACT_APP_VERSION,\r\n    build: \"3.0.0\",\r\n    // bg: \"#F1F1F1\",\r\n    widthOn: true,\r\n    displayVertices: false,\r\n    displayLabels: false,\r\n    measurePointsActive: false,\r\n    showAboutPopup: false,\r\n    importDataToNewLayer: true,       // if false, import data to affected layer\r\n    showSpinner: false,\r\n    showLayersWidget: false,\r\n    showDownloadPopup: false,\r\n    showUploadPopup: false,\r\n};\r\n\r\nconst app = (state = defaultAppState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.STAGE_UNMOUNTED:\r\n            return {\r\n                ...state,\r\n                stage: null,\r\n                zoomFactor: undefined,\r\n                originX: undefined,\r\n                originY: undefined\r\n            };\r\n\r\n        case ActionTypes.TOGGLE_WIDTH_MODE_CLICKED:\r\n            return {\r\n                ...state,\r\n                widthOn: !state.widthOn,\r\n                displayVertices: state.widthOn ? state.displayVertices : false\r\n            };\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_VERTICES_CLICKED:\r\n            if (state.displayVertices) {\r\n                return {\r\n                    ...state,\r\n                    displayVertices: false\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    widthOn: false,\r\n                    displayVertices: true\r\n                };\r\n            }\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LABELS_CLICKED:\r\n            return {\r\n                ...state,\r\n                displayLabels: !state.displayLabels\r\n            };\r\n\r\n        case ActionTypes.TOGGLE_ABOUT_POPUP_CLICKED:\r\n            return {\r\n                ...state,\r\n                showAboutPopup: !state.showAboutPopup\r\n            };\r\n\r\n        case ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED:\r\n            return {\r\n                ...state,\r\n                measurePointsActive: false\r\n            };\r\n\r\n        case ActionTypes.MEASURE_POINTS_BUTTON_PRESSED:\r\n            return {\r\n                ...state,\r\n                measurePointsActive: true\r\n            };\r\n\r\n        case ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED:\r\n            return {\r\n                ...state,\r\n                measurePointsActive: false\r\n            };\r\n\r\n        case ActionTypes.TOGGLE_SHOW_LAYER_LIST_CLICKED:\r\n            return {\r\n                ...state,\r\n                showLayersWidget: !state.showLayersWidget\r\n            };\r\n\r\n        case ActionTypes.TOGGLE_DOWNLOAD_POPUP_CLICKED:\r\n            return {\r\n                ...state,\r\n                showDownloadPopup: !state.showDownloadPopup\r\n            };\r\n        case ActionTypes.TOGGLE_UPLOAD_POPUP_CLICKED:\r\n            return {\r\n                ...state,\r\n                showUploadPopup: !state.showUploadPopup\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default app;\r\n","import * as ActionTypes from \"../actionTypes\";\r\n\r\nexport const defaultUploadState = {\r\n    uploadStarted:  false,\r\n    uploadCompleted: false,\r\n    uploadedFiles: []\r\n};\r\n\r\nconst upload = (state, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.INITIALIZE_UPLOAD_STATE:\r\n            return defaultUploadState;\r\n\r\n        case ActionTypes.FILES_UPLOAD_COMPLETED:\r\n            return {\r\n                ...state,\r\n                uploadCompleted: true,\r\n                uploadedFiles: action.uploadedFiles\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default upload","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const resizeStage = () => {\r\n    return {\r\n        type: ActionTypes.STAGE_RESIZED\r\n    }\r\n};\r\n\r\nexport const destroyStage = () => {\r\n    return {\r\n        type: ActionTypes.STAGE_UNMOUNTED\r\n    }\r\n};\r\n\r\nexport const toggleUnits = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_UNITS_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleWidthMode = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_WIDTH_MODE_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleDisplayVertices = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_VERTICES_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleDisplayLabels = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_LABELS_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleAboutPopup = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_ABOUT_POPUP_CLICKED\r\n    }\r\n};\r\n\r\n// export const closeAboutPopup = () => {\r\n//     return {\r\n//         type: ActionTypes.CLOSE_ABOUT_POPUP_BUTTON_PRESSED\r\n//     }\r\n// };\r\n\r\nexport const toggleMeasureBetweenPoints = () => {\r\n    return {\r\n        type: ActionTypes.MEASURE_POINTS_BUTTON_PRESSED\r\n    }\r\n};\r\n\r\n// export const handleFileSelect = (files, stage, layersReducer) => {\r\n//     return {\r\n//         type: ActionTypes.FILENAME_LIST_SELECTED,\r\n//         files,\r\n//         stage,\r\n//         layersReducer\r\n//     }\r\n// };\r\n\r\nexport const setHomeView = (stage, shape) => {\r\n    return {\r\n        type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n        stage,\r\n        shape\r\n    }\r\n};\r\n\r\nexport const togglePanByDrag = () => {\r\n    return {\r\n        type: ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED\r\n    }\r\n};\r\n\r\nexport const asyncOperationStarted = () => {\r\n    return {\r\n        type: ActionTypes.ASYNC_OPERATION_STARTED\r\n    }\r\n};\r\n\r\nexport const asyncOperationEnded = () => {\r\n    return {\r\n        type: ActionTypes.ASYNC_OPERATION_ENDED\r\n    }\r\n};\r\n\r\nexport const openDocumentOnCloud = () => {\r\n    return {\r\n        type: ActionTypes.MANAGE_CLOUD_STORAGE_BUTTON_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleLayersWidget = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_SHOW_LAYER_LIST_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleDownloadPopup = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DOWNLOAD_POPUP_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleUploadPopup = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_UPLOAD_POPUP_CLICKED\r\n    }\r\n};\r\n\r\nexport const pasteDataFromBuffer = (clipboardData) => {\r\n    return {\r\n        type: ActionTypes.DATA_FROM_BUFFER_PASTED,\r\n        data: clipboardData\r\n    }\r\n};\r\n\r\n\r\n","import { Job } from '../models/job';\r\nimport {Point, Segment, Arc, Polygon, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\n\r\nFlatten.Image = class Image {\r\n    constructor() {\r\n        this.uri = \"\";\r\n        /**\r\n         * Center in world coordinates\r\n         * @type {Flatten.Point}\r\n         */\r\n        this.center = new Flatten.Point();\r\n        /**\r\n         * Width in world units (inch/mm)\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * Height in world units (inch/mm)\r\n         */\r\n        this.height = 0;\r\n    }\r\n    get box() {\r\n        return new Flatten.Box(\r\n            this.center.x - this.width/2,\r\n            this.center.y - this.height/2,\r\n            this.center.x + this.height/2,\r\n            this.center.y + this.height/2\r\n        );\r\n\r\n    }\r\n};\r\n\r\nfunction parseEdges(edgesXML) {\r\n    let edges = [];\r\n\r\n    for (let edge of Array.from(edgesXML)) {\r\n        let type = edge.getAttribute('type');\r\n\r\n        if (type === \"segment\") {\r\n            let ps = new Point(parseInt(edge.getAttribute('xs'),10), parseInt(edge.getAttribute('ys'),10));\r\n            let pe = new Point(parseInt(edge.getAttribute('xe'),10), parseInt(edge.getAttribute('ye'),10));\r\n\r\n            edges.push(new Segment(ps, pe));\r\n        }\r\n\r\n        if (type === \"curve\") {\r\n            let ps = new Point(parseInt(edge.getAttribute('xs'),10), parseInt(edge.getAttribute('ys'),10));\r\n            let pe = new Point(parseInt(edge.getAttribute('xe'),10), parseInt(edge.getAttribute('ye'),10));\r\n            let pc = new Point(parseInt(edge.getAttribute('xc'),10), parseInt(edge.getAttribute('yc'),10));\r\n\r\n            let counterClockwise = edge.getAttribute('cw') === 'no' ? true : false;\r\n\r\n            let startAngle = vector(pc,ps).slope;\r\n            let endAngle = vector(pc, pe).slope;\r\n\r\n            if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n                endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n            }\r\n\r\n            let r = vector(pc, ps).length;\r\n\r\n            edges.push(new Arc(pc, r, startAngle, endAngle, counterClockwise));\r\n        }\r\n    }\r\n\r\n    return edges;\r\n}\r\n\r\nfunction parsePolygon(polygonsXML) {\r\n    let polygon = new Polygon();\r\n\r\n    // let nedges = parseInt(profile.getAttribute(\"n_edges\"), 10);\r\n\r\n    // Augment Flatten object with style\r\n    let color = polygonsXML.getAttribute(\"color\");\r\n    polygon.style = {\r\n        stroke: color || undefined,\r\n        fill: color || undefined,\r\n        alpha: 1.0\r\n    };\r\n\r\n    // Augment Flatten object with label\r\n    let label = polygonsXML.getAttribute(\"label\");\r\n    polygon.label = label;\r\n\r\n    // Add islands\r\n    let islands = polygonsXML.getElementsByTagName('island');\r\n    for (let island of Array.from(islands)) {\r\n        let edgesXML = island.getElementsByTagName('edge');\r\n        polygon.addFace(parseEdges(edgesXML));\r\n    }\r\n\r\n    // Add holes\r\n    let holes = polygonsXML.getElementsByTagName('hole');\r\n    for (let hole of Array.from(holes)) {\r\n        let edgesXML = hole.getElementsByTagName('edge');\r\n        polygon.addFace(parseEdges(edgesXML));\r\n    }\r\n\r\n    return polygon;\r\n}\r\n\r\nfunction parseSegment(segmentXML) {\r\n    let ps = new Point(parseInt(segmentXML.getAttribute('xs'),10), parseInt(segmentXML.getAttribute('ys'),10));\r\n    let pe = new Point(parseInt(segmentXML.getAttribute('xe'),10), parseInt(segmentXML.getAttribute('ye'),10));\r\n\r\n    let segment = new Segment(ps, pe);\r\n\r\n    // Augment Flatten object with label property\r\n    let label = segmentXML.getAttribute(\"label\");\r\n    segment.label = label;\r\n\r\n    return segment;\r\n}\r\n\r\nfunction parseCurve(curveXML) {\r\n    let ps = new Point(parseInt(curveXML.getAttribute('xs'),10), parseInt(curveXML.getAttribute('ys'),10));\r\n    let pe = new Point(parseInt(curveXML.getAttribute('xe'),10), parseInt(curveXML.getAttribute('ye'),10));\r\n    let pc = new Point(parseInt(curveXML.getAttribute('xc'),10), parseInt(curveXML.getAttribute('yc'),10));\r\n\r\n    let counterClockwise = curveXML.getAttribute('cw') === 'no' ? true : false;\r\n\r\n    let startAngle = vector(pc,ps).slope;\r\n    let endAngle = vector(pc, pe).slope;\r\n\r\n    if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n        endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n    }\r\n\r\n    let r = vector(pc, ps).length;\r\n\r\n    let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n    // Augment Flatten object with label property\r\n    let label = curveXML.getAttribute(\"label\");\r\n    arc.label = label;\r\n\r\n    return arc;\r\n}\r\n\r\nfunction parsePoint(pointXML) {\r\n    let point = new Point(parseInt(pointXML.getAttribute('x'),10), parseInt(pointXML.getAttribute('y'),10));\r\n\r\n    // Augment Flatten object with label property\r\n    let label = pointXML.getAttribute(\"label\");\r\n    point.label = label;\r\n\r\n    return point;\r\n}\r\n\r\nfunction parseImage(imageXML) {\r\n    let img = new Flatten.Image();\r\n    img.center = new Point(parseInt(imageXML.getAttribute('xc'),10), parseInt(imageXML.getAttribute('yc'),10));\r\n    img.width = parseInt(imageXML.getAttribute('width'),10);\r\n    img.height = parseInt(imageXML.getAttribute('height'),10);\r\n    img.uri = imageXML.getAttribute('uri');\r\n    return img;\r\n}\r\n\r\nexport function parseXML(filename, str) {\r\n    let job = new Job();\r\n\r\n    job.filename = filename;\r\n\r\n    let parser = new DOMParser();\r\n    let xmlDoc = parser.parseFromString(str, \"text/xml\");\r\n\r\n    // Parse document title\r\n    let titles = xmlDoc.getElementsByTagName('title');\r\n    if (titles && titles.length > 0) {\r\n        job.title = titles[0].firstChild.nodeValue;          // take the first title if more than one\r\n    }\r\n\r\n    // Parse profiles and add polygons to the job\r\n    let profilesXML = xmlDoc.getElementsByTagName('profile');\r\n    for (let profileXML of Array.from(profilesXML)) {\r\n        let polygon = parsePolygon(profileXML);\r\n        job.profiles.push(polygon);\r\n    }\r\n\r\n    // Parse materials and add polygons to the job\r\n    let materialXML = xmlDoc.getElementsByTagName('material');\r\n    for (let shapeXML of Array.from(materialXML)) {\r\n        let polygon = parsePolygon(shapeXML);\r\n        job.materials.push(polygon);\r\n    }\r\n\r\n    // Parse segments\r\n    let segmentsXML = xmlDoc.getElementsByTagName('segment');\r\n    for (let segmentXML of Array.from(segmentsXML)) {\r\n        let segment = parseSegment(segmentXML);\r\n        job.shapes.push(segment);\r\n    }\r\n\r\n    // Parse segments\r\n    let curvesXML = xmlDoc.getElementsByTagName('curve');\r\n    for (let curveXML of Array.from(curvesXML)) {\r\n        let curve = parseCurve(curveXML);\r\n        job.shapes.push(curve);\r\n    }\r\n\r\n    // Parse points\r\n    let pointsXML = xmlDoc.getElementsByTagName('point');\r\n    for (let pointXML of Array.from(pointsXML)) {\r\n        let point = parsePoint(pointXML);\r\n        job.shapes.push(point);\r\n    }\r\n\r\n    // Parse images\r\n    let imagesXML = xmlDoc.getElementsByTagName('picture');\r\n    for (let imageXML of Array.from(imagesXML)) {\r\n        let image = parseImage(imageXML);\r\n        job.shapes.push(image);\r\n    }\r\n\r\n    return job;\r\n}\r\n","import { Job } from '../models/job';\r\nimport {Point, Segment, Arc, Polygon, Utils, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\n\r\nconst inch2pixels = 10160000;\r\nconst mils2pixels = 10160;\r\nfunction InchToPixels(str) {\r\n    return Math.round(Number(str)*inch2pixels,0);\r\n}\r\nfunction MilsToPixels(str) {\r\n    return Math.round(Number(str)*mils2pixels,0);\r\n}\r\n\r\nfunction parsePolygon(lines, start) {\r\n    let shapes = [];\r\n    let i = start;\r\n    let line = lines[i];\r\n    let terms = line.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe;\r\n    let pc;\r\n    let end_of_face = false;\r\n    while(true) {\r\n        line = lines[i];\r\n        terms = line.split(' ');\r\n        switch (terms[0]) {\r\n            case 'OS':\r\n                pe = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n                shapes.push( new Segment(ps, pe));\r\n\r\n                ps = pe.clone();\r\n                break;\r\n            case 'OC':\r\n                pe = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n                pc = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n\r\n                let cwStr = terms[5];\r\n                let counterClockwise = cwStr === 'Y' ? Flatten.CW : Flatten.CCW; /* sic ! */\r\n\r\n                let startAngle = vector(pc,ps).slope;\r\n                let endAngle = vector(pc, pe).slope;\r\n                if (Utils.EQ(startAngle, endAngle)) {\r\n                    endAngle += 2*Math.PI;\r\n                    counterClockwise = true;\r\n                }\r\n                let r = vector(pc, ps).length;\r\n\r\n                shapes.push(new Arc(pc, r, startAngle, endAngle, counterClockwise));\r\n\r\n                ps = pe.clone();\r\n                break;\r\n            case 'OE':\r\n                end_of_face = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (end_of_face) {\r\n            break;\r\n        }\r\n\r\n        i++;\r\n    }\r\n    return shapes;\r\n}\r\n\r\nfunction parseLine(str, apertures) {\r\n    let terms = str.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n    let segment = new Segment(ps, pe);\r\n    let ap_key = Number(terms[5]);\r\n    let ap_value = apertures[ap_key];\r\n    segment.aperture = ap_value;     // augmentation\r\n    return segment;\r\n}\r\n\r\nfunction parseArc(str, apertures) {\r\n    let terms = str.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n    let pc = new Point( InchToPixels(terms[5]), InchToPixels(terms[6]) );\r\n\r\n    let cwStr = terms[10];\r\n    let counterClockwise = cwStr === 'Y' ? Flatten.CW : Flatten.CCW; /* sic ! */\r\n\r\n    let startAngle = vector(pc,ps).slope;\r\n    let endAngle = vector(pc, pe).slope;\r\n    if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(pc, ps).length;\r\n\r\n    let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n    let ap_key = Number(terms[7]);\r\n    let ap_value = apertures[ap_key];\r\n    arc.aperture = ap_value;     // augmentation\r\n\r\n    return arc;\r\n}\r\n\r\nexport function parseODB(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n    let polygon;\r\n\r\n    let apertures = [];\r\n\r\n    for (let i=0; i < arrayOfLines.length; i++) {\r\n        let line = arrayOfLines[i];\r\n        let terms = line.split(' ');\r\n\r\n        if (terms[0].substr(0,1) === '$') {\r\n            let ap_key = Number(terms[0].substr(1));\r\n            let ap_value = MilsToPixels(terms[1].substr(1));\r\n            apertures[ap_key] = ap_value;\r\n            continue;\r\n        }\r\n\r\n        switch (terms[0]) {\r\n            case 'S':                  // surface started\r\n                polygon = new Polygon();\r\n                let termArr = line.split(' ');\r\n                let polarity = termArr[1];      // consider later\r\n                polygon.polarity = polarity;\r\n                break;\r\n            case 'OB':                  // polygon started\r\n                let start = i;\r\n                let shapes = parsePolygon(arrayOfLines, start);\r\n                polygon.addFace(shapes);\r\n                i = start + shapes.length + 1;\r\n                break;\r\n            case 'SE':     // surface ended\r\n                job.shapes.push(polygon);\r\n                break;\r\n            case 'L':                  // line\r\n                let odbLine = parseLine(line, apertures);\r\n                job.shapes.push(odbLine);\r\n                break;\r\n            case 'A':                  // Arc\r\n                let odbArc = parseArc(line, apertures);\r\n                job.shapes.push(odbArc);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return job;\r\n}","import { Job } from '../models/job';\r\nimport {point} from '@flatten-js/core';\r\n\r\nconst micron2pixels = 400;\r\nfunction micronToPixels(str) {\r\n    return Math.round(Number(str)*micron2pixels,0);\r\n}\r\n\r\nexport function parseCSV(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n\r\n    for (let i = 0; i < arrayOfLines.length; i++) {\r\n        let line = arrayOfLines[i];\r\n        let terms = line.split(',');\r\n\r\n        let px = micronToPixels(terms[0]);\r\n        let py = micronToPixels(terms[1]);\r\n        let nx = Number(terms[2]);\r\n        let ny = Number(terms[3]);\r\n        let shape = point(px,py);\r\n        shape.nx = nx;\r\n        shape.ny = ny;\r\n        job.shapes.push(shape)\r\n    }\r\n\r\n    return job\r\n}","import * as ActionTypes from \"../actionTypes\";\r\nimport * as appActions from \"../actions/appActions\";\r\nimport Layers from '../../models/layers';\r\nimport Model from \"../../models/model\";\r\nimport { parseXML } from '../../dataParsers/parserXML';\r\nimport { parseODB } from \"../../dataParsers/parserODB\";\r\nimport { parseImage } from \"../../dataParsers/parsePGM\";\r\nimport { parseCSV } from \"../../dataParsers/parseCSV\";\r\nimport { parseTXT } from \"../../dataParsers/parseTXT\";\r\nimport { parseJSON } from \"../../dataParsers/parseJSON\";\r\nimport { parseFlighta } from \"../../dataParsers/parseFlighta\";\r\n\r\n// Closure to capture file information and parameters\r\nconst readAsText = (reader, file, stage, layers, dispatch, files) => {\r\n\r\n    let promise = new Promise( (resolve, reject) => {\r\n        reader.onload = (function(theFile, stage, layers, dispatch, files, resolve, reject) {\r\n            return (event) => {\r\n                let string = event.target.result;\r\n\r\n                let namesplitted = theFile.name.split('.');\r\n                let extension = namesplitted[namesplitted.length-1];\r\n                let job;\r\n                if (extension === 'xml') {\r\n                    job = parseXML(theFile.name, string);\r\n                }\r\n                else if (extension === 'csv') {\r\n                    job = parseCSV(theFile.name, string);\r\n                }\r\n                else if (extension === 'txt') {\r\n                    job = parseTXT(theFile.name, string);\r\n                }\r\n                else if (extension === 'json') {\r\n                    job = parseJSON(theFile.name, string);\r\n                }\r\n                else if (extension === 'cdbg') {\r\n                    job = parseFlighta(theFile.name, string);\r\n                }\r\n                else {\r\n                    let arrayOfLines = string.match(/[^\\r\\n]+/g);\r\n                    if (arrayOfLines[0].length === 1 && arrayOfLines[0] === \"N\") {\r\n                        job = parseFlighta(theFile.name, string);\r\n                    }\r\n                    else {\r\n                        job = parseODB(theFile.name, string);\r\n                    }\r\n                }\r\n                let layer = Layers.newLayer(stage, layers);\r\n                if (theFile.name !== \"\") {\r\n                    layer.name = theFile.name;\r\n                }\r\n                layer.title = job.title;\r\n\r\n                for (let polygon of job.profiles) {\r\n                    if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n                        // let watch = undefined; //  parser.parseToWatchArray(string);\r\n                        // let shape = new Shape(polygon, stage, polygon.style, watch);\r\n                        let shape = new Model(polygon, undefined, polygon.label);\r\n\r\n                        layer.add(shape);\r\n                    }\r\n                }\r\n\r\n                for (let polygon of job.materials) {\r\n                    if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n                        // let watch = undefined; //  parser.parseToWatchArray(string);\r\n                        // let shape = new Shape(polygon, stage, polygon.style, watch);\r\n                        let shape = new Model(polygon, undefined, polygon.label);\r\n\r\n                        layer.add(shape);\r\n                    }\r\n                }\r\n\r\n                for (let shape of job.shapes) {\r\n                    let model = new Model(shape, undefined, shape.label);\r\n                    layer.add(model);\r\n                }\r\n\r\n                // layersReducer.push(layer);\r\n\r\n                if (theFile === files[0]) {\r\n                    Layers.setAffected(layers, layer);\r\n                    layer.color = Layers.getNextColor(layers);\r\n                    layer.displayed = true;\r\n                    dispatch({\r\n                        type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                        stage: stage,\r\n                        shape: layer\r\n                    });\r\n                }\r\n                dispatch({\r\n                    type: ActionTypes.ADD_NEW_LAYER,\r\n                    layer: layer\r\n                });\r\n\r\n                dispatch({\r\n                    type: ActionTypes.ASYNC_OPERATION_ENDED\r\n                });\r\n\r\n                resolve(true);\r\n            }\r\n        })(file, stage, layers, dispatch, files, resolve, reject);\r\n\r\n        reader.readAsText(file);\r\n    });\r\n\r\n\r\n    dispatch({\r\n        type: ActionTypes.ASYNC_OPERATION_STARTED\r\n    });\r\n\r\n    return promise\r\n};\r\n\r\nconst readAsImage = (reader, file, stage, layers, dispatch, files) => {\r\n    let promise = new Promise( (resolve, reject) => {\r\n        reader.addEventListener(\"load\", function () {\r\n            // let image = {};          // TODO: to be Flatten.Image\r\n            // image.uri = this.result;\r\n            // image.center = new Flatten.Point(0,0);\r\n            // image.width = 2*400000;    // 2 micron\r\n            // image.box = new Flatten.Box(\r\n            //     image.center.x - image.width/2,\r\n            //     image.center.y - image.width/2,\r\n            //     image.center.x + image.width/2,\r\n            //     image.center.y + image.width/2,\r\n            // );\r\n\r\n            let image = parseImage(file);\r\n            image.uri = this.result;\r\n\r\n            let model = new Model(image);\r\n\r\n            let layer = Layers.newLayer(stage, layers);\r\n            if (file.name !== \"\") {\r\n                layer.name = file.name;\r\n            }\r\n\r\n            layer.add(model);\r\n\r\n            // layersReducer.push(layer);\r\n\r\n            if (file === files[0]) {\r\n                Layers.setAffected(layers, layer);\r\n                layer.color = Layers.getNextColor(layers);\r\n                layer.displayed = true;\r\n                dispatch({\r\n                    type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                    stage: stage,\r\n                    shape: layer\r\n                });\r\n            }\r\n\r\n            dispatch({\r\n                type: ActionTypes.ADD_NEW_LAYER,\r\n                layer: layer\r\n            });\r\n\r\n            dispatch({\r\n                type: ActionTypes.ASYNC_OPERATION_ENDED\r\n            });\r\n\r\n            resolve(true);\r\n        }, false);\r\n\r\n        reader.readAsDataURL(file);\r\n    });\r\n\r\n    return promise;\r\n};\r\n\r\nconst readFile = (file, stage, layers, dispatch, files) => {\r\n    if (file.type !== \"\" &&\r\n        !(file.type.match('text.*') || file.type.match('application.*') ||\r\n            file.type.match('image.*')) ) return;   // validate type is text\r\n\r\n    let reader = new FileReader();\r\n\r\n    if (file.type.match('text.*') || file.type.match('application.*') || file.name.match('features*') || file.name.includes('.cdbg')) {\r\n        return readAsText(reader, file, stage, layers, dispatch, files);\r\n    }\r\n\r\n    else if (file.type.match('image.*')) {\r\n        return readAsImage(reader, file, stage, layers, dispatch, files);\r\n    }\r\n\r\n    return Promise.reject(\"not supported file\");\r\n};\r\n\r\nexport const readFiles = (files, stage, layers) => {\r\n    return (dispatch) => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n\r\n        // Load and parse files\r\n        // in MS Edge FilesList is not array. It is indexable but not iterable\r\n        // for (let i=0; i < action.files.length; i++) {\r\n        //     readFile(action.files[i], stage, layersReducer, dispatch, action.files);\r\n        // }\r\n        let promises = [];\r\n        for (let file of Array.from(files)) {\r\n            let promise = readFile(file, stage, layers, dispatch, files);\r\n            promises.push(promise);\r\n        }\r\n\r\n        return Promise.all(promises)\r\n            .then( (values) => {\r\n                dispatch(filesUploadCompleted(values));\r\n            })\r\n\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const filesUploadCompleted = (values) => {\r\n    return {\r\n        type: ActionTypes.FILES_UPLOAD_COMPLETED,\r\n        uploadedFiles: values\r\n    }\r\n};\r\n\r\nexport const initUploadState = () => {\r\n    return {\r\n        type: ActionTypes.INITIALIZE_UPLOAD_STATE\r\n    }\r\n};\r\n\r\nexport default readFiles;\r\n\r\n","import FontAwesome from \"react-fontawesome\";\r\nimport classes from \"./ButtonSeparator.module.css\";\r\n\r\nconst buttonSeparator = () => {\r\n    return (\r\n        <div className={classes.ButtonSeparator}>\r\n            <FontAwesome\r\n                name='ellipsis-v'\r\n                size='2x'\r\n                className={classes.IconSeparator}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default buttonSeparator;","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\nimport Button from '../../UI/Button/Button';\r\nimport Separator from '../../UI/ButtonSeparator/ButtonSeparator';\r\n\r\nimport classes from './ToolbarComponent.module.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport * as appActions from \"../../../store/actions/appActions\";\r\n\r\nconst ToolbarComponent = (props) => {\r\n        // openJobButtonClicked = () => this.refs.browseFiles.click();\r\n\r\n        return (\r\n            <div className={classes[\"App-toolbar\"]}>\r\n                    {/*<h4>Toolbar</h4>*/}\r\n                    <Button type=\"trigger\" title=\"Open files\" iconName='folder-open'\r\n                            onClick={() => props.appStateDispatch(appActions.toggleUploadPopup())}\r\n                    />\r\n\r\n                    {/*<input style={{fontSize: 16, marginTop: 5, marginBottom: 5, display: \"none\"}}*/}\r\n                    {/*type=\"file\" id=\"browseFiles\" ref=\"browseFiles\" name=\"files[]\" multiple*/}\r\n                    {/*onChange={this.props.onFileSelected}*/}\r\n                    {/*/>*/}\r\n\r\n                    <Separator/>\r\n\r\n                    <Button type=\"trigger\" title=\"Show/hide layersReducer\" iconName='layer-group'\r\n                            onClick={() => props.appStateDispatch(appActions.toggleLayersWidget())}\r\n                    />\r\n\r\n                    {/*<Button type=\"trigger\" title=\"Save document on cloud\" iconName='save'*/}\r\n                    {/*onClick={this.props.onSaveDocumentButtonClicked}*/}\r\n                    {/*/>*/}\r\n\r\n                    <Button type=\"trigger\" title=\"Sort layersReducer\" iconName='sort-alpha-down'\r\n                            onClick={props.onSortLayersButtonClicked}\r\n                    />\r\n\r\n                    <Button type=\"trigger\" title=\"Download layers\" iconName='file-download'\r\n                            onClick={() => props.appStateDispatch(appActions.toggleDownloadPopup())}\r\n                    />\r\n\r\n                    <Button type=\"trigger\" title=\"Delete all layers\" iconName='broom'\r\n                            onClick={props.onClearAllButtonClicked}\r\n                    />\r\n\r\n                    <Separator/>\r\n\r\n                    <Button type=\"trigger\" title=\"Zoom and pan to home view\" iconName='home'\r\n                            onClick={props.onHomeButtonPressed}\r\n                    />\r\n\r\n                    <Separator/>\r\n\r\n                    <Button type=\"mode\" title=\"Pan by drag\" iconName='arrows-alt'\r\n                            active={!props.measurePointsActive}\r\n                            onClick={() => props.appStateDispatch(appActions.togglePanByDrag())}\r\n                    />\r\n\r\n                    <Button type=\"mode\" title=\"Measure distance between points\" iconName='drafting-compass'\r\n                            active={props.measurePointsActive}\r\n                            onClick={() => props.appStateDispatch(appActions.toggleMeasureBetweenPoints())}\r\n                    />\r\n\r\n                    <Separator/>\r\n\r\n                    <Button type=\"trigger\" title=\"Measure distance between selected shapes\" iconName='ruler'\r\n                            onClick={props.onMeasureBetweenShapesButtonPressed}\r\n                    />\r\n\r\n                    <Button type=\"trigger\" title=\"Display solid or wire\" iconName='fill-drip'\r\n                            onClick={() => props.appStateDispatch(appActions.toggleWidthMode())}\r\n                    />\r\n\r\n                    <Button type=\"trigger\" title=\"Display vertices on/off\" iconName='draw-polygon'\r\n                            onClick={() => props.appStateDispatch(appActions.toggleDisplayVertices())}\r\n                    />\r\n\r\n                    <Button type=\"trigger\" title=\"Display labels on/off\" iconName='tag'\r\n                            onClick={() => props.appStateDispatch(appActions.toggleDisplayLabels())}\r\n                    />\r\n\r\n                    <Separator/>\r\n\r\n                    <button className={classes[\"App-toolbar-units\"]}\r\n                            onClick={props.onUnitClicked}\r\n                    >\r\n                            {props.units}\r\n                    </button>\r\n\r\n                    <Separator/>\r\n\r\n                    <Button type=\"trigger\" title=\"About\" iconName='info'\r\n                            onClick={() => props.appStateDispatch(appActions.toggleAboutPopup())}\r\n                    />\r\n\r\n                    <Separator/>\r\n\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ToolbarComponent;\r\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nimport classes from './AboutPopup.module.css';\r\nimport ModalPopup from \"../UI/ModalPopup/ModalPopup\";\r\n\r\nconst AboutPopup = (props) => {\r\n    return (\r\n        <ModalPopup\r\n            showPopup={props.showAboutPopup}\r\n            closePopup={props.toggleAboutPopup}\r\n            header=\"Info\"\r\n        >\r\n            <div className={classes.AboutPopup}>\r\n                <h2>{props.title} v{props.version}</h2>\r\n\r\n                <label>{`Build date: `}</label>\r\n                <span>02/10/2021</span>\r\n                <br/>\r\n\r\n                <label>{`Github depository: `}</label>\r\n                <a href=\"https://github.com/alexbol99/debug-viewer1\" >\r\n                    https://github.com/alexbol99/debug-viewer1\r\n                </a>\r\n                <br/>\r\n\r\n                <label>{`3d party graphics library: `}</label>\r\n                <a href=\"https://github.com/CreateJS/EaselJS/tree/2.0\" >\r\n                    https://github.com/CreateJS/EaselJS/tree/2.0\r\n                </a>\r\n                <br/>\r\n\r\n            </div>\r\n        </ModalPopup>\r\n\r\n    )\r\n};\r\n\r\nexport default AboutPopup;\r\n","import {Point, Segment, Arc, Circle, Box, Polygon} from \"@flatten-js/core\";\r\nimport {CW, ORIENTATION} from \"@flatten-js/core\";\r\n\r\nimport XMLWriter from \"xml-writer\";\r\n\r\nfunction pointToXMLString(xw, shape) {\r\n    xw.startElement('point');\r\n        xw.writeAttribute('x', shape.geom.x);\r\n        xw.writeAttribute('y', shape.geom.y);\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction segmentToXMLString(xw, shape) {\r\n    xw.startElement('segment');\r\n        xw.writeAttribute('xs', shape.geom.ps.x);\r\n        xw.writeAttribute('ys', shape.geom.ps.y);\r\n        xw.writeAttribute('xe', shape.geom.pe.x);\r\n        xw.writeAttribute('ye', shape.geom.pe.y);\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction arcToXMLString(xw, shape) {\r\n    xw.startElement('arc');\r\n        xw.writeAttribute('xs', Math.round(shape.geom.start.x));\r\n        xw.writeAttribute('ys', Math.round(shape.geom.start.y));\r\n        xw.writeAttribute('xe', Math.round(shape.geom.end.x));\r\n        xw.writeAttribute('ye', Math.round(shape.geom.end.y));\r\n        xw.writeAttribute('xc', shape.geom.center.x);\r\n        xw.writeAttribute('yc', shape.geom.center.y);\r\n        xw.writeAttribute('cw', shape.geom.counterClockwise === CW ? \"yes\" : \"no\");\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction circleToXMLString(xw, shape) {\r\n    xw.startElement('circle');\r\n        xw.writeAttribute('xc', shape.geom.center.x);\r\n        xw.writeAttribute('yc', shape.geom.center.y);\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction boxToXMLString(xw, shape) {\r\n\r\n}\r\n\r\nfunction polygonToXMlString(xw, polygon) {\r\n    xw.startElement('profile');\r\n\r\n    for (let face of polygon.faces) {\r\n        if (face.orientation() === ORIENTATION.CW) {\r\n            xw.startElement('island');\r\n        }\r\n        else {\r\n            xw.startElement('hole');\r\n        }\r\n\r\n        xw.writeAttribute('n_edges', `${face.size}`);\r\n\r\n        for (let edge of face) {\r\n            xw.startElement('edge');\r\n            let shape = edge.shape;\r\n            if (shape instanceof Segment) {\r\n                xw.writeAttribute('type', 'segment');\r\n                xw.writeAttribute('xs', shape.ps.x);\r\n                xw.writeAttribute('ys', shape.ps.y);\r\n                xw.writeAttribute('xe', shape.pe.x);\r\n                xw.writeAttribute('ye', shape.pe.y);\r\n            } else if (edge.shape instanceof Arc) {\r\n                xw.writeAttribute('type', 'curve');\r\n                xw.writeAttribute('xs', Math.round(shape.start.x));\r\n                xw.writeAttribute('ys', Math.round(shape.start.y));\r\n                xw.writeAttribute('xe', Math.round(shape.end.x));\r\n                xw.writeAttribute('ye', Math.round(shape.end.y));\r\n                xw.writeAttribute('xc', shape.center.x);\r\n                xw.writeAttribute('yc', shape.center.y);\r\n                xw.writeAttribute('cw', shape.counterClockwise === CW ? \"yes\" : \"no\");\r\n            } else {\r\n                xw.writeAttribute('type', 'unknown');\r\n            }\r\n            xw.endElement();\r\n        }\r\n\r\n        xw.endElement();  // island or hole\r\n    }\r\n\r\n    xw.endElement();     // profile\r\n}\r\n\r\nexport function createXMLString(shapes) {\r\n    let xw = new XMLWriter(true);\r\n    xw.startDocument('1.0', 'UTF-8');\r\n\r\n    xw.startElement('shapes');\r\n    xw.startElement('title').text('test polygon in xml format').endElement();\r\n\r\n    for (let shape of shapes) {\r\n        if (shape.geom instanceof Point) {\r\n            pointToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Segment) {\r\n            segmentToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Arc) {\r\n            arcToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Circle) {\r\n            circleToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Box) {\r\n            boxToXMLString(xw, shape)\r\n        }\r\n        else if (shape.geom instanceof Polygon) {\r\n            polygonToXMlString(xw, shape.geom);\r\n        }\r\n    }\r\n\r\n    xw.endDocument();\r\n    return xw.toString();\r\n}\r\n\r\n","import {Component} from 'react';\r\nimport ModalPopup from \"../UI/ModalPopup/ModalPopup\";\r\nimport {createXMLString} from \"../../dataParsers/createXML\";\r\n\r\nimport classes from \"./DownloadPopup.module.css\";\r\n\r\nclass DownloadPopup extends Component {\r\n    render() {\r\n        let downloadData = this.props.showPopup ?\r\n            this.props.layers.map( layer => {\r\n            return layer.displayed ? {\r\n                filename: `${layer.name}.xml`,\r\n                xmlString: createXMLString(layer.shapes)\r\n            } : null\r\n        }) : [];\r\n        return this.props.showPopup && this.props.layers.length > 0 ? (\r\n            <ModalPopup\r\n                showPopup={this.props.showPopup}\r\n                closePopup={this.props.closePopup}\r\n                header=\"Download files\"\r\n            >\r\n                <div className={classes.DownloadPopup}>\r\n                    <h5>Click on the following links to download</h5>\r\n                    <ul>\r\n\r\n                        {downloadData.map(data =>\r\n                            data === null ? null :\r\n                            <li key={data.filename}>\r\n                                <a href={'data:text/json;charset=utf-8,' + encodeURIComponent(data.xmlString)}\r\n                                   download={data.filename}>\r\n                                    {data.filename}\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n\r\n                    </ul>\r\n                </div>\r\n            </ModalPopup>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default DownloadPopup;\r\n","import classes from './Snackbar.module.css';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Snackbar = ({message, onAnimationEnd}) => {\r\n    return ReactDOM.createPortal(\r\n        // Any valid React child: JSX, strings, arrays, etc.\r\n        <div className={classes.Snackbar} onAnimationEnd={onAnimationEnd}>\r\n            <h3>{message}</h3>\r\n        </div>,\r\n        // A DOM element\r\n        document.getElementById('snackbar-root'),\r\n    );\r\n}\r\n\r\nexport default Snackbar;","import {useRef, useState} from 'react';\r\nimport ModalPopup from \"../UI/ModalPopup/ModalPopup\";\r\nimport Snackbar from \"../UI/Snackbar/Snackbar\";\r\n// import { connect } from 'react-redux';\r\nimport classes from \"./UploadPopup.module.css\";\r\n// import * as actions from '../../store/actions/upload';\r\n\r\nimport React from 'react';\r\n\r\nconst UploadPopup = (props) => {\r\n    const inputElementRef = useRef(null);\r\n    const [dragOver, setDragOver] = useState(false);\r\n\r\n    const openFilesButtonClicked = () => inputElementRef.current.click();\r\n\r\n    const dropHandler = (ev) => {\r\n        // Prevent default behavior (Prevent file from being opened)\r\n        ev.preventDefault();\r\n\r\n        let files = [];\r\n\r\n        if (ev.dataTransfer.items) {\r\n            // Use DataTransferItemList interface to access the file(s)\r\n            for (let i = 0; i < ev.dataTransfer.items.length; i++) {\r\n                // If dropped items aren't files, reject them\r\n                if (ev.dataTransfer.items[i].kind === 'file') {\r\n                    let file = ev.dataTransfer.items[i].getAsFile();\r\n                    files.push(file);\r\n                }\r\n            }\r\n        } else {\r\n            // Use DataTransfer interface to access the file(s)\r\n            files = ev.dataTransfer.files;\r\n        }\r\n\r\n        // TODO:\r\n        // this.props.readFiles(files, this.props.stage, this.props.layers);\r\n        props.onFilesSelected(files);\r\n\r\n        setDragOver(false);\r\n    };\r\n\r\n    const dragOverHandler = (ev) => {\r\n        // Prevent default behavior (Prevent file from being opened)\r\n        ev.preventDefault();\r\n        setDragOver(true);\r\n    };\r\n\r\n    const dragLeaveHandler = (ev) => {\r\n        ev.preventDefault();\r\n        setDragOver(false);\r\n    };\r\n\r\n    // const filesSelectedHandler = (event) => {\r\n    //     if (!(File && FileReader && FileList)) return;\r\n    //     let files = event.target.files; // FileList object\r\n    //     console.log(\"files selected!\");\r\n    //     // this.props.readFiles(files, this.props.stage, this.props.layers);    TODO\r\n    // };\r\n\r\n    const closePopup = () => {\r\n        props.initUploadState();\r\n        props.closePopup();\r\n    };\r\n\r\n    let snackbarMessage = \"\";\r\n\r\n    if (props.uploadCompleted && props.uploadedFiles.length > 0) {\r\n        let newFilesNum = props.uploadedFiles.length;\r\n        if (newFilesNum === 1) snackbarMessage = \"1 layer added\";\r\n        if (newFilesNum > 1) snackbarMessage = `${newFilesNum} layers added`;\r\n    }\r\n\r\n    return (\r\n        <ModalPopup\r\n            showPopup={props.showPopup}\r\n            closePopup={closePopup}\r\n            header=\"Open files\"\r\n        >\r\n            <div className={classes.UploadPopup}>\r\n                <div className={dragOver ?\r\n                    `${classes.UploadTarget} ${classes.UploadTargetDragOver}` :\r\n                    `${classes.UploadTarget} ${classes.UploadTargetDragLeave}`}\r\n                     onDrop={dropHandler}\r\n                     onDragOverCapture={dragOverHandler}\r\n                     onDragLeaveCapture={dragLeaveHandler}\r\n                >\r\n                    <span>Drop files here</span>\r\n\r\n                </div>\r\n\r\n                <h2>or</h2>\r\n\r\n                <button onClick={openFilesButtonClicked}>\r\n                    Use system Open Dialog\r\n                </button>\r\n\r\n                <input style={{display: \"none\"}}\r\n                       type=\"file\" ref={inputElementRef} name=\"files[]\" multiple\r\n                       onChange={(event) => props.onFilesSelected(event.target.files)}\r\n                />\r\n\r\n                { snackbarMessage !== \"\" ?\r\n                    <Snackbar\r\n                        onAnimationEnd = {props.initUploadState}\r\n                        message={snackbarMessage} /> : null\r\n                }\r\n\r\n            </div>\r\n        </ModalPopup>\r\n    );\r\n};\r\n\r\nexport default UploadPopup;\r\n\r\n// class UploadPopup extends Component {\r\n//     inputElement = createRef();\r\n//     clipboardWindowRef = createRef();\r\n//\r\n//     clipboardWindowWidth = 0;\r\n//     clipboardWindowHeight = 0;\r\n//\r\n//     state = {\r\n//         dragOver:false,\r\n//         clipboardData: \"\"\r\n//     };\r\n//\r\n//     openFilesButtonClicked = () => this.inputElement.current.click();\r\n//\r\n//     pasteHandler = (ev) => {\r\n//         ev.stopPropagation();\r\n//         this.props.onPaste(ev.clipboardData);\r\n//         let item = ev.clipboardData.items[0];\r\n//         item.getAsString( string =>\r\n//             this.setState({\r\n//                 clipboardData: string\r\n//             })\r\n//         );\r\n//     };\r\n//\r\n//     dropHandler = (ev) => {\r\n//         // Prevent default behavior (Prevent file from being opened)\r\n//         ev.preventDefault();\r\n//\r\n//         let files = [];\r\n//\r\n//         if (ev.dataTransfer.items) {\r\n//             // Use DataTransferItemList interface to access the file(s)\r\n//             for (let i = 0; i < ev.dataTransfer.items.length; i++) {\r\n//                 // If dropped items aren't files, reject them\r\n//                 if (ev.dataTransfer.items[i].kind === 'file') {\r\n//                     let file = ev.dataTransfer.items[i].getAsFile();\r\n//                     files.push(file);\r\n//                 }\r\n//             }\r\n//         } else {\r\n//             // Use DataTransfer interface to access the file(s)\r\n//             files = ev.dataTransfer.files;\r\n//         }\r\n//\r\n//         this.props.readFiles(files, this.props.stage, this.props.layers);\r\n//         // this.fileDropHandler(files);\r\n//         this.setState({dragOver:false});\r\n//     };\r\n//\r\n//     dragOverHandler = (ev) => {\r\n//         // Prevent default behavior (Prevent file from being opened)\r\n//         ev.preventDefault();\r\n//         this.setState({dragOver:true})\r\n//     };\r\n//\r\n//     dragLeaveHandler = (ev) => {\r\n//         ev.preventDefault();\r\n//         this.setState({dragOver:false})\r\n//     };\r\n//\r\n//     closePopup = () => {\r\n//         this.props.initUploadState();\r\n//         this.props.closePopup();\r\n//     };\r\n//\r\n//     componentDidUpdate() {\r\n//         if (this.props.uploadCompleted) {}\r\n//     }\r\n//\r\n//     componentDidMount() {\r\n//         this.clipboardWindowWidth = this.clipboardWindowRef.current.clientWidth;\r\n//         this.clipboardWindowHeight = this.clipboardWindowRef.current.clientHeight;\r\n//     }\r\n//\r\n//     render() {\r\n//         let pX = this.state.clipboardData === \"\" ? 30 : 0;\r\n//         let pY = this.state.clipboardData === \"\" ? 60 : 0;\r\n//         let snackbarMessage = \"\";\r\n//\r\n//         if (this.state.clipboardData !== \"\") snackbarMessage = \"Added 1 layer\";\r\n//\r\n//         if (this.props.uploadCompleted && this.props.uploadedFiles.length > 0) {\r\n//             let newFilesNum = this.props.uploadedFiles.length;\r\n//             if (newFilesNum === 1) snackbarMessage = \"1 layer added\";\r\n//             if (newFilesNum > 1) snackbarMessage = `${newFilesNum} layers added`;\r\n//         }\r\n//\r\n//         return this.props.showPopup ? (\r\n//             <ModalPopup\r\n//                 showPopup={this.props.showPopup}\r\n//                 closePopup={this.closePopup}\r\n//                 header=\"Open files\"\r\n//             >\r\n//                 <div className={classes.UploadPopup}>\r\n//                     <div className={this.state.dragOver ?\r\n//                         `${classes.UploadTarget} ${classes.UploadTargetDragOver}` :\r\n//                         `${classes.UploadTarget} ${classes.UploadTargetDragLeave}`}\r\n//                          style={{paddingLeft: pX, paddingRight: pX, paddingTop: pY, paddingBottom: pY}}\r\n//                          onPaste={this.pasteHandler}\r\n//                          onDrop={this.dropHandler}\r\n//                          onDragOverCapture={this.dragOverHandler}\r\n//                          onDragLeaveCapture={this.dragLeaveHandler}\r\n//                          ref={this.clipboardWindowRef}\r\n//                     >\r\n//                         {\r\n//                             this.state.clipboardData === \"\" ?\r\n//                                 <span>Drop files here</span> :\r\n//                                 <p style={{width:this.clipboardWindowWidth, height:this.clipboardWindowHeight}}>\r\n//                                     {this.state.clipboardData}\r\n//                                 </p>\r\n//                         }\r\n//\r\n//                     </div>\r\n//\r\n//                     <h2>or</h2>\r\n//\r\n//                     <button onClick={this.openFilesButtonClicked}>\r\n//                         Use system Open Dialog\r\n//                     </button>\r\n//\r\n//                     <input style={{display: \"none\"}}\r\n//                            type=\"file\" ref={this.inputElement} name=\"files[]\" multiple\r\n//                            onChange={this.filesSelectedHandler}\r\n//                     />\r\n//\r\n//                     { snackbarMessage !== \"\" ?\r\n//                         <Snackbar\r\n//                             onAnimationEnd = {this.props.initUploadState}\r\n//                             message={snackbarMessage} /> : null\r\n//                     }\r\n//\r\n//                 </div>\r\n//             </ModalPopup>\r\n//         ) : null;\r\n//     }\r\n// }\r\n//\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         layers: state.layers,\r\n//         stage: state.app.stage,\r\n//         uploadCompleted: state.upload.uploadCompleted,\r\n//         uploadedFiles: state.upload.uploadedFiles\r\n//     }\r\n// };\r\n//\r\n// const mapDispatchToProps = dispatch => {\r\n//     return {\r\n//         readFiles: (files, stage, layers) => dispatch(actions.readFiles(files, stage, layers)),\r\n//         initUploadState: () => dispatch(actions.initUploadState())\r\n//     }\r\n// };\r\n//\r\n// export default connect(mapStateToProps, mapDispatchToProps)(UploadPopup);\r\n","export const readFile = (file) => {\r\n    if (!(File && FileReader && FileList)) return;\r\n\r\n    const reader = new FileReader();\r\n    let string = \"\"\r\n    let promise = new Promise( (resolve, reject) => {\r\n        reader.onload = (event) => {\r\n            string = event.target.result;\r\n            if (string && string.length > 0) {\r\n                resolve(string);\r\n            }\r\n            else {\r\n                reject(`No data read from file ${file.name}`)\r\n            }\r\n        }\r\n        reader.readAsText(file);\r\n    });\r\n    return promise;\r\n};\r\n\r\n","import {parseXML} from \"./parserXML\";\r\nimport {parseCSV} from \"./parseCSV\";\r\nimport {parseTXT} from \"./parseTXT\";\r\nimport {parseJSON} from \"./parseJSON\";\r\nimport {parseFlighta} from \"./parseFlighta\";\r\nimport {parseODB} from \"./parserODB\";\r\n\r\nexport const parse = (filename, string) => {\r\n    // let namesplitted = filename.split('.');\r\n    let extension = filename.split('.').at(-1);   // caniuse instead of namesplitted[namesplitted.length-1]; ?\r\n    let job;\r\n    let shapes;\r\n    if (extension === 'xml') {\r\n        job = parseXML(filename, string);\r\n        if (job.profiles && job.profiles.length > 0) {\r\n            shapes = job.profiles;\r\n        }\r\n        else if (job.shapes && job.shapes.length > 0) {\r\n            shapes = job.shapes;\r\n        }\r\n    }\r\n    else if (extension === 'csv') {\r\n        job = parseCSV(filename, string);\r\n        shapes = job.shapes;\r\n    }\r\n    else if (extension === 'txt') {\r\n        job = parseTXT(filename, string);\r\n        shapes = job.shapes;\r\n    }\r\n    else if (extension === 'json') {\r\n        job = parseJSON(filename, string);\r\n        shapes = job.shapes;\r\n    }\r\n    else if (extension === 'cdbg') {\r\n        job = parseFlighta(filename, string);\r\n        shapes = job.shapes;\r\n    }\r\n    else {\r\n        let arrayOfLines = string.match(/[^\\r\\n]+/g);\r\n        if (arrayOfLines[0].length === 1 && arrayOfLines[0] === \"N\") {\r\n            job = parseFlighta(filename, string);\r\n            shapes = job.shapes;\r\n        }\r\n        else {\r\n            job = parseODB(filename, string);\r\n            shapes = job.shapes;\r\n        }\r\n    }\r\n\r\n    return shapes;\r\n}","import {Fragment, useReducer, useRef, useState} from 'react';\r\nimport styles from './HomeComponent.module.css';\r\nimport EditorComponent from \"../../components/EditorComponent/EditorComponent\";\r\nimport {parseJSON} from \"../../dataParsers/parseJSON\";\r\nimport {parseDebug} from \"../../dataParsers/parseDebug\";\r\nimport Layers from \"../../models/layers\";\r\n\r\nimport units, {initialUnitsState} from \"../../store/reducers/units\";\r\nimport app, {defaultAppState} from \"../../store/reducers/app\";\r\nimport upload, {defaultUploadState} from \"../../store/reducers/upload\";\r\n\r\nimport * as appActions from \"../../store/actions/appActions\";\r\nimport * as uploadActions from \"../../store/actions/upload\";\r\n\r\nimport * as actionTypes from \"../../store/actionTypes\";\r\nimport ToolbarComponent from \"../../components/EditorComponent/ToolbarComponent/ToolbarComponent\";\r\nimport AboutPopup from \"../../components/AboutPopup/AboutPopup\";\r\nimport DownloadPopup from \"../../components/DownloadPopup/DownloadPopup\";\r\nimport UploadPopup from \"../../components/UploadPopup/UploadPopup\";\r\nimport {readFile} from \"../../models/readFile\";\r\nimport {parse} from \"../../dataParsers/parseAll\";\r\n\r\nconst HomeComponent = () => {\r\n    const editorRef = useRef(null);\r\n    const [layers,setLayers] = useState([]);\r\n    const [unitsState, unitsDispatch] = useReducer(units, initialUnitsState);\r\n    const [appState, appStateDispatch] = useReducer(app, defaultAppState);\r\n    const [uploadState, uploadDispatch] = useReducer(upload, defaultUploadState);\r\n\r\n    const clearCurrentDocument = () => {\r\n        setLayers([])\r\n    }\r\n\r\n    const addShapesToNewLayer = (prevLayers, shapes) => {\r\n        const layer = Layers.newLayer(null, prevLayers);\r\n        layer.color = Layers.getNextColor(prevLayers);\r\n        layer.displayed = true;\r\n        layer.affected = true;\r\n        for (let shape of shapes) {\r\n            layer.add(shape);\r\n        }\r\n        return layer;\r\n    }\r\n\r\n    const pasteDataFromBuffer = (event) => {\r\n        for (let item of event.clipboardData.items) {\r\n            item.getAsString((string) => {\r\n                let shapesArray;\r\n                try {\r\n                    let job = parseJSON(\"\",string);\r\n                    shapesArray = job.shapes\r\n                } catch (e) {\r\n                    console.log(e.message)\r\n                    shapesArray = parseDebug(string);\r\n                }\r\n\r\n                if (shapesArray.length > 0) {\r\n                    setLayers(prevLayers => {\r\n                        const layer = addShapesToNewLayer(prevLayers, shapesArray);\r\n                        const newLayers = [...prevLayers, layer];\r\n                        Layers.setAffected(newLayers, layer);\r\n                        return newLayers;\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const filesSelectedHandler = async (files) => {\r\n        if (!(File && FileReader && FileList)) return;\r\n        let promises = Array.from(files).map(file => readFile(file));\r\n        let res = await Promise.allSettled(promises);\r\n        let textArray = res.filter(p => p.status === \"fulfilled\").map(p => p.value);\r\n        textArray.forEach( (text, index) => {\r\n            let shapesArray = parse(files[index].name, text)\r\n            if (shapesArray.length > 0) {\r\n                setLayers(prevLayers => {\r\n                    const layer = addShapesToNewLayer(prevLayers, shapesArray);\r\n                    const newLayers = [...prevLayers, layer];\r\n                    Layers.setAffected(newLayers, layer);\r\n                    return newLayers;\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const setHomeView = () => {\r\n        editorRef.current.zoomHome();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToolbarComponent\r\n                measurePointsActive={appState.measurePointsActive}\r\n                units={unitsState.name}\r\n                appStateDispatch={appStateDispatch}\r\n                onHomeButtonPressed={setHomeView}\r\n                onUnitClicked={() => unitsDispatch({type: actionTypes.TOGGLE_UNITS_CLICKED})}\r\n\r\n                // onSortLayersButtonClicked = {() => layersDispatch(layerActions.sortLayers())}\r\n\r\n                onClearAllButtonClicked={clearCurrentDocument}\r\n\r\n                // onMeasureBetweenShapesButtonPressed={() =>\r\n                //     measureShapesDispatch(measureShapesActions.toggleMeasureBetweenShapes())}\r\n            />\r\n\r\n            <EditorComponent\r\n                ref={editorRef}\r\n                className={styles.HomeComponent}\r\n                data={layers}\r\n                showLayersWidget={appState.showLayersWidget}\r\n                widthOn={appState.widthOn}\r\n                displayVertices={appState.displayVertices}\r\n                displayLabels={appState.displayLabels}\r\n                measurePointsActive={appState.measurePointsActive}\r\n                unitsName={unitsState.name}\r\n                divisor={unitsState.divisor}\r\n                decimals={unitsState.decimals}\r\n                controls={appState}\r\n                onPasteDataFromBuffer={pasteDataFromBuffer}\r\n            />\r\n\r\n            {appState.showAboutPopup && <AboutPopup\r\n                showAboutPopup={appState.showAboutPopup}\r\n                toggleAboutPopup={() => appStateDispatch(appActions.toggleAboutPopup())}\r\n                title={appState.title}\r\n                version={appState.version}\r\n                build={appState.build}\r\n            />}\r\n\r\n            {appState.showDownloadPopup && <DownloadPopup\r\n                showPopup={appState.showDownloadPopup}\r\n                closePopup={() => appStateDispatch(appActions.toggleDownloadPopup())}\r\n                title=\"Download document\"\r\n                layers={layers}\r\n            />}\r\n\r\n            {appState.showUploadPopup &&\r\n                <UploadPopup\r\n                    showPopup={appState.showUploadPopup}\r\n                    closePopup={() => appStateDispatch(appActions.toggleUploadPopup())}\r\n                    title=\"Upload files\"\r\n                    initUploadState={() => uploadDispatch(uploadActions.initUploadState())}\r\n                    onFilesSelected={filesSelectedHandler}\r\n                />}\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default HomeComponent;","import React, {useEffect} from 'react';\r\nimport {Switch, Route, withRouter} from 'react-router-dom';\r\n\r\nimport HeaderComponent from './components/Layout/HeaderComponent/HeaderComponent';\r\n// import MainComponent from \"./containers/MainComponent/MainComponent\";\r\n// import LayersWidget from \"./containers/LayersWidget/LayersWidget\";\r\n// import AsideComponent from \"./components/Layout/AsideComponent/AsideComponent\";\r\n\r\nimport Spinner from \"./components/UI/Spinner/Spinner\";\r\n// import * as ActionTypes from \"./store/actionTypes\";\r\n// import {connect} from 'react-redux';\r\n\r\nimport './App.css';\r\n// import EditorComponent from \"./components/EditorComponent/EditorComponent\";\r\nimport DemoComponent from \"./containers/DemoComponent/DemoComponent\";\r\nimport HomeComponent from \"./containers/HomeComponent/HomeComponent\";\r\n// import AsideComponent from \"./components/Layout/AsideComponent/AsideComponent\";\r\n\r\nconst title = \"Debug Viewer\";\r\nconst version = process.env.REACT_APP_VERSION;\r\n\r\nconst App = (props) => {\r\n    useEffect( () => {\r\n        window.addEventListener('beforeunload', function (e) {\r\n            e.preventDefault();\r\n            e.returnValue = '';\r\n        });\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <HeaderComponent\r\n                title={title}\r\n                version={version}\r\n            />\r\n\r\n            {/*<DocumentName name={props.document.name}*/}\r\n            {/*username={props.username}*/}\r\n            {/*updateDocumentName={props.updateDocumentName} />*/}\r\n\r\n            {/*<div className=\"App-body\" onPaste={props.pasteDataFromBuffer}>*/}\r\n            {/*    <MainComponent />*/}\r\n            {/*    <LayersList />*/}\r\n            {/*    <AsideComponent/>*/}\r\n            {/*</div>*/}\r\n\r\n\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <HomeComponent />\r\n                    {/*<EditorComponent />*/}\r\n                </Route>\r\n                <Route exact path=\"/demo\" >\r\n                    <DemoComponent />\r\n                </Route>\r\n            </Switch>\r\n\r\n            {props.app?.showSpinner ? <Spinner/> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//     return {\r\n//         pasteDataFromBuffer: (event) => dispatch({\r\n//             type: ActionTypes.DATA_FROM_BUFFER_PASTED,\r\n//             data: event.clipboardData\r\n//         })\r\n//     }\r\n// };\r\n\r\nexport default withRouter(App);\r\n","import ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from \"./App\";\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <App/>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}