{"version":3,"sources":["serviceWorker.js","store/reducers/auth.js","store/actionTypes.js","models/createArcs.js","models/polygonOffset.js","dataParsers/parser.js","store/reducers/app.js","models/model.js","models/layer.js","models/layers.js","store/reducers/layers.js","store/reducers/mouse.js","store/reducers/measureShapesTool.js","store/reducers/cloudStorage.js","store/reducer.js","middleware/log.js","models/job.js","dataParsers/parserXML.js","dataParsers/parserODB.js","dataParsers/parsePGM.js","dataParsers/parseCSV.js","dataParsers/parseJSON.js","middleware/readFiles.js","dataParsers/parseTXT.js","middleware/pasteData.js","middleware/stageController.js","middleware/skeleton_recognition.js","axios-database.js","store/actions/appActions.js","store/actions/layersActions.js","store/actions/cloudStorageActions.js","components/UI/Button/Button.js","components/UI/ButtonSeparator/ButtonSeparator.js","components/MainComponent/ToolbarComponent/ToolbarComponent.js","models/stage.js","store/actions/stageActions.js","components/MainComponent/CanvasComponent/CanvasComponent.js","components/Layout/StatusComponent/StatusComponent.js","components/MainComponent/GraphicsComponent/stageComponent.js","models/graphics.js","models/utils.js","components/MainComponent/GraphicsComponent/graphics/shapeComponent.js","components/MainComponent/GraphicsComponent/graphics/imageComponent.js","components/MainComponent/GraphicsComponent/layerComponent.js","components/MainComponent/GraphicsComponent/domelements/labelComponent.js","components/MainComponent/GraphicsComponent/LabelsLayerComponent/labelsLayerComponent.js","components/MainComponent/GraphicsComponent/layersComponent.js","tools/measurePointsTool.js","tools/measureShapesTool.js","tools/displayCoordsTool.js","components/UI/Modal.js","components/UI/ModalPopup/ModalPopup.js","components/AboutPopup/AboutPopup.js","dataParsers/createXML.js","components/DownloadPopup/DownloadPopup.js","components/Constructions/CloudDocument.js","containers/MainComponent/MainComponent.js","components/LayersList/LayerListToolbar/LayerListToolbar.js","components/LayersList/LayerEditForm/LayerEditForm.js","components/LayersList/LayerListElement/LayerListElement.js","containers/LayerList/LayersList.js","components/Layout/AsideComponent/AsideComponent.js","AppBody.js","components/Layout/HeaderComponent/HeaderComponent.js","components/Constructions/Demo.js","components/Constructions/SkeletonRecognition.js","models/collisionDistance.js","components/Constructions/CollisionDemo.js","components/UI/Spinner/Spinner.js","store/actions/auth.js","App.js","index.js","components/UI/Button/Button.module.css","components/LayersList/LayerListElement/LayerListElement.module.css","components/UI/ButtonSeparator/ButtonSeparator.module.css","components/MainComponent/ToolbarComponent/ToolbarComponent.module.css","components/UI/ModalPopup/ModalPopup.module.css","containers/LayerList/LayersList.module.css","components/Layout/HeaderComponent/HeaderComponent.module.css","components/UI/Spinner/Spinner.module.css","components/MainComponent/CanvasComponent/CanvasComponent.module.css","components/Layout/StatusComponent/StatusComponent.module.css","components/MainComponent/GraphicsComponent/LabelsLayerComponent/labelsLayer.module.css","components/AboutPopup/AboutPopup.module.css","components/DownloadPopup/DownloadPopup.module.css","containers/MainComponent/MainComponent.module.css","components/LayersList/LayerListToolbar/LayerListToolbar.module.css","components/LayersList/LayerEditForm/LayerEditForm.module.css","components/Layout/AsideComponent/AsideComponent.module.css"],"names":["Boolean","window","location","hostname","match","initialState","token","userId","username","error","loading","auth","state","arguments","length","undefined","action","type","Object","objectSpread","arcSE","center","start","end","counterClockwise","startAngle","vector","slope","endAngle","Utils","EQ","Math","PI","r","Arc","offsetArc","arc","value","arc_cap1","arc_cap2","w","abs","polygon","Polygon","arc_outer","clone","sweep","arcStartSweep","arcEndSweep","arc_inner","pc","CW","CCW","Segment","addFace","toConsumableArray","faces","setArcLength","ips","Face","getSelfIntersections","edges","slice","edge_cap1","edge_cap2","int_points","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","next","done","pt","addToIntPoints","err","return","int_points_sorted","getSortedArray","splitByIntersections","bv","OUTSIDE","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","int_point","edge_before","edge_after","INSIDE","op","BOOLEAN_UNION","removeNotRelevantChains","num","prev","removeOldFaces","restoreFaces","orientation","ORIENTATION","reverse","offsetSegment","seg","v_seg_unit","x","y","normalize","v_left","rotate90CCW","multiply","v_right","rotate90CW","seg_left","translate","seg_right","cap1","cap2","Parser","classCallCheck","this","createClass","key","str","arrayOfLines","watchArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","line","push","substring","indexOf","pointArr","split","point","Point","parseInt","label","termArr","psArr","ps","peArr","pe","pcArr","Flatten","Circle","pllArr","xmin","ymin","width","height","box","Box","segment","i","search","nedgesStr","nedges","j","parseToSegment","parseToArc","points","shape","shapes","parseToPoint","parseToCircle","parseToRectangle","parseToODBLine","parseToODBArc","parseToPolygon","size","parseToShapes","parseToPoints","unitsList","name","decimals","divisor","defaultAppState","title","version","process","build","units","parser","widthOn","displayVertices","displayLabels","measurePointsActive","zoomFactor","originX","originY","showAboutPopup","importDataToNewLayer","showSkeletonRecognitionButton","applySkeletonRecognition","stage","showSpinner","showLayerList","showDownloadPopup","app","assign","resolution","origin","curUnitsId","findIndex","newUnits","defaultStyle","strokeStyle","stroke","fill","alpha","Model","geom","style","model","Layer","color","displayed","edited","affected","layer","newShape","add","JSON","stringify","merge","xmax","ymax","colors","Layers","layers","getNewName","defaultName","inc","comparator","find","lay","currentAffectedLayer","getAffected","_loop","col","_colors","_i","index","l","newLayers","filter","getNextColor","sort","l1","l2","name1","toUpperCase","name2","map","toJSON","newLayer","affectedLayer","affectedLayerId","concat","delete","setAffected","toggleDisplayed","setEdited","setNameAndTitle","nextLayer","newCurLayer","newNextLayer","defaultMouseState","startX","startY","touchPoints","mouse","x1","y1","x2","y2","defaultMeasureShapesTool","measureShapesActive","measureShapesFirstClick","hoveredShape","firstMeasuredShape","secondMeasuredShape","firstMeasuredLayer","secondMeasuredLayer","distance","shortestSegment","is_mobile","mobilecheck","measureShapesTool","shape1","shape2","_Flatten$Distance$dis","Distance","_Flatten$Distance$dis2","slicedToArray","documentDefaultState","id","owner","lastUpdated","cloudStorageDefaultState","document","documentsList","cloudStorage","_state$documentsList","_action$id","newList","objectWithoutProperties","_toPropertyKey","stateDocumentsList","actionDocumentsList","keys","hasOwnProperty","isUpToDate","reducer","combineReducers","log","_ref","getState","dispatch","console","Job","filename","profiles","materials","get","b","parseEdges","edgesXML","_Array$from","Array","from","edge","getAttribute","parsePolygon","polygonsXML","islands","getElementsByTagName","_i2","_Array$from2","holes","_i3","_Array$from3","parseSegment","segmentXML","parseCurve","curveXML","parsePoint","pointXML","parseImage","imageXML","img","Image","uri","inch2pixels","mils2pixels","InchToPixels","round","Number","MilsToPixels","lines","terms","end_of_face","parseLine","apertures","ap_value","aperture","parseArc","parseODB","job","substr","polarity","odbLine","odbArc","ap_key","pgmResolution","microns2pixels","sizeX","toPixels","micron2pixels","micronToPixels","parseJSON","jsonArray","parse","faceArray","readAsText","reader","file","files","onload","theFile","event","string","target","result","namesplitted","extension","xmlDoc","DOMParser","parseFromString","titles","firstChild","nodeValue","profilesXML","_i4","_Array$from4","materialXML","_i5","_Array$from5","segmentsXML","_i6","_Array$from6","curvesXML","_i7","_Array$from7","curve","pointsXML","_i8","_Array$from8","imagesXML","_i9","_Array$from9","image","parseXML","px","py","nx","ny","parseCSV","shapesArray","parseTXT","readAsImage","addEventListener","yStr","xStr","isNaN","readAsDataURL","readFile","FileReader","readFiles","pasteData","data","items","getAsString","stageController","resize","panByMouseStart","dx","dy","panByMouseMove","panByMouseStop","panToCoordinate","zoomToLimits","bIn","delta","zoomByMouse","removeAllChildren","removeAllListeners","zoomByPinchStart","distStart","sqrt","ratio","zoomByPinchMove","zoomByPinchStop","Algorithmia","skeleton_recognition","currentLayer","input","client","algo","pipe","then","output","row","instance","axios","create","baseURL","setHomeView","addNewLayer","toggleDisplayLayer","documents","values","button","props","iconStyle","classes","IconTrigger","active","IconModeActive","IconModeNotActive","buttonStyle","mobileOnly","react_default","a","createElement","onClick","className","lib_default","iconName","buttonSeparator","ButtonSeparator","IconSeparator","ToolbarComponent","openJobButtonClicked","_this","refs","browseFiles","click","Button","fontSize","marginTop","marginBottom","display","ref","multiple","onChange","onFileSelected","onLayerListButtonClicked","onClearAllButtonClicked","onShowDownloadPopupPressed","onHomeButtonPressed","onPanByDragPressed","onMeasurePointsButtonPressed","onMeasureBetweenShapesButtonPressed","onToggleWidthModePressed","onToggleVerticesPressed","onToggleLabelsPressed","onSkeletonRecognitionButtonPressed","onUnitClicked","onShowAboutPopupPressed","Component","Stage","canvas","possibleConstructorReturn","getPrototypeOf","call","Touch","enable","assertThisInitialized","mouseMoveOutside","enableMouseOver","clientWidth","clientHeight","oldOrigin","oldZoomFactor","pinchAnchorX","pinchAnchorY","pinchStarted","addChild","scalar","scalingFactor","canvasX","canvasY","worldX","worldY","W2C_X","W2C_Y","newOrigin","deltaX","deltaY","curRatio","min","max","focusX","focusY","C2W_X","C2W_Y","zoomIn","zoomOut","newFocusX","newFocusY","panBy","zoom","getContext","clearRect","minX","minY","maxX","maxY","CreatejsStage","handleMouseWheelMove","CanvasComponent","canvasElement","React","createRef","handleMouseMove","focus","nativeEvent","touches","clientX","offsetLeft","clientY","offsetTop","handlePinchMove","stageX","stageY","handleMouseDown","handlePinchDown","handleMouseUp","stopPropagation","preventDefault","handlePinchUp","handleMouseLeave","blur","body","handleMouseWheel","detail","wheelDelta","offsetX","offsetY","handleMouseWheelFox","layerX","layerY","current","on","passive","registerStage","tabIndex","styles","connect","actions","StatusComponent","StageComponent","setTransform","update","onStageUnmounted","Fragment","children","graphics","radius","Graphics","beginFill","command","circle","drawCircle","graphics_point","ignoreScale","setStrokeStyle","beginStroke","moveTo","lineTo","endStroke","graphics_segment","graphics_arc","graphics_circle","drawRect","graphics_box","face","setGraphicsFace","graphics_polygon","setGraphicsEdge","setGraphicsEdgeSegment","setGraphicsEdgeArc","first","is_equal","obj1","obj2","equal","_Object$keys","ShapeComponent","_Component","params","handleMouseOver","onMouseOver","handleMouseOut","onMouseOut","handleClick","Shape","vertexShapes","vertices","vertex","vertexShape","mouseEnabled","inherits","isEmpty","hovered","selected","redrawVertices","redraw","nextProps","nextState","off","removeChild","clear","ImageComponent","_getPrototypeOf2","_len","args","_key","apply","bitmap","naturalWidth","naturalHeight","scaleX","scaleY","tx","ty","regX","regY","_this2","Bitmap","onImageLoaded","setAttribute","src","loadImage","LayerComponent","imageComponent_ImageComponent","shapeComponent_ShapeComponent","labelComponent","left","top","position","LabelComponent","labelsLayerComponent","trim","domelements_labelComponent","LayersComponent","layerComponent_LayerComponent","LabelsLayerComponent_labelsLayerComponent","MeasurePointsTool","measureCanvas","measureStage","endX","endY","measureStarted","setState","cursor","draw","context","textX","textY","textWidth","backX","backY","pllX","pllY","W2C_Scalar","beginPath","rect","lineWidth","text","measurement","font","measureText","textAlign","fillStyle","globalAlpha","fillRect","textHeight","fillText","dist","format","toFixed","removeAllEventListeners","mainCanvas","MeasureShapesTool","labelShape","Text","unscale","redrawLabel","DisplayCoordsTool","coordX","coordY","margin","padding","modalRoot","getElementById","Modal","el","appendChild","ReactDOM","createPortal","ModalPopup","onBackDropClicked","ev","closePopup","handleKeyDown","code","elementDrag","dragX","dragY","element","closeDragElement","onmouseup","onmousemove","dragMouseDown","removeEventListener","showPopup","UI_Modal","BackDrop","onMouseDown","header","AboutPopup","UI_ModalPopup_ModalPopup","toggleAboutPopup","href","pointToXMLString","xw","startElement","writeAttribute","endElement","segmentToXMLString","arcToXMLString","circleToXMLString","polygonToXMlString","createXMLString","XMLWriter","startDocument","endDocument","toString","DownloadPopup","downloadData","xmlString","encodeURIComponent","download","CloudDocument","fetchDocumentFromDatabase","firstLayer","docUrl","geomUrl","Promise","all","responses","layerData","layerActions","requestFetchDocumentFromDatabaseSucceed","appActions","catch","alert","message","cloudActions","MainComponent","handleFileSelect","File","FileList","forceUpdate","onSaveDocumentButtonClicked","dataURL","toDataURL","e","payload","Date","toLocaleDateString","toLocaleTimeString","updateDocumentInDatabase","addDocumentToDatabase","history","clearCurrentDocument","clearAllLayers","toggleWidthMode","toggleDisplayVertices","onresize","resizeStage","handleKeyUp","displayCoordsTool","tools_displayCoordsTool","measurePointsTool","tools_measurePointsTool","measuredLayersDisplayed","tools_measureShapesTool","MainComponent_ToolbarComponent_ToolbarComponent","togglePanByDrag","toggleMeasureBetweenPoints","toggleMeasureBetweenShapes","toggleDisplayLabels","toggleUnits","toggleLayerList","toggleDownloadPopup","MainComponent_CanvasComponent_CanvasComponent","stageComponent","destroyStage","layersComponent","handleMouseRollOverShape","handleMouseRollOutShape","handleClickOnShape","Layout_StatusComponent_StatusComponent","components_AboutPopup_AboutPopup","components_DownloadPopup_DownloadPopup","react_router","path","component","ownProps","post","response","layersJSON","geomPayload","registerDocumentAddedToDatabase","now","put","url","geomId","reponse","LayerListToolbar","onAddLayerButtonClicked","onEditLayerButtonClicked","onDeleteLayerButtonClicked","onSortLayersButtonClicked","LayerEditForm","onSubmitLayerEditForm","currentTarget","setFocus","onSubmit","onMouseMove","defaultValue","cols","rows","onEscapeLayerEditForm","parent","LayerListElement","activeElement","nodeName","elem","layerName","hex","opacity","g","percent","replace","rgba","bgcolor","layerNameOpacity","onLayerClicked","onDoubleClick","onLayerDoubleClicked","LayerSelectionBox","onAffectedBoxClicked","LayerSelectionMark","LayerNameBox","backgroundColor","LayersList_LayerEditForm_LayerEditForm","LayersList","parentElement","setAffectedNextLayer","setAffectedPrevLayer","onLayerListClicked","LayersList_LayerListToolbar_LayerListToolbar","maxHeight","LayersList_LayerListElement_LayerListElement","AsideComponent","pasteDataFromBuffer","clipboardData","updateDocumentName","onPaste","containers_MainComponent_MainComponent","onManageCloudStorageButtonClicked","LayerList_LayersList","Layout_AsideComponent_AsideComponent","withRouter","pathname","Demo","resp","panAndZoomToShape","asyncOperationEnded","asyncOperationStarted","SkeletonRecognition","CollisionDistance","polygon1","polygon2","collision_distance","POSITIVE_INFINITY","_arr","edge2polygon","edge2","shapeBox","NEGATIVE_INFINITY","resp_edges","edge1","segment2segment","segment2arc","arc2arc","intersections","Line","Vector","intersect","ip","_point$distanceTo","distanceTo","_point$distanceTo2","segment1","segment2","point2shape","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","v_s","_v_n","v","tangent_point","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","arc1","arc2","arc_enlarged","_arc1$distanceTo","translateArc","_arc1$distanceTo2","dist_tmp","EQ_0","GE","arc_reduced","_arc1$distanceTo3","_arc1$distanceTo4","LT","_arc1$distanceTo5","_arc1$distanceTo6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","vec","arc_tmp","newPolygon","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","arc_trans","CollisionDemo","collision","polygon3","applyCollisionDemo","spinner","Loader","authSucceed","authFailed","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","email","getItem","password","logIn","authData","returnSecureToken","setItem","expirationDate","getTime","expiresIn","idToken","localId","queryParams","authSetUsername","App","authCheckState","Layout_HeaderComponent_HeaderComponent","isAuthenticated","AppBody","Spinner","timeLeft","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","render","es","react_router_dom","basename","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","DrawerButton","Layer-displayed","Layer-undisplayed","App-toolbar","App-toolbar-units","fadeIn","App-layers","App-layers-displayed","Open","Close","App-header","App-header-documents-page","load2","App-canvas","App-status-bar","LabelsLayer","Main-content","Layer-list-toolbar","Layer-edit-form","App-aside"],"mappings":"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","file":"static/js/main.a4954bda.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    username: null,\r\n    error: null,\r\n    loading: false\r\n};\r\n\r\nconst auth = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTHENTICATION_STARTED:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                loading: true\r\n            };\r\n        case actionTypes.AUTHENTICATION_SUCCEED:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                token: action.token,\r\n                userId: action.userId,\r\n                username: action.username,\r\n                loading: false\r\n            };\r\n        case actionTypes.AUTHENTICATION_FAILED:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                token: null,\r\n                userId: null,\r\n                username: null,\r\n                loading: false\r\n            };\r\n        case actionTypes.AUTHENTICATION_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userId: null,\r\n                username: null\r\n            };\r\n        case actionTypes.AUTHENTICATION_SET_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.username\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default auth;","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nexport const NEW_STAGE_CREATED = \"NEW_STAGE_CREATED\";\r\nexport const STAGE_RESIZED = \"STAGE_RESIZED\";\r\nexport const NEW_SHAPE_PASTED = \"NEW_SHAPE_PASTED\";\r\nexport const CLEAR_ALL = \"CLEAR_ALL\";\r\nexport const STAGE_UNMOUNTED = \"STAGE_UNMOUNTED\";\r\n\r\n/** Toolbar buttons **/\r\nexport const PAN_BY_DRAG_BUTTON_CLICKED = \"PAN_BY_DRAG_BUTTON_CLICKED\";\r\n// export const SAVE_DOCUMENT_BUTTON_CLICKED = \"SAVE_DOCUMENT_BUTTON_CLICKED\";\r\nexport const MANAGE_CLOUD_STORAGE_BUTTON_CLICKED = \"MANAGE_CLOUD_STORAGE_BUTTON_CLICKED\";\r\n\r\nexport const MEASURE_POINTS_BUTTON_PRESSED = \"MEASURE_POINTS_BUTTON_PRESSED\";\r\nexport const MEASURE_SHAPES_BUTTON_PRESSED = \"MEASURE_SHAPES_BUTTON_PRESSED\";\r\nexport const TOGGLE_ABOUT_POPUP_CLICKED = \"TOGGLE_ABOUT_POPUP_CLICKED\";\r\n// export const CLOSE_ABOUT_POPUP_BUTTON_PRESSED = \"CLOSE_ABOUT_POPUP_BUTTON_PRESSED\";\r\nexport const TOGGLE_UNITS_CLICKED = \"TOGGLE_UNITS_CLICKED\";\r\nexport const TOGGLE_WIDTH_MODE_CLICKED = \"TOGGLE_WIDTH_MODE_CLICKED\";\r\nexport const TOGGLE_DISPLAY_VERTICES_CLICKED = \"TOGGLE_DISPLAY_VERTICES_CLICKED\";\r\nexport const TOGGLE_DISPLAY_LABELS_CLICKED = \"TOGGLE_DISPLAY_LABELS_CLICKED\";\r\nexport const TOGGLE_SHOW_LAYER_LIST_CLICKED = \"TOGGLE_SHOW_LAYER_LIST_CLICKED\";\r\nexport const TOGGLE_DOWNLOAD_POPUP_CLICKED = \"TOGGLE_DOWNLOAD_POPUP_CLICKED\";\r\n\r\nexport const MOUSE_MOVED_ON_STAGE = \"MOUSE_MOVED_ON_STAGE\";\r\nexport const MOUSE_DOWN_ON_STAGE = \"MOUSE_DOWN_ON_STAGE\";\r\nexport const MOUSE_UP_ON_STAGE = \"MOUSE_UP_ON_STAGE\";\r\nexport const MOUSE_WHEEL_MOVE_ON_STAGE = \"MOUSE_WHEEL_MOVE_ON_STAGE\";\r\n\r\nexport const MOUSE_ROLL_OVER_SHAPE = \"MOUSE_ROLL_OVER_SHAPE\";\r\nexport const MOUSE_ROLL_OUT_SHAPE = \"MOUSE_ROLL_OUT_SHAPE\";\r\nexport const MOUSE_CLICKED_ON_SHAPE = \"MOUSE_CLICKED_ON_SHAPE\";\r\n\r\nexport const PINCH_DOWN_ON_STAGE = \"PINCH_DOWN_ON_STAGE\";\r\nexport const PINCH_MOVED_ON_STAGE = \"PINCH_MOVED_ON_STAGE\";\r\nexport const PINCH_UP_ON_STAGE = \"PINCH_UP_ON_STAGE\";\r\n\r\n// export const HOME_BUTTON_CLICKED = \"HOME_BUTTON_CLICKED\";\r\nexport const PAN_TO_COORDINATE = \"PAN_TO_COORDINATE\";\r\nexport const PAN_AND_ZOOM_TO_SHAPE = \"PAN_AND_ZOOM_TO_SHAPE\";\r\n\r\nexport const LAYER_LIST_PANEL_PRESSED = \"LAYER_LIST_PANEL_PRESSED\";\r\nexport const ADD_LAYER_BUTTON_PRESSED = \"ADD_LAYER_BUTTON_PRESSED\";\r\nexport const ADD_NEW_LAYER = \"ADD_NEW_LAYER\";\r\nexport const DELETE_LAYER_BUTTON_PRESSED = \"DELETE_LAYER_BUTTON_PRESSED\";\r\nexport const SORT_LAYERS_BUTTON_PRESSED = \"SORT_LAYERS_BUTTON_PRESSED\";\r\nexport const CLEAN_AND_UPDATE_LAYERS = \"CLEAN_AND_UPDATE_LAYERS\";\r\n\r\nexport const TOGGLE_DISPLAY_LAYER_PRESSED = \"TOGGLE_DISPLAY_LAYER_PRESSED\";\r\nexport const TOGGLE_AFFECTED_LAYER_PRESSED=\"TOGGLE_AFFECTED_LAYER_PRESSED\";\r\nexport const OPEN_LAYER_EDIT_FORM_PRESSED = \"OPEN_LAYER_EDIT_FORM_PRESSED\";\r\nexport const SUBMIT_LAYER_EDIT_FORM_PRESSED = \"SUBMIT_LAYER_EDIT_FORM_PRESSED\";\r\nexport const ESCAPE_LAYER_EDIT_FORM_PRESSED = \"ESCAPE_LAYER_EDIT_FORM_PRESSED\";\r\n\r\nexport const LAYERS_LIST_ARROW_DOWN_PRESSED = \"LAYERS_LIST_ARROW_DOWN_PRESSED\";\r\nexport const LAYERS_LIST_ARROW_UP_PRESSED = \"LAYERS_LIST_ARROW_UP_PRESSED\";\r\n\r\n// export const TOGGLE_WATCH_EXPAND_CLICKED = \"TOGGLE_WATCH_EXPAND_CLICKED\";\r\n\r\nexport const FILENAME_LIST_SELECTED = \"FILENAME_LIST_SELECTED\";\r\nexport const INPUT_FILE_LOADED = \"INPUT_FILE_LOADED\";\r\nexport const DATA_FROM_BUFFER_PASTED = \"DATA_FROM_BUFFER_PASTED\";\r\n\r\n/** AABB Distance Measurement Demo **/\r\nexport const AABB_DEMO_URI = \"AABB_DEMO_URI\";\r\nexport const AABB_DEMO_NEXT_DIST_STEP = \"AABB_DEMO_NEXT_DIST_STEP\";\r\nexport const AABB_TREE_NEXT_LEVEL = \"AABB_TREE_NEXT_LEVEL\";\r\n\r\n/** Collision demo **/\r\nexport const COLLISION_DEMO_URI = \"COLLISION_DEMO_URI\";\r\nexport const COLLISION_DEMO_BUTTON_PRESSED = \"COLLISION_DEMO_BUTTON_PRESSED\";\r\n\r\n/** Skeleton recognition demo **/\r\nexport const SKELETON_RECOGNITION_URI = \"SKELETON_RECOGNITION_URI\";\r\nexport const SKELETON_RECOGNITION_BUTTON_PRESSED=\"SKELETON_RECOGNITION_BUTTON_PRESSED\";\r\n\r\nexport const ASYNC_OPERATION_STARTED = \"ASYNC_OPERATION_STARTED\";\r\nexport const ASYNC_OPERATION_ENDED = \"ASYNC_OPERATION_ENDED\";\r\n\r\n/** Documents list **/\r\nexport const REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED = \"REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED\";\r\nexport const REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED = \"REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED\";\r\nexport const REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED = \"REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED\";\r\nexport const REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED = \"REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED\";\r\nexport const DELETE_DOCUMENT_FROM_DATABASE_SUCCEED = \"DELETE_DOCUMENT_FROM_DATABASE_SUCCEED\";\r\nexport const DOCUMENT_SELECTED_FROM_LIST = \"DOCUMENT_SELECTED_FROM_LIST\";\r\nexport const DOCUMENT_NAME_UPDATED = \"DOCUMENT_NAME_UPDATED\";\r\nexport const CLEAR_ALL_BUTTON_CLICKED = \"CLEAR_ALL_BUTTON_CLICKED\";\r\n\r\n/* Authentication */\r\nexport const AUTHENTICATION_STARTED = \"AUTHENTICATION_STARTED\";\r\nexport const AUTHENTICATION_SUCCEED = \"AUTHENTICATION_SUCCEED\";\r\nexport const AUTHENTICATION_FAILED = \"AUTHENTICATION_FAILED\";\r\nexport const AUTHENTICATION_LOGOUT = \"AUTHENTICATION_LOGOUT\";\r\nexport const AUTHENTICATION_SET_USERNAME = \"AUTENTICATION_SET_USERNAME\";\r\n\r\n","import {Utils, Arc, vector} from \"@flatten-js/core\";\r\n\r\nexport function arcSE(center, start, end, counterClockwise) {\r\n    let startAngle = vector(center,start).slope;\r\n    let endAngle = vector(center, end).slope;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, start).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\nexport function arcStartSweep(center, start, sweep, counterClockwise) {\r\n    let startAngle = vector(center,start).slope;\r\n    let endAngle = startAngle + sweep;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, start).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\nexport function arcEndSweep(center, end, sweep, counterClockwise) {\r\n    let endAngle = vector(center,end).slope;\r\n    let startAngle = endAngle - sweep;\r\n    if (Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(center, end).length;\r\n\r\n    return new Arc(center, r, startAngle, endAngle, counterClockwise);\r\n}\r\n\r\n","\r\n/**\r\n * Created by Alex Bol on 12/02/2018.\r\n */\r\nimport {Segment, Arc, Polygon, Face} from \"@flatten-js/core\";\r\nimport {CW, CCW, INSIDE, OUTSIDE, ORIENTATION} from \"@flatten-js/core\";\r\nimport {vector} from \"@flatten-js/core\";\r\nimport {unify,subtract} from \"@flatten-js/boolean-op\";\r\nimport  {BOOLEAN_UNION} from \"@flatten-js/boolean-op\";\r\n\r\nimport {addToIntPoints, getSortedArray, splitByIntersections} from \"@flatten-js/boolean-op\";\r\nimport {removeNotRelevantChains, removeOldFaces, restoreFaces} from \"@flatten-js/boolean-op\";\r\n\r\nimport {arcSE, arcStartSweep, arcEndSweep} from \"./createArcs\";\r\n\r\n/**\r\n * Offset polygon by given value\r\n * @param {Polygon} polygon - input polygon\r\n * @param {number} value - offset value, may be positive or negative\r\n * @returns {Polygon} offsetPolygon\r\n */\r\n\r\n/**\r\n *\r\n * @param polygon\r\n * @param value\r\n *\r\n */\r\nexport function offset(polygon, value) {\r\n    let w = value;\r\n\r\n    let edges = [...polygon.edges];\r\n    let offsetPolygon = polygon.clone();\r\n    let offsetEdge;\r\n\r\n    if (w !== 0) {\r\n\r\n        for (let edge of edges) {\r\n            if (edge.isSegment()) {\r\n                offsetEdge = offsetSegment(edge.shape, w);\r\n            }\r\n            else {\r\n                offsetEdge = offsetArc(edge.shape, w);\r\n            }\r\n\r\n            if (w > 0) {\r\n                offsetPolygon = unify(offsetPolygon, offsetEdge);\r\n            }\r\n            else {\r\n                offsetPolygon = subtract(offsetPolygon, offsetEdge);\r\n            }\r\n        }\r\n    }\r\n\r\n    return offsetPolygon;\r\n}\r\n\r\nexport function offsetArc(arc, value) {\r\n\r\n    let w = Math.abs(value);\r\n\r\n    // Define outline polygon\r\n    let polygon = new Polygon();\r\n    let arc_cap1,arc_cap2;\r\n\r\n    let arc_outer = arc.clone();\r\n    arc_outer.r = arc.r + w;\r\n\r\n    arc_cap1 = arcStartSweep(arc.end, arc_outer.end, Math.PI, arc.counterClockwise);\r\n    arc_cap2 = arcEndSweep(arc.start, arc_outer.start, Math.PI, arc.counterClockwise);\r\n\r\n    let arc_inner = undefined;\r\n    if (arc.r > w) {\r\n        arc_inner = new Arc(arc.pc, arc.r - w, arc.endAngle, arc.startAngle,\r\n            arc.counterClockwise === CW ? CCW : CW);\r\n    }\r\n    else {\r\n        // arc_inner = new Arc(arc.pc, w - arc.r, arc.startAngle, arc.endAngle, arc.counterClockwise);\r\n        arc_inner = new Segment(arc_cap1.end, arc_cap2.start);\r\n    }\r\n\r\n    polygon.addFace([arc_outer, arc_cap1, arc_inner, arc_cap2]);\r\n    [...polygon.faces][0].setArcLength();\r\n\r\n    // Create intersection points\r\n    let ips = Face.getSelfIntersections([...polygon.faces][0], polygon.edges, false);\r\n\r\n    // TODO: getSelfIntersections returns points with correspondent edges - avoid duplication\r\n    ips = ips.slice(0,ips.length/2);    // for now slice array to avoid duplication in points\r\n\r\n    let int_points = [];\r\n    let edge_cap1;\r\n    let edge_cap2;\r\n\r\n    edge_cap1 = [...polygon.edges][1];\r\n    edge_cap2 = [...polygon.edges][3];\r\n\r\n    for (let pt of ips) {\r\n        addToIntPoints(edge_cap1, pt, int_points);\r\n        addToIntPoints(edge_cap2, pt, int_points);\r\n    }\r\n\r\n    // Sort intersection points and insert them as new vertices\r\n    let int_points_sorted = getSortedArray(int_points);\r\n    splitByIntersections(polygon, int_points_sorted);\r\n\r\n\r\n    // Set BV flags\r\n    let bv = OUTSIDE;\r\n    for (let int_point of int_points_sorted) {\r\n        int_point.edge_before.bv = bv;\r\n        int_point.edge_after.bv = (bv === OUTSIDE ? INSIDE : OUTSIDE);\r\n        bv = int_point.edge_after.bv;   // invert flag on each iteration\r\n    }\r\n\r\n    // Remove inner \"chains\"\r\n    let op = BOOLEAN_UNION;\r\n    removeNotRelevantChains(polygon, op, int_points_sorted, true);\r\n\r\n    // return int_points_sorted;\r\n    // Swap links\r\n    let num = int_points.length;\r\n    if (num > 0) {\r\n        let edge_before;\r\n        let edge_after;\r\n        // 0 => 3\r\n        edge_before = int_points_sorted[0].edge_before;\r\n        edge_after = int_points_sorted[num-1].edge_after;\r\n        edge_before.next = edge_after;\r\n        edge_after.prev = edge_before;\r\n\r\n        // Fill in missed links in intersection points\r\n        int_points_sorted[0].edge_after = int_points_sorted[num-1].edge_after;\r\n        int_points_sorted[num-1].edge_before = int_points_sorted[0].edge_before;\r\n\r\n        if (num === 4) {\r\n            // 2 => 1\r\n            edge_before = int_points_sorted[2].edge_before;\r\n            edge_after = int_points_sorted[1].edge_after;\r\n            edge_before.next = edge_after;\r\n            edge_after.prev = edge_before;\r\n\r\n            // Fill in missed links in intersection points\r\n            int_points_sorted[2].edge_after = int_points_sorted[1].edge_after;\r\n            int_points_sorted[1].edge_before = int_points_sorted[2].edge_before;\r\n        }\r\n\r\n        // remove old faces\r\n        removeOldFaces(polygon, int_points);\r\n        // restore faces\r\n        restoreFaces(polygon, int_points, int_points);\r\n    }\r\n\r\n    let face0 = [...polygon.faces][0];\r\n    if (face0.orientation() === ORIENTATION.CCW) {\r\n        polygon.reverse();\r\n    }\r\n    return polygon;\r\n}\r\n\r\nexport function offsetSegment(seg, value) {\r\n    let w = Math.abs(value);\r\n\r\n    let polygon = new Polygon();\r\n    let v_seg = vector(seg.end.x-seg.start.x, seg.end.y-seg.start.y);\r\n    let v_seg_unit = v_seg.normalize();\r\n    let v_left = v_seg_unit.rotate90CCW().multiply(w);\r\n    let v_right = v_seg_unit.rotate90CW().multiply(w);\r\n    let seg_left = seg.translate(v_left);\r\n    let seg_right = seg.translate(v_right).reverse();\r\n    let cap1 = arcSE(seg.end, seg_left.end, seg_right.start, CW);\r\n    let cap2 = arcSE(seg.start, seg_right.end, seg_left.start, CW);\r\n\r\n    polygon.addFace([seg_left, cap1, seg_right, cap2]);\r\n    return polygon;\r\n}\r\n","/**\r\n * Created by alexanderbol on 01/05/2017.\r\n */\r\n\r\nimport {Point, Segment, Arc, Circle, Box, Polygon, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\nimport {offsetSegment, offsetArc} from \"../models/polygonOffset\";\r\n\r\n/*\r\nlet debug_str = `+\t\t[0]\t{nrec=27 nalloc=27 h_ind_id=-1 ...} mat_cont_hdr_struc\tmat_cont_struc\r\n    +\t\t[1]\t{pmin=59146400,5973200 pmax=59606001,6438000} mat_cont_lim_struc\tmat_cont_struc\r\n+\t\t[2]\t{nedge=23 nalloc=25 ntop=2 ...} mat_cont_poly_struc\tmat_cont_struc\r\n+\t\t[3]\t{pmin=59146400,5973200 pmax=59606001,6438000} mat_cont_lim_struc\tmat_cont_struc\r\n+\t\t[4]\t{ps=59192738,6363124 pe=59216000,6372800 pc=59216000,6340000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[5]\t{ps=59216000,6372800 pe=59267652,6372800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[6]\t{ps=59267652,6372800 pe=59267652,6307200 pc=59360000,6340000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[7]\t{ps=59267652,6307200 pe=59229586,6307200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[8]\t{ps=59229586,6307200 pe=59212000,6289614} mat_seg_struc\tmat_cont_struc\r\n+\t\t[9]\t{ps=59212000,6289614 pe=59212000,6056386} mat_seg_struc\tmat_cont_struc\r\n+\t\t[10]\t{ps=59212000,6056386 pe=59229586,6038800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[11]\t{ps=59229586,6038800 pe=59469614,6038800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[12]\t{ps=59469614,6038800 pe=59487200,6056386} mat_seg_struc\tmat_cont_struc\r\n+\t\t[13]\t{ps=59487200,6056386 pe=59487200,6100500} mat_seg_struc\tmat_cont_struc\r\n+\t\t[14]\t{ps=59487200,6100500 pe=59434000,6180000 pc=59520000,6180000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[15]\t{ps=59434000,6180000 pe=59552800,6100500 pc=59520000,6180000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[16]\t{ps=59552800,6100500 pe=59552800,6042800} mat_seg_struc\tmat_cont_struc\r\n+\t\t[17]\t{ps=59552800,6042800 pe=59543124,6019538 pc=59520000,6042800 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[18]\t{ps=59543124,6019538 pe=59506462,5982876} mat_seg_struc\tmat_cont_struc\r\n+\t\t[19]\t{ps=59506462,5982876 pe=59483200,5973200 pc=59483200,6006000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[20]\t{ps=59483200,5973200 pe=59216000,5973200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[21]\t{ps=59216000,5973200 pe=59192738,5982876 pc=59216000,6006000 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[22]\t{ps=59192738,5982876 pe=59156076,6019538} mat_seg_struc\tmat_cont_struc\r\n+\t\t[23]\t{ps=59156076,6019538 pe=59146400,6042800 pc=59179200,6042800 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[24]\t{ps=59146400,6042800 pe=59146400,6303200} mat_seg_struc\tmat_cont_struc\r\n+\t\t[25]\t{ps=59146400,6303200 pe=59156076,6326462 pc=59179200,6303200 cw=1} mat_curve_struc\tmat_cont_struc\r\n+\t\t[26]\t{ps=59156076,6326462 pe=59192738,6363124} mat_seg_struc\tmat_cont_struc\r\n`;\r\n*/\r\n\r\n/*\r\n+\t\tcircle\t{pc=40445880,-10500080 r=41327880}\tmat_circle_struc\r\n+\t\tcircle\t{pc=38215880,-7700040 r=92456}\tmat_circle_struc\r\n+\t\trect\t{pll=38215880,-7700040 w=92456 h=50000}\tmat_rect_struc\r\n+\t\tshape1\t{type=512 s={...} }\t_mat_shape_struc\r\n+\t\tline\t{ps=-18423,529080 pe=1047776,480195 r=60000 cap=0}\tmat_line_struc\r\n+\t\tarc\t{ps=1001217,249728 pe=752127,51853 pc=853697,179712 cw=??? r=60000 cap=0}\tmat_arc_struc\r\n */\r\n\r\nexport class Parser {\r\n    parseToWatchArray(str) {\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n        let watchArray = [];\r\n        for (let line of arrayOfLines) {\r\n            watchArray.push(line.substring(line.indexOf('{')));\r\n        }\r\n        return watchArray;\r\n    }\r\n\r\n    parseToPoint(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let pointArr = parenth.split('=')[1].split(',');\r\n        let point = new Point(parseInt(pointArr[0],10), parseInt(pointArr[1],10));\r\n        point.label = line.split(/\\s+/)[1];\r\n        return point;\r\n    }\r\n\r\n    parseToSegment(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        return new Segment(ps, pe);\r\n    }\r\n\r\n    parseToArc(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let pcArr = termArr[2].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n\r\n        let cwStr = termArr[3].split('=')[1];\r\n        let counterClockwise = cwStr === '0' ? true : false;\r\n\r\n        let startAngle = vector(pc,ps).slope;\r\n        let endAngle = vector(pc, pe).slope;\r\n\r\n        if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n            // endAngle += 2*Math.PI;\r\n            endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n        }\r\n        let r = vector(pc, ps).length;\r\n\r\n        return new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n    }\r\n\r\n    parseToCircle(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let pcArr = termArr[0].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n        let r = parseInt(termArr[1].split('=')[1],10);\r\n        // let circle = new Circle(pc, r);\r\n        // let polygon = new Polygon();\r\n        // polygon.addFace(circle);\r\n        return new Circle(pc, r);;\r\n    }\r\n\r\n    parseToRectangle(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let pllArr = termArr[0].split('=')[1].split(',');\r\n        let xmin = parseInt(pllArr[0],10);\r\n        let ymin = parseInt(pllArr[1],10);\r\n        let width = parseInt(termArr[1].split('=')[1],10);\r\n        let height = parseInt(termArr[2].split('=')[1],10);\r\n\r\n        let box = new Box(xmin, ymin, xmin + width, ymin + height);\r\n        let polygon = new Polygon();\r\n        polygon.addFace(box);\r\n        return polygon;\r\n        // return new Box(xmin, ymin, xmin + width, ymin + height);\r\n    }\r\n\r\n    parseToODBLine(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let w = parseInt(termArr[2].split('=')[1],10);\r\n\r\n        let segment = new Segment(ps, pe);\r\n        let polygon = w > 0 ? offsetSegment(segment, w) : new Polygon();\r\n\r\n        return polygon;\r\n    }\r\n\r\n    parseToODBArc(line) {\r\n        let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n        let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n        let psArr = termArr[0].split('=')[1].split(',');\r\n        let ps = new Point(parseInt(psArr[0],10), parseInt(psArr[1],10));\r\n\r\n        let peArr = termArr[1].split('=')[1].split(',');\r\n        let pe = new Point(parseInt(peArr[0],10), parseInt(peArr[1],10));\r\n\r\n        let pcArr = termArr[2].split('=')[1].split(',');\r\n        let pc = new Point(parseInt(pcArr[0],10), parseInt(pcArr[1],10));\r\n\r\n        let cwStr = termArr[3].split('=')[1];\r\n        let counterClockwise = cwStr === '0' ? true : false;\r\n\r\n        let startAngle = vector(pc,ps).slope;\r\n        let endAngle = vector(pc, pe).slope;\r\n\r\n        if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n            // endAngle += 2*Math.PI;\r\n            endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n        }\r\n        let r = vector(pc, ps).length;\r\n\r\n        let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n        let w = parseInt(termArr[4].split('=')[1],10);\r\n\r\n        let polygon = w > 0 ? offsetArc(arc, w) : new Polygon();\r\n\r\n        return polygon;\r\n    }\r\n\r\n    parseToPolygon(str) {\r\n        let polygon = new Polygon();\r\n        // let mulitystr = debug_str;\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n\r\n        for (let i=0; i < arrayOfLines.length; i++) {\r\n            let line = arrayOfLines[i];\r\n            if (line.search('mat_cont_poly_struc') >= 0) {\r\n                let parenth = line.match(/\\{([^)]+)\\}/)[1];       // string inside {..}\r\n                let termArr = parenth.split(' ');                 // array of terms \"attr=value\"\r\n                let nedgesTerm = termArr[0];                      // \"nedge=nn\"\r\n                let nedgesStr = nedgesTerm.split('=')[1];\r\n                let nedges = parseInt(nedgesStr,10);\r\n\r\n                // Create new face from next #nedges of segments and arcs\r\n                let edges = [];\r\n                for (let j=i+2; j < i+2+nedges; j++) {\r\n                    line = arrayOfLines[j];\r\n                    // let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n                    // let termArr = parenth.split(' ');             // array of terms \"attr=value\"\r\n\r\n                    if (line.search('mat_seg_struc') >= 0) {\r\n                        let segment = this.parseToSegment(line);\r\n                        edges.push(segment);\r\n                    }\r\n                    else if (line.search('mat_curve_struc') >= 0) {\r\n                        let arc = this.parseToArc(line);\r\n                        edges.push(arc);\r\n                    }\r\n                }\r\n                polygon.addFace(edges);\r\n            }\r\n        }\r\n        return polygon;\r\n    }\r\n\r\n    parseToPoints(str) {\r\n        let points = [];\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n        for (let line of arrayOfLines) {\r\n            if (line.search('point_struc') >= 0) {\r\n                let parenth = line.match(/\\{([^)]+)\\}/)[1];   // string inside {..}\r\n                let pointArr = parenth.split('=')[1].split(',');\r\n                let point = new Point(parseInt(pointArr[0],10), parseInt(pointArr[1],10));\r\n                point.label = line.split(/\\s+/)[1];\r\n                points.push(point);\r\n            }\r\n        }\r\n        return points;\r\n    }\r\n\r\n    parseToShapes(str) {\r\n        let shapes = [];\r\n        let shape;\r\n        let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n        for (let line of arrayOfLines) {\r\n            if (line.search('point_struc') >= 0) {\r\n                shape = this.parseToPoint(line);\r\n            }\r\n            else if (line.search('_seg_struc') >= 0) {\r\n                shape = this.parseToSegment(line);\r\n            }\r\n            else if (line.search('_curve_struc') >= 0) {\r\n                shape = this.parseToArc(line);\r\n            }\r\n            else if (line.search('_circle_struc') >= 0) {\r\n                shape = this.parseToCircle(line);\r\n            }\r\n            else if (line.search('_rect_struc') >= 0) {\r\n                shape = this.parseToRectangle(line);\r\n            }\r\n            else if (line.search('_line_struc') >= 0) {\r\n                shape = this.parseToODBLine(line);\r\n            }\r\n            else if (line.search('_arc_struc') >= 0) {\r\n                shape = this.parseToODBArc(line);\r\n            }\r\n            shapes.push(shape);\r\n        }\r\n        return shapes;\r\n    }\r\n\r\n    parse(str) {\r\n        /* try polygon */\r\n        let polygon = this.parseToPolygon(str);\r\n        if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n            return [polygon];\r\n        }\r\n\r\n        /* try array of shapes excluding polygon */\r\n        let shapes = this.parseToShapes(str);\r\n        if (shapes.length > 0) {\r\n            return shapes;\r\n        }\r\n\r\n        /* try array of points */\r\n        let points = this.parseToPoints(str);\r\n        if (points.length > 0) {\r\n            return points;\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","import * as ActionTypes from \"../actionTypes\";\r\nimport {Parser} from \"../../dataParsers/parser\";\r\n\r\nconst unitsList = [\r\n    {\r\n        name: \"pixels\",\r\n        decimals: 0,\r\n        divisor: 1\r\n    },\r\n    {\r\n        name: \"inch\",\r\n        decimals: 7,\r\n        divisor: 10160000\r\n    },\r\n    {\r\n        name: \"mm\",\r\n        decimals: 6,\r\n        divisor: 400000\r\n    }];\r\n\r\nconst defaultAppState = {\r\n    title: \"Debug Viewer\",\r\n    version: process.env.REACT_APP_VERSION,\r\n    build: \"\",\r\n    units: \"pixels\",\r\n    decimals: 0,\r\n    divisor: 1,\r\n    // bg: \"#F1F1F1\",\r\n    parser: new Parser(),\r\n    widthOn: true,\r\n    displayVertices: false,\r\n    displayLabels: true,\r\n    measurePointsActive: false,\r\n    zoomFactor: undefined,\r\n    originX: undefined,\r\n    originY: undefined,\r\n    showAboutPopup: false,\r\n    importDataToNewLayer: true,       // if false, import data to affected layer\r\n    showSkeletonRecognitionButton: false,\r\n    applySkeletonRecognition: false,\r\n    stage: null,\r\n    showSpinner: false,\r\n    showLayerList: false,\r\n    showDownloadPopup: false\r\n};\r\n\r\nconst app = (state = defaultAppState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.NEW_STAGE_CREATED:\r\n            return Object.assign({}, state, {\r\n                stage: action.stage,\r\n                zoomFactor: action.stage.zoomFactor * action.stage.resolution,\r\n                originX: action.stage.origin.x,\r\n                originY: action.stage.origin.y,\r\n            });\r\n\r\n        case ActionTypes.STAGE_UNMOUNTED:\r\n            return Object.assign({}, state, {\r\n                stage: null,\r\n                zoomFactor: undefined,\r\n                originX: undefined,\r\n                originY: undefined\r\n            });\r\n\r\n        case ActionTypes.MOUSE_WHEEL_MOVE_ON_STAGE:\r\n        case ActionTypes.PAN_AND_ZOOM_TO_SHAPE:\r\n        case ActionTypes.PINCH_MOVED_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                zoomFactor: action.stage.zoomFactor * action.stage.resolution,\r\n                originX: action.stage.origin.x,\r\n                originY: action.stage.origin.y,\r\n            });\r\n        case ActionTypes.MOUSE_MOVED_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                originX: action.stage.origin.x,\r\n                originY: action.stage.origin.y\r\n            });\r\n        case ActionTypes.TOGGLE_UNITS_CLICKED:\r\n            let curUnitsId = unitsList.findIndex(units => state.units === units.name);\r\n            let newUnits = unitsList[(curUnitsId + 1) % 3];\r\n            return Object.assign({}, state, {\r\n                units: newUnits.name,\r\n                decimals: newUnits.decimals,\r\n                divisor: newUnits.divisor\r\n            });\r\n        case ActionTypes.TOGGLE_WIDTH_MODE_CLICKED:\r\n            return Object.assign({}, state, {\r\n                widthOn: !state.widthOn,\r\n                displayVertices: state.widthOn ? state.displayVertices : false\r\n            });\r\n        case ActionTypes.TOGGLE_DISPLAY_VERTICES_CLICKED:\r\n            if (state.displayVertices) {\r\n                return Object.assign({}, state, {\r\n                    displayVertices: false\r\n                });\r\n            }\r\n            else {\r\n                return Object.assign({}, state, {\r\n                    widthOn: false,\r\n                    displayVertices: true\r\n                });\r\n            }\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LABELS_CLICKED:\r\n            return Object.assign({}, state, {\r\n                displayLabels: !state.displayLabels\r\n            });\r\n\r\n        case ActionTypes.TOGGLE_ABOUT_POPUP_CLICKED:\r\n            return Object.assign({}, state, {\r\n                showAboutPopup: !state.showAboutPopup\r\n            });\r\n\r\n        // case ActionTypes.CLOSE_ABOUT_POPUP_BUTTON_PRESSED:\r\n        //     return Object.assign({}, state, {\r\n        //         showAboutPopup: false\r\n        //     });\r\n\r\n        case ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED:\r\n            return Object.assign({}, state, {\r\n                measurePointsActive: false\r\n            });\r\n\r\n        case ActionTypes.MEASURE_POINTS_BUTTON_PRESSED:\r\n            return Object.assign({}, state, {\r\n                measurePointsActive: true\r\n            });\r\n        case ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED:\r\n            return Object.assign({}, state, {\r\n                measurePointsActive: false\r\n            });\r\n        case ActionTypes.SKELETON_RECOGNITION_URI:\r\n            return Object.assign({}, state, {\r\n                showSkeletonRecognitionButton: true\r\n            });\r\n        case ActionTypes.SKELETON_RECOGNITION_BUTTON_PRESSED:\r\n            return Object.assign({}, state, {\r\n                applySkeletonRecognition: true\r\n            });\r\n        case ActionTypes.ASYNC_OPERATION_STARTED:\r\n            return Object.assign({}, state, {\r\n                showSpinner: true\r\n            });\r\n        case ActionTypes.ASYNC_OPERATION_ENDED:\r\n            return Object.assign({}, state, {\r\n                showSpinner: false\r\n            });\r\n        case ActionTypes.AABB_TREE_NEXT_LEVEL:\r\n            return state;\r\n        case ActionTypes.TOGGLE_SHOW_LAYER_LIST_CLICKED:\r\n            return {\r\n                ...state,\r\n                showLayerList: !state.showLayerList\r\n            };\r\n        case ActionTypes.TOGGLE_DOWNLOAD_POPUP_CLICKED:\r\n            return {\r\n                ...state,\r\n                showDownloadPopup: !state.showDownloadPopup\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default app;\r\n","\r\nlet defaultStyle = {\r\n    strokeStyle: 1,\r\n    stroke: \"#FF0303\",\r\n    fill: \"#FF0303\",\r\n    alpha: 1.0\r\n};\r\n\r\n/* Class Model represents data model that will be added to layer */\r\nclass Model {\r\n    constructor(geom = undefined, style = undefined, label = \"\") {\r\n        this.geom = geom;\r\n        this.style = style || defaultStyle;\r\n        this.label = label;\r\n    }\r\n\r\n    clone() {\r\n        let model = new Model(this.geom, this.style, this.label);\r\n        return Object.assign(model, this);\r\n    }\r\n\r\n    get box() {\r\n        return this.geom.box;\r\n    }\r\n/*\r\n    static transformPoint(pt, stage) {\r\n        return new Flatten.Point(stage.W2C_X(pt.x), stage.W2C_Y(pt.y));\r\n    }\r\n\r\n    static transformSegment(segment, stage) {\r\n        return new Flatten.Segment(\r\n            Model.transformPoint(segment.ps, stage),\r\n            Model.transformPoint(segment.pe, stage)\r\n        )\r\n    }\r\n\r\n    static transformArc(arc, stage) {\r\n        return new Flatten.Arc(\r\n            Model.transformPoint(arc.pc, stage),\r\n            stage.W2C_Scalar(arc.r),\r\n            arc.startAngle,\r\n            arc.endAngle,\r\n            arc.counterClockwise\r\n        )\r\n    }\r\n\r\n    static transformEdge(shape, stage) {\r\n        if (shape instanceof Flatten.Segment) {\r\n            return Model.transformSegment(shape, stage);\r\n        }\r\n        else if (shape instanceof Flatten.Arc) {\r\n            return Model.transformArc(shape, stage);\r\n        }\r\n    }\r\n\r\n    static transformFace(face, stage) {\r\n        // Get shapes of face as array\r\n        let shapes = [];\r\n        for (let edge of face) {\r\n            shapes.push(edge.shape);\r\n        }\r\n\r\n        // Transform array of edges\r\n        return shapes.map(shape => Model.transformEdge(shape, stage));\r\n    }\r\n\r\n    static transformPolygon(polygon, stage) {\r\n        let newPolygon = new Flatten.Polygon();\r\n        let shapes = [];\r\n        for (let face of polygon.faces) {\r\n            shapes = Model.transformFace(face, stage);\r\n            newPolygon.addFace(shapes);\r\n        }\r\n        return newPolygon;\r\n    }\r\n*/\r\n}\r\n\r\nexport default Model;","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport {Point, Box} from '@flatten-js/core';\r\n// import { Shape } from '../models/shape';\r\nimport Model from './model';\r\n\r\nclass Layer {\r\n    constructor(stage) {\r\n        // super();\r\n        // cannot define Layer as extension of PlanarSet due to bug in compiler ?\r\n        this.stage = stage;\r\n        this.shapes = [];         // new Flatten.PlanarSet();\r\n        this.name = \"\";\r\n        this.color = \"\";\r\n        this.title = \"\";\r\n        this.displayed = false;\r\n        this.edited = false;\r\n        this.affected = false;\r\n    }\r\n\r\n    clone() {\r\n        let layer = new Layer(this.stage);\r\n        return Object.assign(layer, this);\r\n    }\r\n\r\n    add(shape) {\r\n        if (shape instanceof Model) {\r\n            this.shapes.push(shape);       // add(shape)\r\n        }\r\n        else {\r\n            let geom = shape;\r\n            let newShape = new Model(geom, {}, shape.label) // , this.stage);\r\n            this.shapes.push(newShape);     // add(newShape);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    addShapesArray(shapes) {\r\n        for (let shape of shapes) {\r\n            this.add(shape);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    get box() {\r\n        let box = new Box();\r\n        for (let shape of this.shapes) {\r\n            box = box.merge(shape.geom instanceof Box ? shape.clone() : shape.box);\r\n        }\r\n        return box;\r\n    }\r\n\r\n    get center() {\r\n        let box = this.box;\r\n        return new Point((box.xmin + box.xmax)/2, (box.ymin + box.ymax)/2);\r\n    }\r\n\r\n    toggleDisplayed(color) {\r\n        let displayed = !this.displayed;\r\n        return Object.assign(this.clone(),\r\n            {\r\n                displayed : displayed,\r\n                color: color\r\n            });\r\n    }\r\n\r\n    setAffected(affected) {\r\n        this.affected = affected;\r\n        return this;\r\n        // return Object.assign(this.clone(),\r\n        //     {\r\n        //         affected : affected\r\n        //     });\r\n    }\r\n\r\n    setEdited(edited) {\r\n        return Object.assign(this.clone(),\r\n            {\r\n                edited : edited\r\n            });\r\n    }\r\n\r\n    setNameAndTitle(name,title) {\r\n        return Object.assign(this.clone(),\r\n            {\r\n                name : name,\r\n                title: title,\r\n                edited: false\r\n            });\r\n    }\r\n\r\n    setAlpha() {\r\n        for(let shape of this.shapes) {\r\n            shape.alpha = this.displayed ? 1 : 0;\r\n        }\r\n        return this.shapes;\r\n    }\r\n\r\n    // toggleExpanded(shapeToggle) {\r\n    //     for(let shape of this.shapes) {\r\n    //         if (shape === shapeToggle) {\r\n    //             shape.expanded = !shape.expanded;\r\n    //         }\r\n    //     }\r\n    //     return this;\r\n    // }\r\n\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            title: this.title,\r\n            shapes: JSON.stringify(this.shapes, null, ' ')\r\n        };\r\n    }\r\n}\r\n\r\nexport default Layer;\r\n","/**\r\n * Created by alexanderbol on 20/04/2017.\r\n */\r\n\r\nimport Layer from '../models/layer';\r\n\r\nconst colors = [\r\n    \"#FF0303\",\r\n    \"#4AA403\",\r\n    \"#540080\",\r\n    \"#FFFF40\",\r\n    \"#FF0080\",\r\n    \"#AED424\",\r\n    \"#545400\",\r\n    \"#FFA980\",\r\n    \"#A95480\",\r\n    \"#A9A9FF\",\r\n    \"#00FF00\",\r\n    \"#FFEE76\",\r\n    \"#A40576\",\r\n    \"#4385C8\",\r\n    \"#1CC826\",\r\n    \"#BDBD00\",\r\n    \"#48316E\",\r\n    \"#14616E\",\r\n    \"#8040BD\",\r\n    \"#DC7676\",\r\n    \"#924845\",\r\n    \"#A90000\",\r\n    \"#FFA900\"\r\n];\r\n\r\nclass Layers {\r\n\r\n    static newLayer(stage, layers) {\r\n        let layer = new Layer(stage);\r\n        layer.name = Layers.getNewName(layers);\r\n        if (layers.length === 0) { // first layer\r\n            // layer.color = Layers.getNextColor(layers);\r\n            layer.displayed = false;\r\n            layer.affected = false;\r\n        }\r\n        return layer;\r\n    }\r\n\r\n    static get defaultName() {\r\n        return \"layer\";\r\n    }\r\n\r\n    static getNewName(layers) {\r\n        let name = Layers.defaultName;\r\n        let inc = 1;\r\n        let comparator = (layer) => layer.name === name;\r\n        while (layers.find(comparator) ) {\r\n            name = Layers.defaultName + inc;\r\n            inc++;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    static getAffected(layers) {\r\n        return layers.find((lay) => lay.affected);\r\n    }\r\n\r\n    static setAffected(layers, layer) {\r\n        let currentAffectedLayer = Layers.getAffected(layers);\r\n        if (currentAffectedLayer) {\r\n            currentAffectedLayer.affected = false;\r\n        }\r\n        layer.affected = true;\r\n    }\r\n\r\n    static getNextColor(layers) {\r\n        let color = \"\";\r\n        for (let col of colors) {\r\n            if (!layers.find((layer) =>\r\n                layer.displayed && layer.color === col)) {\r\n                color = col;\r\n                break;\r\n            }\r\n        }\r\n        return color;\r\n    }\r\n\r\n    static delete(layers, layer) {\r\n        let index = layers.findIndex((l) => l === layer);\r\n        let newLayers = layers.filter(l => l !== layer);\r\n        if (index > 0) {\r\n            newLayers[index-1].affected = true;\r\n            if (newLayers[index-1].color === \"\") {\r\n                newLayers[index - 1].color = Layers.getNextColor(newLayers);\r\n            }\r\n            newLayers[index-1].displayed = true;\r\n        }\r\n        return newLayers;\r\n        // another option to delete from array:\r\n        // const newLayers = [...layers]\r\n        // return newLayers.splice( index, 1);\r\n    }\r\n\r\n    static sort(layers) {\r\n        let newLayers = layers.slice();\r\n        newLayers.sort( function(l1, l2) {\r\n            let name1 = l1.name.toUpperCase();\r\n            let name2 = l2.name.toUpperCase();\r\n            if (name1 < name2) {\r\n                return -1;\r\n            }\r\n            if (name1 > name2) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n        return newLayers;\r\n    }\r\n\r\n    static toJSON(layers) {\r\n        return layers.map( layer => layer.toJSON() );\r\n    }\r\n}\r\n\r\nexport default Layers;","import * as ActionTypes from \"../actionTypes\";\r\nimport Layers from \"../../models/layers\";\r\n\r\nconst layers = (state = [], action) => {\r\n    let affectedLayer = state.find(layer => layer.affected);\r\n    let affectedLayerId = state.findIndex(layer => layer.affected);\r\n    let newLayer;\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LAYER_BUTTON_PRESSED:\r\n            newLayer = Layers.newLayer(action.stage, state);\r\n            return [...state, newLayer];\r\n\r\n        case ActionTypes.ADD_NEW_LAYER:\r\n            return [...state, action.layer];\r\n\r\n        case ActionTypes.DELETE_LAYER_BUTTON_PRESSED:\r\n            if (affectedLayer) {\r\n                return Layers.delete(state, affectedLayer);\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        case ActionTypes.CLEAR_ALL_BUTTON_CLICKED:\r\n            return [];\r\n\r\n        case ActionTypes.SORT_LAYERS_BUTTON_PRESSED:\r\n            return Layers.sort(state);\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED:\r\n            let color = \"\";\r\n            if (!action.layer.displayed) {\r\n                color = Layers.getNextColor(state);\r\n                if (color === \"\") return;  // no free colors\r\n            }\r\n            return state.map((layer) => {\r\n                if (layer !== action.layer) {\r\n                    // if action.layer will be undisplayed,\r\n                    // it cannot become affected, then\r\n                    // keep affected on this layer\r\n                    if (action.layer.displayed) {\r\n                        return layer;\r\n                    }\r\n                    else {\r\n                        return layer.setAffected(false);\r\n                    }\r\n                }\r\n                else {\r\n                    let newLayer = layer.toggleDisplayed(color);\r\n                    newLayer.affected = newLayer.displayed;\r\n                    return newLayer;\r\n                }\r\n                // return layer.toggleDisplayed(color);\r\n            });\r\n\r\n        case ActionTypes.TOGGLE_AFFECTED_LAYER_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer !== action.layer) {\r\n                    return layer.setAffected(false);\r\n                }\r\n                else {\r\n                    return layer.setAffected(!layer.affected);\r\n                }\r\n            });\r\n\r\n        // case ActionTypes.NEW_SHAPE_PASTED:\r\n        //     return state.map((layer) => {\r\n        //         if (layer.affected) {\r\n        //             return layer.addShapesArray(action.shapesArray);\r\n        //         }\r\n        //         else {\r\n        //             return layer;\r\n        //         }\r\n        //     });\r\n\r\n        case ActionTypes.OPEN_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer !== affectedLayer) {\r\n                    return layer;\r\n                }\r\n                else {\r\n                    return layer.setEdited(true);\r\n                }\r\n            });\r\n\r\n        case ActionTypes.SUBMIT_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer.edited) {\r\n                    return layer.setNameAndTitle(action.newLayer.name, action.newLayer.title);\r\n                }\r\n                else {\r\n                    return layer;\r\n                }\r\n            });\r\n\r\n        case ActionTypes.ESCAPE_LAYER_EDIT_FORM_PRESSED:\r\n            return state.map((layer) => {\r\n                if (layer.edited) {             // !== action.layer) {\r\n                    return layer.setEdited(false);\r\n                }\r\n                else {\r\n                    return layer;\r\n                }\r\n            });\r\n\r\n        case ActionTypes.LAYERS_LIST_ARROW_DOWN_PRESSED:\r\n            if (affectedLayerId === state.length - 1) {\r\n                return state;\r\n            }\r\n            else {\r\n\r\n                let nextLayer = state[affectedLayerId + 1];\r\n\r\n                return state.map(layer => {\r\n                    if (layer === affectedLayer) {\r\n                        let newCurLayer = layer.toggleDisplayed(\"\");\r\n                        newCurLayer.affected = false;\r\n                        return newCurLayer;\r\n                    }\r\n                    else if (layer === nextLayer) {\r\n                        let color = affectedLayer.color;\r\n                        let newNextLayer = layer.toggleDisplayed(color);\r\n                        newNextLayer.affected = true;\r\n                        return newNextLayer;\r\n                    }\r\n                    else {\r\n                        return layer;\r\n                    }\r\n                });\r\n            }\r\n\r\n        case ActionTypes.LAYERS_LIST_ARROW_UP_PRESSED:\r\n            if (affectedLayerId === 0) {\r\n                return state;\r\n            }\r\n            else {\r\n                let nextLayer = state[affectedLayerId - 1];\r\n\r\n                return state.map(layer => {\r\n                    if (layer === affectedLayer) {\r\n                        let newCurLayer = layer.toggleDisplayed(\"\");\r\n                        newCurLayer.affected = false;\r\n                        return newCurLayer;\r\n                    }\r\n                    else if (layer === nextLayer) {\r\n                        let newNextLayer = layer.toggleDisplayed(affectedLayer.color);\r\n                        newNextLayer.displayed = true;\r\n                        newNextLayer.affected = true;\r\n                        return newNextLayer;\r\n                    }\r\n                    else {\r\n                        return layer;\r\n                    }\r\n                });\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default layers;","import * as ActionTypes from \"../actionTypes\";\r\n\r\nconst defaultMouseState = {\r\n    x: 0,\r\n    y: 0,\r\n    startX: undefined,\r\n    startY: undefined,\r\n    touchPoints: undefined\r\n};\r\n\r\nconst mouse = (state = defaultMouseState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.MOUSE_MOVED_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                x: action.x,\r\n                y: action.y\r\n            });\r\n        case ActionTypes.MOUSE_DOWN_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                startX: action.x,\r\n                startY: action.y\r\n            });\r\n        case ActionTypes.MOUSE_UP_ON_STAGE:\r\n            return Object.assign({}, state, {\r\n                startX: undefined,\r\n                startY: undefined\r\n            });\r\n\r\n        case ActionTypes.PINCH_DOWN_ON_STAGE: {\r\n            return {\r\n                ...state,\r\n                touchPoints: [\r\n                    {x: action.x1, y: action.y1},\r\n                    {x: action.x2, y: action.y2}\r\n                ]\r\n            }\r\n        }\r\n        // case ActionTypes.PINCH_MOVED_ON_STAGE: {\r\n        //     return {\r\n        //         ...state,\r\n        //         touchPoints: [\r\n        //             {x: action.x1, y: action.y1},\r\n        //             {x: action.x2, y: action.y2}\r\n        //         ]\r\n        //     }\r\n        // }\r\n        case ActionTypes.PINCH_UP_ON_STAGE: {\r\n            return {\r\n                ...state,\r\n                touchPoints: undefined\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default mouse;","import * as ActionTypes from \"../actionTypes\";\r\nimport Flatten from \"@flatten-js/core\";\r\n\r\nconst defaultMeasureShapesTool = {\r\n    measureShapesActive: false,\r\n    measureShapesFirstClick: true,\r\n    hoveredShape: null,\r\n    firstMeasuredShape: null,\r\n    secondMeasuredShape: null,\r\n    firstMeasuredLayer: null,\r\n    secondMeasuredLayer: null,\r\n    distance: undefined,\r\n    shortestSegment: null\r\n};\r\n\r\nconst is_mobile = window.mobilecheck();\r\n\r\nconst measureShapesTool = (state = defaultMeasureShapesTool, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED:\r\n            return Object.assign({}, defaultMeasureShapesTool, {\r\n                measureShapesActive: true\r\n            });\r\n        case ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED:\r\n            return Object.assign({}, defaultMeasureShapesTool);\r\n\r\n        case ActionTypes.MEASURE_POINTS_BUTTON_PRESSED:\r\n            return Object.assign({}, defaultMeasureShapesTool);\r\n\r\n        case ActionTypes.MOUSE_ROLL_OVER_SHAPE:\r\n            return Object.assign({}, state, {\r\n                hoveredShape: state.measureShapesActive ? action.shape : null\r\n            });\r\n        case ActionTypes.MOUSE_ROLL_OUT_SHAPE:\r\n            return Object.assign({}, state, {\r\n                hoveredShape: null\r\n            });\r\n        case ActionTypes.MOUSE_CLICKED_ON_SHAPE:\r\n            if (!state.measureShapesActive) {\r\n                return state;\r\n            }\r\n            // measureShapesActive\r\n\r\n            if (state.measureShapesFirstClick) {\r\n                return Object.assign({}, state, {\r\n                    firstMeasuredShape: action.shape,\r\n                    firstMeasuredLayer: action.layer,\r\n                    secondMeasuredShape: null,\r\n                    secondMeasuredLayer: null,\r\n                    measureShapesFirstClick: false,\r\n                    distance: undefined,\r\n                    shortestSegment: null\r\n                })\r\n            }\r\n            else {    // second click\r\n                if (action.shape === state.firstMeasuredShape) {\r\n                    return state;  // second click on the same shape\r\n                }\r\n\r\n                let shape1 = state.firstMeasuredShape.geom;\r\n                let shape2 = action.shape.geom;\r\n                let distance, shortestSegment;\r\n                // if (shape1 instanceof Flatten.Polygon && shape2 instanceof Flatten.Polygon) {\r\n                //     [distance, shortestSegment] = Flatten.Distance.polygon2polygon(shape1, shape2);\r\n                // }\r\n                // else {\r\n                [distance, shortestSegment] = Flatten.Distance.distance(shape1, shape2);\r\n                // }\r\n\r\n\r\n                return Object.assign({}, state, {\r\n                    secondMeasuredShape: action.shape,\r\n                    secondMeasuredLayer: action.layer,\r\n                    measureShapesFirstClick: true,\r\n                    distance: distance,\r\n                    shortestSegment: shortestSegment\r\n                });\r\n            }\r\n        case ActionTypes.MOUSE_DOWN_ON_STAGE:\r\n            if (state.hoveredShape || is_mobile) {\r\n                return state\r\n            }\r\n            else {\r\n                return Object.assign({}, state, {\r\n                    measureShapesFirstClick: true,\r\n                    firstMeasuredShape: null,\r\n                    firstMeasuredLayer: null,\r\n                    secondMeasuredShape: null,\r\n                    secondMeasuredLayer: null,\r\n                    distance: undefined,\r\n                    shortestSegment: null\r\n                });\r\n            }\r\n\r\n        case ActionTypes.DELETE_LAYER_BUTTON_PRESSED:\r\n            if (action.layer === state.firstMeasuredLayer ||\r\n                action.layer === state.secondMeasuredLayer) {\r\n                return Object.assign({}, defaultMeasureShapesTool);\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        case ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED:\r\n            if (action.layer.displayed &&\r\n                (action.layer === state.firstMeasuredLayer ||\r\n                    action.layer === state.secondMeasuredLayer)) {\r\n                return Object.assign({}, defaultMeasureShapesTool);\r\n            }\r\n            else {\r\n                return state;\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default measureShapesTool;","import * as ActionTypes from \"../actionTypes\";\r\n\r\nconst documentDefaultState = {\r\n    id: undefined,\r\n    name: \"\",\r\n    owner: \"Alex Bol\",\r\n    lastUpdated: undefined\r\n};\r\n\r\nconst cloudStorageDefaultState = {\r\n    document: documentDefaultState,\r\n    documentsList: {}\r\n};\r\n\r\nfunction isUpToDate(stateDocumentsList, actionDocumentsList) {\r\n    if (actionDocumentsList === null || actionDocumentsList === undefined)\r\n        return true;\r\n\r\n    if (Object.keys(stateDocumentsList).length !== Object.keys(actionDocumentsList).length)\r\n        return false;\r\n    for (let key in stateDocumentsList) {\r\n        if (!(actionDocumentsList.hasOwnProperty(key) && (stateDocumentsList[key].lastUpdated !== actionDocumentsList[key].lastUpdated))) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst cloudStorage = (state = cloudStorageDefaultState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    id: action.id,\r\n                    name: action.name,\r\n                    owner: action.owner,\r\n                    lastUpdated: action.lastUpdated\r\n                }\r\n            };\r\n\r\n        case ActionTypes.REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    id: action.id,\r\n                    name: action.name,\r\n                    owner: action.owner,\r\n                    lastUpdated: action.lastUpdated\r\n                }\r\n            };\r\n\r\n        case ActionTypes.REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    ...state.document,\r\n                    lastUpdated: action.lastUpdated\r\n                }\r\n            };\r\n\r\n        case ActionTypes.DOCUMENT_NAME_UPDATED:\r\n            return {\r\n                ...state,\r\n                document: {\r\n                    ...state.document,\r\n                    name: action.name\r\n                }\r\n            };\r\n\r\n        case ActionTypes.DELETE_DOCUMENT_FROM_DATABASE_SUCCEED:\r\n            let { [action.id]: document, ...newList } = state.documentsList;\r\n            return {\r\n                ...state,\r\n                document: state.document.id === action.id ? documentDefaultState : state.document,\r\n                documentsList: newList\r\n            };\r\n\r\n        case ActionTypes.DOCUMENT_SELECTED_FROM_LIST:\r\n            return {\r\n                ...state,\r\n                document: action.document\r\n            };\r\n\r\n        case ActionTypes.CLEAR_ALL_BUTTON_CLICKED:\r\n            return {\r\n                ...state,\r\n                document: documentDefaultState\r\n            };\r\n\r\n        case ActionTypes.REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED:\r\n            return isUpToDate(state.documentsList, action.documentsList) ?\r\n                state :\r\n            {\r\n                ...state,\r\n                documentsList: action.documentsList\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cloudStorage","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\n\r\nimport {combineReducers} from 'redux';\r\n\r\nimport auth from \"./reducers/auth\";\r\nimport app from \"./reducers/app\";\r\nimport layers from \"./reducers/layers\";\r\nimport mouse from \"./reducers/mouse\";\r\nimport measureShapesTool from \"./reducers/measureShapesTool\";\r\nimport cloudStorage from \"./reducers/cloudStorage\";\r\n\r\nconst reducer = combineReducers({\r\n    auth,\r\n    app,\r\n    layers,\r\n    cloudStorage,\r\n    measureShapesTool,\r\n    mouse\r\n});\r\n\r\nexport default reducer;\r\n","import * as ActionTypes from '../store/actionTypes';\r\n\r\nconst log = ({ getState, dispatch }) => next => action => {\r\n\r\n    if(action.type !== ActionTypes.MOUSE_MOVED_ON_STAGE) {\r\n        console.log('ACTION: ' + action.type, action);\r\n    }\r\n\r\n    next(action);\r\n};\r\n\r\nexport default log;","import {Box} from '@flatten-js/core';\r\n\r\nexport class Job {\r\n    constructor() {\r\n        this.filename = \"\";\r\n        this.title = \"\";\r\n        this.profiles = [];   // array of FlattenJS Polygons\r\n        this.materials = [];  // array of FlattenJS Polygons\r\n        this.shapes = [];     // array of other FlattenJS shapes\r\n    }\r\n\r\n    get box() {\r\n        let b = new Box();\r\n        for (let shape of this.profiles) {\r\n            b.merge(shape.box);\r\n        }\r\n        for (let shape of this.materials) {\r\n            b.merge(shape.box);\r\n        }\r\n        for (let shape of this.shapes) {\r\n            b.merge(shape.box);\r\n        }\r\n        return b;\r\n    }\r\n}","import { Job } from '../models/job';\r\nimport {Point, Segment, Arc, Polygon, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\n\r\nFlatten.Image = class Image {\r\n    constructor() {\r\n        this.uri = \"\";\r\n        /**\r\n         * Center in world coordinates\r\n         * @type {Flatten.Point}\r\n         */\r\n        this.center = new Flatten.Point();\r\n        /**\r\n         * Width in world units (inch/mm)\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * Height in world units (inch/mm)\r\n         */\r\n        this.height = 0;\r\n    }\r\n    get box() {\r\n        return new Flatten.Box(\r\n            this.center.x - this.width/2,\r\n            this.center.y - this.height/2,\r\n            this.center.x + this.height/2,\r\n            this.center.y + this.height/2\r\n        );\r\n\r\n    }\r\n};\r\n\r\nfunction parseEdges(edgesXML) {\r\n    let edges = [];\r\n\r\n    for (let edge of Array.from(edgesXML)) {\r\n        let type = edge.getAttribute('type');\r\n\r\n        if (type === \"segment\") {\r\n            let ps = new Point(parseInt(edge.getAttribute('xs'),10), parseInt(edge.getAttribute('ys'),10));\r\n            let pe = new Point(parseInt(edge.getAttribute('xe'),10), parseInt(edge.getAttribute('ye'),10));\r\n\r\n            edges.push(new Segment(ps, pe));\r\n        }\r\n\r\n        if (type === \"curve\") {\r\n            let ps = new Point(parseInt(edge.getAttribute('xs'),10), parseInt(edge.getAttribute('ys'),10));\r\n            let pe = new Point(parseInt(edge.getAttribute('xe'),10), parseInt(edge.getAttribute('ye'),10));\r\n            let pc = new Point(parseInt(edge.getAttribute('xc'),10), parseInt(edge.getAttribute('yc'),10));\r\n\r\n            let counterClockwise = edge.getAttribute('cw') === 'no' ? true : false;\r\n\r\n            let startAngle = vector(pc,ps).slope;\r\n            let endAngle = vector(pc, pe).slope;\r\n\r\n            if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n                endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n            }\r\n\r\n            let r = vector(pc, ps).length;\r\n\r\n            edges.push(new Arc(pc, r, startAngle, endAngle, counterClockwise));\r\n        }\r\n    }\r\n\r\n    return edges;\r\n}\r\n\r\nfunction parsePolygon(polygonsXML) {\r\n    let polygon = new Polygon();\r\n\r\n    // let nedges = parseInt(profile.getAttribute(\"n_edges\"), 10);\r\n\r\n    // Augment Flatten object with style\r\n    let color = polygonsXML.getAttribute(\"color\");\r\n    polygon.style = {\r\n        stroke: color || undefined,\r\n        fill: color || undefined,\r\n        alpha: 1.0\r\n    };\r\n\r\n    // Augment Flatten object with label\r\n    let label = polygonsXML.getAttribute(\"label\");\r\n    polygon.label = label;\r\n\r\n    // Add islands\r\n    let islands = polygonsXML.getElementsByTagName('island');\r\n    for (let island of Array.from(islands)) {\r\n        let edgesXML = island.getElementsByTagName('edge');\r\n        polygon.addFace(parseEdges(edgesXML));\r\n    }\r\n\r\n    // Add holes\r\n    let holes = polygonsXML.getElementsByTagName('hole');\r\n    for (let hole of Array.from(holes)) {\r\n        let edgesXML = hole.getElementsByTagName('edge');\r\n        polygon.addFace(parseEdges(edgesXML));\r\n    }\r\n\r\n    return polygon;\r\n}\r\n\r\nfunction parseSegment(segmentXML) {\r\n    let ps = new Point(parseInt(segmentXML.getAttribute('xs'),10), parseInt(segmentXML.getAttribute('ys'),10));\r\n    let pe = new Point(parseInt(segmentXML.getAttribute('xe'),10), parseInt(segmentXML.getAttribute('ye'),10));\r\n\r\n    let segment = new Segment(ps, pe);\r\n\r\n    // Augment Flatten object with label property\r\n    let label = segmentXML.getAttribute(\"label\");\r\n    segment.label = label;\r\n\r\n    return segment;\r\n}\r\n\r\nfunction parseCurve(curveXML) {\r\n    let ps = new Point(parseInt(curveXML.getAttribute('xs'),10), parseInt(curveXML.getAttribute('ys'),10));\r\n    let pe = new Point(parseInt(curveXML.getAttribute('xe'),10), parseInt(curveXML.getAttribute('ye'),10));\r\n    let pc = new Point(parseInt(curveXML.getAttribute('xc'),10), parseInt(curveXML.getAttribute('yc'),10));\r\n\r\n    let counterClockwise = curveXML.getAttribute('cw') === 'no' ? true : false;\r\n\r\n    let startAngle = vector(pc,ps).slope;\r\n    let endAngle = vector(pc, pe).slope;\r\n\r\n    if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n        endAngle = counterClockwise ? endAngle + 2*Math.PI : endAngle - 2*Math.PI;\r\n    }\r\n\r\n    let r = vector(pc, ps).length;\r\n\r\n    let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n    // Augment Flatten object with label property\r\n    let label = curveXML.getAttribute(\"label\");\r\n    arc.label = label;\r\n\r\n    return arc;\r\n}\r\n\r\nfunction parsePoint(pointXML) {\r\n    let point = new Point(parseInt(pointXML.getAttribute('x'),10), parseInt(pointXML.getAttribute('y'),10));\r\n\r\n    // Augment Flatten object with label property\r\n    let label = pointXML.getAttribute(\"label\");\r\n    point.label = label;\r\n\r\n    return point;\r\n}\r\n\r\nfunction parseImage(imageXML) {\r\n    let img = new Flatten.Image();\r\n    img.center = new Point(parseInt(imageXML.getAttribute('xc'),10), parseInt(imageXML.getAttribute('yc'),10));\r\n    img.width = parseInt(imageXML.getAttribute('width'),10);\r\n    img.height = parseInt(imageXML.getAttribute('height'),10);\r\n    img.uri = imageXML.getAttribute('uri');\r\n    return img;\r\n}\r\n\r\nexport function parseXML(filename, str) {\r\n    let job = new Job();\r\n\r\n    job.filename = filename;\r\n\r\n    let parser = new DOMParser();\r\n    let xmlDoc = parser.parseFromString(str, \"text/xml\");\r\n\r\n    // Parse document title\r\n    let titles = xmlDoc.getElementsByTagName('title');\r\n    if (titles && titles.length > 0) {\r\n        job.title = titles[0].firstChild.nodeValue;          // take the first title if more than one\r\n    }\r\n\r\n    // Parse profiles and add polygons to the job\r\n    let profilesXML = xmlDoc.getElementsByTagName('profile');\r\n    for (let profileXML of Array.from(profilesXML)) {\r\n        let polygon = parsePolygon(profileXML);\r\n        job.profiles.push(polygon);\r\n    }\r\n\r\n    // Parse materials and add polygons to the job\r\n    let materialXML = xmlDoc.getElementsByTagName('material');\r\n    for (let shapeXML of Array.from(materialXML)) {\r\n        let polygon = parsePolygon(shapeXML);\r\n        job.materials.push(polygon);\r\n    }\r\n\r\n    // Parse segments\r\n    let segmentsXML = xmlDoc.getElementsByTagName('segment');\r\n    for (let segmentXML of Array.from(segmentsXML)) {\r\n        let segment = parseSegment(segmentXML);\r\n        job.shapes.push(segment);\r\n    }\r\n\r\n    // Parse segments\r\n    let curvesXML = xmlDoc.getElementsByTagName('curve');\r\n    for (let curveXML of Array.from(curvesXML)) {\r\n        let curve = parseCurve(curveXML);\r\n        job.shapes.push(curve);\r\n    }\r\n\r\n    // Parse points\r\n    let pointsXML = xmlDoc.getElementsByTagName('point');\r\n    for (let pointXML of Array.from(pointsXML)) {\r\n        let point = parsePoint(pointXML);\r\n        job.shapes.push(point);\r\n    }\r\n\r\n    // Parse images\r\n    let imagesXML = xmlDoc.getElementsByTagName('picture');\r\n    for (let imageXML of Array.from(imagesXML)) {\r\n        let image = parseImage(imageXML);\r\n        job.shapes.push(image);\r\n    }\r\n\r\n    return job;\r\n}\r\n","import { Job } from '../models/job';\r\nimport {Point, Segment, Arc, Polygon, Utils, vector} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\n\r\nconst inch2pixels = 10160000;\r\nconst mils2pixels = 10160;\r\nfunction InchToPixels(str) {\r\n    return Math.round(Number(str)*inch2pixels,0);\r\n}\r\nfunction MilsToPixels(str) {\r\n    return Math.round(Number(str)*mils2pixels,0);\r\n}\r\n\r\nfunction parsePolygon(lines, start) {\r\n    let shapes = [];\r\n    let i = start;\r\n    let line = lines[i];\r\n    let terms = line.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe;\r\n    let pc;\r\n    let end_of_face = false;\r\n    while(true) {\r\n        line = lines[i];\r\n        terms = line.split(' ');\r\n        switch (terms[0]) {\r\n            case 'OS':\r\n                pe = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n                shapes.push( new Segment(ps, pe));\r\n\r\n                ps = pe.clone();\r\n                break;\r\n            case 'OC':\r\n                pe = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n                pc = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n\r\n                let cwStr = terms[5];\r\n                let counterClockwise = cwStr === 'Y' ? Flatten.CW : Flatten.CCW; /* sic ! */\r\n\r\n                let startAngle = vector(pc,ps).slope;\r\n                let endAngle = vector(pc, pe).slope;\r\n                if (Utils.EQ(startAngle, endAngle)) {\r\n                    endAngle += 2*Math.PI;\r\n                    counterClockwise = true;\r\n                }\r\n                let r = vector(pc, ps).length;\r\n\r\n                shapes.push(new Arc(pc, r, startAngle, endAngle, counterClockwise));\r\n\r\n                ps = pe.clone();\r\n                break;\r\n            case 'OE':\r\n                end_of_face = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (end_of_face) {\r\n            break;\r\n        }\r\n\r\n        i++;\r\n    }\r\n    return shapes;\r\n}\r\n\r\nfunction parseLine(str, apertures) {\r\n    let terms = str.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n    let segment = new Segment(ps, pe);\r\n    let ap_key = Number(terms[5]);\r\n    let ap_value = apertures[ap_key];\r\n    segment.aperture = ap_value;     // augmentation\r\n    return segment;\r\n}\r\n\r\nfunction parseArc(str, apertures) {\r\n    let terms = str.split(' ');\r\n    let ps = new Point( InchToPixels(terms[1]), InchToPixels(terms[2]) );\r\n    let pe = new Point( InchToPixels(terms[3]), InchToPixels(terms[4]) );\r\n    let pc = new Point( InchToPixels(terms[5]), InchToPixels(terms[6]) );\r\n\r\n    let cwStr = terms[10];\r\n    let counterClockwise = cwStr === 'Y' ? Flatten.CW : Flatten.CCW; /* sic ! */\r\n\r\n    let startAngle = vector(pc,ps).slope;\r\n    let endAngle = vector(pc, pe).slope;\r\n    if (Flatten.Utils.EQ(startAngle, endAngle)) {\r\n        endAngle += 2*Math.PI;\r\n        counterClockwise = true;\r\n    }\r\n    let r = vector(pc, ps).length;\r\n\r\n    let arc = new Arc(pc, r, startAngle, endAngle, counterClockwise);\r\n\r\n    let ap_key = Number(terms[7]);\r\n    let ap_value = apertures[ap_key];\r\n    arc.aperture = ap_value;     // augmentation\r\n\r\n    return arc;\r\n}\r\n\r\nexport function parseODB(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n    let polygon;\r\n\r\n    let apertures = [];\r\n\r\n    for (let i=0; i < arrayOfLines.length; i++) {\r\n        let line = arrayOfLines[i];\r\n        let terms = line.split(' ');\r\n\r\n        if (terms[0].substr(0,1) === '$') {\r\n            let ap_key = Number(terms[0].substr(1));\r\n            let ap_value = MilsToPixels(terms[1].substr(1));\r\n            apertures[ap_key] = ap_value;\r\n            continue;\r\n        }\r\n\r\n        switch (terms[0]) {\r\n            case 'S':                  // surface started\r\n                polygon = new Polygon();\r\n                let termArr = line.split(' ');\r\n                let polarity = termArr[1];      // consider later\r\n                polygon.polarity = polarity;\r\n                break;\r\n            case 'OB':                  // polygon started\r\n                let start = i;\r\n                let shapes = parsePolygon(arrayOfLines, start);\r\n                polygon.addFace(shapes);\r\n                i = start + shapes.length + 1;\r\n                break;\r\n            case 'SE':     // surface ended\r\n                job.shapes.push(polygon);\r\n                break;\r\n            case 'L':                  // line\r\n                let odbLine = parseLine(line, apertures);\r\n                job.shapes.push(odbLine);\r\n                break;\r\n            case 'A':                  // Arc\r\n                let odbArc = parseArc(line, apertures);\r\n                job.shapes.push(odbArc);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return job;\r\n}","import {Point,Box} from '@flatten-js/core';\r\n\r\nconst pgmResolution = 25.500025;\r\nconst microns2pixels = 400;\r\n// const inch2pixels = 10160;\r\n// const offsetX = 12.322830;\r\n// const offsetY = 8.326776;\r\nconst sizeX = 3.0303;\r\n\r\nfunction toPixels(str) {\r\n    let num = Number(str);\r\n    return Math.round(num*pgmResolution*microns2pixels,0);\r\n}\r\n\r\nexport function parseImage(file) {\r\n    let image = {};          // TODO: to be Flatten.Image\r\n\r\n    let terms = file.name.split('_');\r\n    let yStr = terms[0].substr(1);\r\n    let xStr = terms[1] ? terms[1].substr(1) : undefined;\r\n\r\n    let x = isNaN(xStr) ? 0 : toPixels(xStr) + 90000;\r\n    let y = isNaN(yStr) ? 0 : toPixels(yStr) - 40000;\r\n\r\n    image.center = new Point(x,y);\r\n    image.width = sizeX*microns2pixels*1000;    // 2 mm\r\n    image.box = new Box(\r\n        image.center.x - image.width/2,\r\n        image.center.y - image.width/2,\r\n        image.center.x + image.width/2,\r\n        image.center.y + image.width/2,\r\n    );\r\n\r\n    return image;\r\n}","import { Job } from '../models/job';\r\nimport {point} from '@flatten-js/core';\r\n\r\nconst micron2pixels = 400;\r\nfunction micronToPixels(str) {\r\n    return Math.round(Number(str)*micron2pixels,0);\r\n}\r\n\r\nexport function parseCSV(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let arrayOfLines = str.match(/[^\\r\\n]+/g);\r\n\r\n    for (let i = 0; i < arrayOfLines.length; i++) {\r\n        let line = arrayOfLines[i];\r\n        let terms = line.split(',');\r\n\r\n        let px = micronToPixels(terms[0]);\r\n        let py = micronToPixels(terms[1]);\r\n        let nx = Number(terms[2]);\r\n        let ny = Number(terms[3]);\r\n        let shape = point(px,py);\r\n        shape.nx = nx;\r\n        shape.ny = ny;\r\n        job.shapes.push(shape)\r\n    }\r\n\r\n    return job\r\n}","// import { Job } from '../models/job';\r\nimport Flatten from '@flatten-js/core';\r\n\r\n// import Model from '../models/model';\r\nimport {Job} from \"../models/job\";\r\n\r\nFlatten.Image = class Image {\r\n    constructor() {\r\n        this.uri = \"\";\r\n        /**\r\n         * Center in world coordinates\r\n         * @type {Flatten.Point}\r\n         */\r\n        this.center = new Flatten.Point();\r\n        /**\r\n         * Width in world units (inch/mm)\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * Height in world units (inch/mm)\r\n         */\r\n        this.height = 0;\r\n    }\r\n    get box() {\r\n        return new Flatten.Box(\r\n            this.center.x - this.width/2,\r\n            this.center.y - this.height/2,\r\n            this.center.x + this.height/2,\r\n            this.center.y + this.height/2\r\n        );\r\n\r\n    }\r\n};\r\n\r\n// export function parseJSON(shapes) {\r\n//     let models = [];\r\n//     let geom;\r\n//     let model;\r\n//     for (let shape of JSON.parse(shapes)) {\r\n//         if (shape.geom instanceof Array) {      // TODO: add \"name\" to polygon stringified\r\n//             geom = new Flatten.Polygon();\r\n//             for (let faceArray of shape.geom) {\r\n//                 geom.addFace(faceArray);\r\n//             }\r\n//         }\r\n//         else if (shape.geom.uri) {\r\n//             geom = new Flatten.Image();\r\n//             geom.uri = shape.geom.uri;\r\n//             geom.center = shape.geom.center;\r\n//             geom.width = shape.geom.width;\r\n//             geom.height = shape.geom.height;\r\n//         }\r\n//         else {\r\n//             geom = Flatten[shape.geom.name](shape.geom);\r\n//         }\r\n//         model = new Model(geom, shape.style, shape.label);\r\n//         models.push(model);\r\n//     }\r\n//\r\n//     return models;\r\n// }\r\n\r\nexport function parseJSON(filename, str) {\r\n    let job = new Job();\r\n\r\n    job.filename = filename;\r\n\r\n    let jsonArray = JSON.parse(str);\r\n\r\n    let polygon = new Flatten.Polygon();\r\n    for (let faceArray of jsonArray) {\r\n        polygon.addFace(faceArray);\r\n    }\r\n\r\n    job.shapes.push(polygon);\r\n\r\n    return job;\r\n}\r\n","import * as ActionTypes from '../store/actionTypes';\r\nimport Layers from '../models/layers';\r\n// import { Shape } from '../models/shape';\r\nimport Model from \"../models/model\";\r\nimport { parseXML } from '../dataParsers/parserXML';\r\nimport { parseODB } from \"../dataParsers/parserODB\";\r\nimport { parseImage } from \"../dataParsers/parsePGM\";\r\nimport { parseCSV } from \"../dataParsers/parseCSV\";\r\nimport { parseTXT } from \"../dataParsers/parseTXT\";\r\nimport { parseJSON} from \"../dataParsers/parseJSON\";\r\n\r\nconst readAsText = (reader, file, stage, layers, dispatch, files) => {\r\n\r\n    // Closure to capture file information and parameters\r\n    reader.onload = (function(theFile, stage, layers, dispatch, files) {\r\n        return (event) => {\r\n            let string = event.target.result;\r\n\r\n            let namesplitted = theFile.name.split('.');\r\n            let extension = namesplitted[namesplitted.length-1];\r\n            let job;\r\n            if (extension === 'xml') {\r\n                job = parseXML(theFile.name, string);\r\n            }\r\n            else if (extension === 'csv') {\r\n                job = parseCSV(theFile.name, string);\r\n            }\r\n            else if (extension === 'txt') {\r\n                job = parseTXT(theFile.name, string);\r\n            }\r\n            else if (extension === 'json') {\r\n                job = parseJSON(theFile.name, string);\r\n            }\r\n            else {\r\n                job = parseODB(theFile.name, string);\r\n            }\r\n            let layer = Layers.newLayer(stage, layers);\r\n            if (theFile.name !== \"\") {\r\n                layer.name = theFile.name;\r\n            }\r\n            layer.title = job.title;\r\n\r\n            for (let polygon of job.profiles) {\r\n                if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n                    // let watch = undefined; //  parser.parseToWatchArray(string);\r\n                    // let shape = new Shape(polygon, stage, polygon.style, watch);\r\n                    let shape = new Model(polygon, undefined, polygon.label);\r\n\r\n                    layer.add(shape);\r\n                }\r\n            }\r\n\r\n            for (let polygon of job.materials) {\r\n                if (polygon.edges.size > 0 && polygon.faces.size > 0) {\r\n                    // let watch = undefined; //  parser.parseToWatchArray(string);\r\n                    // let shape = new Shape(polygon, stage, polygon.style, watch);\r\n                    let shape = new Model(polygon, undefined, polygon.label);\r\n\r\n                    layer.add(shape);\r\n                }\r\n            }\r\n\r\n            for (let shape of job.shapes) {\r\n                let model = new Model(shape, undefined, shape.label);\r\n                layer.add(model);\r\n            }\r\n\r\n            // layers.push(layer);\r\n\r\n            if (theFile === files[0]) {\r\n                Layers.setAffected(layers, layer);\r\n                layer.color = Layers.getNextColor(layers);\r\n                layer.displayed = true;\r\n                dispatch({\r\n                    type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                    stage: stage,\r\n                    shape: layer\r\n                });\r\n            }\r\n            dispatch({\r\n                type: ActionTypes.ADD_NEW_LAYER,\r\n                layer: layer\r\n            });\r\n\r\n            dispatch({\r\n                type: ActionTypes.ASYNC_OPERATION_ENDED\r\n            });\r\n        }\r\n    })(file, stage, layers, dispatch, files);\r\n\r\n    reader.readAsText(file);\r\n\r\n    dispatch({\r\n        type: ActionTypes.ASYNC_OPERATION_STARTED\r\n    })\r\n\r\n};\r\n\r\nconst readAsImage = (reader, file, stage, layers, dispatch, files) => {\r\n    reader.addEventListener(\"load\", function () {\r\n        // let image = {};          // TODO: to be Flatten.Image\r\n        // image.uri = this.result;\r\n        // image.center = new Flatten.Point(0,0);\r\n        // image.width = 2*400000;    // 2 micron\r\n        // image.box = new Flatten.Box(\r\n        //     image.center.x - image.width/2,\r\n        //     image.center.y - image.width/2,\r\n        //     image.center.x + image.width/2,\r\n        //     image.center.y + image.width/2,\r\n        // );\r\n\r\n        let image = parseImage(file);\r\n        image.uri = this.result;\r\n\r\n        let model = new Model(image);\r\n\r\n        let layer = Layers.newLayer(stage, layers);\r\n        if (file.name !== \"\") {\r\n            layer.name = file.name;\r\n        }\r\n\r\n        layer.add(model);\r\n\r\n        // layers.push(layer);\r\n\r\n        if (file === files[0]) {\r\n            Layers.setAffected(layers, layer);\r\n            layer.color = Layers.getNextColor(layers);\r\n            layer.displayed = true;\r\n            dispatch({\r\n                type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                stage: stage,\r\n                shape: layer\r\n            });\r\n        }\r\n\r\n        dispatch({\r\n            type: ActionTypes.ADD_NEW_LAYER,\r\n            layer: layer\r\n        });\r\n\r\n        dispatch({\r\n            type: ActionTypes.ASYNC_OPERATION_ENDED\r\n        });\r\n\r\n    }, false);\r\n\r\n    reader.readAsDataURL(file);\r\n};\r\n\r\nconst readFile = (file, stage, layers, dispatch, files) => {\r\n    if (file.type !== \"\" &&\r\n        !(file.type.match('text.*') || file.type.match('application.*') ||\r\n        file.type.match('image.*')) ) return;   // validate type is text\r\n\r\n    let reader = new FileReader();\r\n\r\n    if (file.type.match('text.*') || file.type.match('application.*') || file.name.match('features*')) {\r\n        readAsText(reader, file, stage, layers, dispatch, files);\r\n    }\r\n\r\n    else if (file.type.match('image.*')) {\r\n        readAsImage(reader, file, stage, layers, dispatch, files);\r\n    }\r\n\r\n};\r\n\r\nconst readFiles = ({ dispatch, getState }) => next => action => {\r\n\r\n    if (action.type !== ActionTypes.FILENAME_LIST_SELECTED) {\r\n        return next(action);\r\n    }\r\n\r\n    let stage = action.stage;\r\n    let layers = action.layers;\r\n\r\n    // Load and parse files\r\n    // in MS Edge FilesList is not array. It is indexable but not iterable\r\n    // for (let i=0; i < action.files.length; i++) {\r\n    //     readFile(action.files[i], stage, layers, dispatch, action.files);\r\n    // }\r\n    for (let file of Array.from(action.files)) {\r\n        readFile(file, stage, layers, dispatch, action.files);\r\n    }\r\n};\r\n\r\nexport default readFiles;\r\n\r\n","import { Job } from '../models/job';\r\nimport {Parser} from './parser';\r\n\r\nexport function parseTXT(filename, str) {\r\n    let job = new Job();\r\n    job.filename = filename;\r\n\r\n    let parser = new Parser();\r\n\r\n    let shapesArray = parser.parse(str);\r\n\r\n    if (shapesArray.length > 0) {\r\n        for (let shape of shapesArray) {\r\n            job.shapes.push(shape)\r\n        }\r\n    }\r\n\r\n    return job\r\n}","import * as ActionTypes from \"../store/actionTypes\";\r\nimport Layers from \"../models/layers\";\r\n\r\nconst pasteData = ({ dispatch, getState }) => next => action => {\r\n\r\n    if (action.type !== ActionTypes.DATA_FROM_BUFFER_PASTED) {\r\n        return next(action);\r\n    }\r\n\r\n    let state = getState();\r\n    let stage = state.app.stage;\r\n    let layers = state.layers;\r\n    let parser = state.app.parser;\r\n\r\n    let layer = undefined;\r\n    if (state.app.importDataToNewLayer) {   // import data to new layer\r\n        layer = Layers.newLayer(stage, layers);\r\n        layers.push(layer);\r\n    }\r\n    else {                                  // import data to affected layer\r\n        layer = layers.find((lay) => lay.affected);\r\n        if (!layer) {                       // if no layer affected, add new\r\n            layer = Layers.newLayer(stage, layers);\r\n            layers.push(layer);\r\n        }\r\n    }\r\n\r\n    // Paste data from ClipBoard\r\n    for (let item of action.data.items) {\r\n        item.getAsString((string) => {\r\n            let shapesArray = parser.parse(string);\r\n\r\n            // TODO: add something like poly.valid()\r\n\r\n            if (shapesArray.length > 0) {\r\n                for (let shape of shapesArray) {\r\n                    layer.add(shape);\r\n                }\r\n            }\r\n\r\n            if (layer.shapes.length > 0) {\r\n                dispatch({\r\n                    type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                    shape: layer,\r\n                    stage: stage\r\n                });\r\n                dispatch({\r\n                    type: ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED,\r\n                    layer: layer\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n        break;\r\n    }\r\n\r\n};\r\n\r\nexport default pasteData;\r\n","import * as ActionTypes from '../store/actionTypes';\r\n\r\nconst stageController = ({getState, dispatch}) => next => action => {\r\n\r\n    const mouse = getState().mouse;\r\n    let stage = action.stage;\r\n\r\n\r\n    if (stage) {\r\n        switch (action.type) {\r\n            case ActionTypes.STAGE_RESIZED:\r\n                stage.resize();\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_DOWN_ON_STAGE:\r\n                stage.panByMouseStart();\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_MOVED_ON_STAGE:\r\n                if (action.dx !== undefined && action.dy !== undefined) {\r\n                    stage.panByMouseMove(action.dx, action.dy);\r\n                }\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_UP_ON_STAGE:\r\n                stage.panByMouseStop();\r\n                break;\r\n\r\n            case ActionTypes.PAN_AND_ZOOM_TO_SHAPE:\r\n                let center = action.shape.center;\r\n                let box = action.shape.box;\r\n                if (isNaN(center.x) || isNaN(center.y)) return;\r\n                stage.panToCoordinate(center.x, center.y);\r\n                stage.zoomToLimits(box.xmax - box.xmin, box.ymax - box.ymin);\r\n                break;\r\n\r\n            case ActionTypes.MOUSE_WHEEL_MOVE_ON_STAGE:\r\n                let bIn = action.delta > 0;\r\n                // stage.zoomByMouse(action.x, action.y, bIn, 1 + Math.abs(action.delta)/100.);\r\n                stage.zoomByMouse(action.x, action.y, bIn, 1.2);\r\n                break;\r\n\r\n            case ActionTypes.CLEAR_ALL:\r\n                stage.removeAllChildren();\r\n                stage.removeAllListeners();\r\n                break;\r\n\r\n            case ActionTypes.PINCH_DOWN_ON_STAGE:\r\n                stage.zoomByPinchStart(action.x1, action.y1);\r\n                break;\r\n\r\n            case ActionTypes.PINCH_MOVED_ON_STAGE:\r\n                if (mouse.touchPoints) {\r\n                    let dx = mouse.touchPoints[0].x - mouse.touchPoints[1].x;\r\n                    let dy = mouse.touchPoints[0].y - mouse.touchPoints[1].y;\r\n                    let distStart = Math.sqrt(dx*dx + dy*dy);\r\n\r\n                    dx = action.x2 - action.x1;\r\n                    dy = action.y2 - action.y1;\r\n                    let distCurrent = Math.sqrt(dx*dx + dy*dy);\r\n                    let ratio = distCurrent / distStart;\r\n                    stage.zoomByPinchMove(action.x1, action.y1, ratio);\r\n                }\r\n                break;\r\n\r\n            case ActionTypes.PINCH_UP_ON_STAGE:\r\n                stage.zoomByPinchStop();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(action);\r\n};\r\n\r\nexport default stageController;","import * as ActionTypes from '../store/actionTypes';\r\nimport Layers from \"../models/layers\";\r\nimport {point, arc, segment} from '@flatten-js/core';\r\nimport Flatten from '@flatten-js/core';\r\nlet Algorithmia = window.Algorithmia;\r\n\r\n// function zoomHome(shape, stage) {\r\n//     let box = shape.box;\r\n//     let x = (box.xmin + box.xmax)/2;\r\n//     let y = (box.ymin + box.ymax)/2;\r\n//     stage.panToCoordinate(x, y);\r\n//     stage.zoomToLimits(box.xmax - box.xmin, box.ymax - box.ymin);\r\n// }\r\n\r\nconst skeleton_recognition = ({dispatch, getState}) => next => action => {\r\n\r\n    if (action.type === ActionTypes.SKELETON_RECOGNITION_BUTTON_PRESSED) {\r\n\r\n        let state = getState();\r\n        let stage = state.app.stage;\r\n\r\n        let layers = state.layers;\r\n        let currentLayer = Layers.getAffected(layers);\r\n        let shapes = currentLayer.shapes;\r\n        let input = shapes.map(shape =>\r\n            [shape.geom.x / 400., shape.geom.y / 400., shape.geom.nx, shape.geom.ny]\r\n        );\r\n\r\n        let client = Algorithmia.client(\"simby4RUwqQmtMDaHAPj5wsQwlD1\");\r\n        let algorithm = \"alexbol99/SeketonRecognition\";\r\n\r\n        client.algo(algorithm)\r\n            .pipe(input)\r\n            .then(function (output) {\r\n                if (output.error) return console.error(\"error: \" + output.error);\r\n\r\n                let newLayer = Layers.newLayer(stage, layers);\r\n                newLayer.name = \"recognized\";\r\n                newLayer.title = \"recognized\";\r\n                // newLayer.displayed = true;\r\n\r\n                for (let row of output.result) {\r\n                    let shape;\r\n                    if (row[0] instanceof Array && row[0].length === 2) {\r\n                        let pc = point(row[0][0] * 400, row[0][1] * 400);\r\n                        let r = row[1] * 400;\r\n                        /********center radius startAng endAng **********/\r\n                        shape = arc(pc, r, row[2], row[3], Flatten.CCW)\r\n                    }\r\n                    else {\r\n                        shape = segment(\r\n                            point(row[0] * 400, row[1] * 400),\r\n                            point(row[2] * 400, row[3] * 400))\r\n                    }\r\n                    if (row[4]) {\r\n                        shape.label = row[4]\r\n                    }\r\n                    newLayer.add(shape)\r\n                }\r\n                layers.push(newLayer);\r\n\r\n                dispatch({\r\n                    type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n                    stage: stage,\r\n                    shape: currentLayer\r\n                })\r\n            });\r\n    }\r\n\r\n    return next(action);\r\n};\r\n\r\n\r\nexport default skeleton_recognition;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://debug-viewer.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const resizeStage = () => {\r\n    return {\r\n        type: ActionTypes.STAGE_RESIZED\r\n    }\r\n};\r\n\r\nexport const destroyStage = () => {\r\n    return {\r\n        type: ActionTypes.STAGE_UNMOUNTED\r\n    }\r\n};\r\n\r\nexport const toggleUnits = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_UNITS_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleWidthMode = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_WIDTH_MODE_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleDisplayVertices = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_VERTICES_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleDisplayLabels = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_LABELS_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleAboutPopup = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_ABOUT_POPUP_CLICKED\r\n    }\r\n};\r\n\r\n// export const closeAboutPopup = () => {\r\n//     return {\r\n//         type: ActionTypes.CLOSE_ABOUT_POPUP_BUTTON_PRESSED\r\n//     }\r\n// };\r\n\r\nexport const toggleMeasureBetweenPoints = () => {\r\n    return {\r\n        type: ActionTypes.MEASURE_POINTS_BUTTON_PRESSED\r\n    }\r\n};\r\n\r\nexport const toggleMeasureBetweenShapes = () => {\r\n    return {\r\n        type: ActionTypes.MEASURE_SHAPES_BUTTON_PRESSED\r\n    }\r\n};\r\n\r\nexport const applySkeletonRecognition = () => {\r\n    return {\r\n        type: ActionTypes.SKELETON_RECOGNITION_BUTTON_PRESSED\r\n    }\r\n};\r\n\r\nexport const handleFileSelect = (files, stage, layers) => {\r\n    return {\r\n        type: ActionTypes.FILENAME_LIST_SELECTED,\r\n        files,\r\n        stage,\r\n        layers\r\n    }\r\n};\r\n\r\nexport const setHomeView = (stage, shape) => {\r\n    return {\r\n        type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n        stage,\r\n        shape\r\n    }\r\n};\r\n\r\nexport const togglePanByDrag = () => {\r\n    return {\r\n        type: ActionTypes.PAN_BY_DRAG_BUTTON_CLICKED\r\n    }\r\n};\r\n\r\nexport const handleMouseRollOverShape = (shape) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_ROLL_OVER_SHAPE,\r\n        shape\r\n    }\r\n};\r\n\r\nexport const handleMouseRollOutShape = () => {\r\n    return {\r\n        type: ActionTypes.MOUSE_ROLL_OUT_SHAPE\r\n    }\r\n};\r\n\r\nexport const handleClickOnShape = (shape, layer) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_CLICKED_ON_SHAPE,\r\n        shape,\r\n        layer\r\n    }\r\n};\r\n\r\nexport const asyncOperationStarted = () => {\r\n    return {\r\n        type: ActionTypes.ASYNC_OPERATION_STARTED\r\n    }\r\n};\r\n\r\nexport const asyncOperationEnded = () => {\r\n    return {\r\n        type: ActionTypes.ASYNC_OPERATION_ENDED\r\n    }\r\n};\r\n\r\nexport const openDocumentOnCloud = () => {\r\n    return {\r\n        type: ActionTypes.MANAGE_CLOUD_STORAGE_BUTTON_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleLayerList = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_SHOW_LAYER_LIST_CLICKED\r\n    }\r\n};\r\n\r\nexport const toggleDownloadPopup = () => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DOWNLOAD_POPUP_CLICKED\r\n    }\r\n};\r\n\r\n\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const addEmptyLayer = (stage) => {\r\n    return {\r\n        type: ActionTypes.ADD_LAYER_BUTTON_PRESSED,\r\n        stage: stage\r\n    }\r\n};\r\n\r\nexport const addNewLayer = (layer) => {\r\n    return {\r\n        type: ActionTypes.ADD_NEW_LAYER,\r\n        layer\r\n    }\r\n};\r\n\r\nexport const deleteAffectedLayer = () => {\r\n    return {\r\n        type: ActionTypes.DELETE_LAYER_BUTTON_PRESSED\r\n    };\r\n};\r\n\r\nexport const sortLayers = () => {\r\n    return {\r\n        type: ActionTypes.SORT_LAYERS_BUTTON_PRESSED\r\n    };\r\n};\r\n\r\nexport const toggleDisplayLayer = (layer) => {\r\n    return {\r\n        type: ActionTypes.TOGGLE_DISPLAY_LAYER_PRESSED,\r\n        layer\r\n    }\r\n};\r\n\r\nexport const toggleAffectedLayer = (event, layer) => {\r\n    event.stopPropagation();\r\n    return {\r\n        type: ActionTypes.TOGGLE_AFFECTED_LAYER_PRESSED,\r\n        layer: layer\r\n    };\r\n};\r\n\r\nexport const updateLayer = (newLayer) => {\r\n    return {\r\n        type: ActionTypes.SUBMIT_LAYER_EDIT_FORM_PRESSED,\r\n        newLayer: newLayer\r\n    };\r\n};\r\n\r\nexport const closeEditLayerForm = () => {\r\n    return {\r\n        type: ActionTypes.ESCAPE_LAYER_EDIT_FORM_PRESSED\r\n    };\r\n};\r\n\r\nexport const openAffectedLayerEditForm = () => {\r\n    return {\r\n        type: ActionTypes.OPEN_LAYER_EDIT_FORM_PRESSED,\r\n    }\r\n};\r\n\r\nexport const setAffectedNextLayer = () => {\r\n    return {\r\n        type: ActionTypes.LAYERS_LIST_ARROW_DOWN_PRESSED\r\n    }\r\n};\r\n\r\nexport const setAffectedPrevLayer = () => {\r\n    return {\r\n        type: ActionTypes.LAYERS_LIST_ARROW_UP_PRESSED\r\n    }\r\n};\r\n\r\nexport const deleteAllLayers = () => {\r\n    return {\r\n        type: ActionTypes.CLEAR_ALL_BUTTON_CLICKED,\r\n    }\r\n}\r\n\r\n\r\n\r\n","import * as ActionTypes from \"../actionTypes\";\r\nimport axios from \"../../axios-database\";\r\nimport * as appActions from \"../actions/appActions\";\r\nimport * as layerActions from '../../store/actions/layersActions';\r\nimport Layer from \"../../models/layer\";\r\nimport {parseJSON} from \"../../dataParsers/parseJSON\";\r\nimport Layers from \"../../models/layers\";\r\n\r\nconst defaultName = \"document\";\r\n\r\nexport const getNewName = (documents) => {\r\n    let name = defaultName;\r\n    let inc = 1;\r\n    let comparator = (document) => document.name === name;\r\n    while (Object.values(documents).find(comparator)) {\r\n        name = defaultName + inc;\r\n        inc++;\r\n    }\r\n    return name;\r\n};\r\n\r\nexport const registerDocumentAddedToDatabase = (id, lastUpdated) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_ADD_DOCUMENT_TO_DATABASE_SUCCEED,\r\n        id: id,\r\n        lastUpdated: lastUpdated\r\n    }\r\n};\r\n\r\nexport const updateDocumentTimeStamp = (lastUpdated) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_UPDATE_DOCUMENT_IN_DATABASE_SUCCEED,\r\n        lastUpdated: lastUpdated\r\n    }\r\n};\r\n\r\nexport const updateDocumentName = (name) => {\r\n    return {\r\n        type: ActionTypes.DOCUMENT_NAME_UPDATED,\r\n        name\r\n    }\r\n};\r\n\r\nexport const clearCurrentDocument = () => {\r\n    return {\r\n        type: ActionTypes.CLEAR_ALL_BUTTON_CLICKED,\r\n    }\r\n};\r\n\r\nexport const updateCurrentDocument = (document) => {\r\n    return {\r\n        type: ActionTypes.DOCUMENT_SELECTED_FROM_LIST,\r\n        document\r\n    }\r\n};\r\n\r\nexport const requestFetchDocumentFromDatabaseSucceed = (id, name, owner, lastUpdated) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_FETCH_DOCUMENT_FROM_DATABASE_SUCCEED,\r\n        id,\r\n        name,\r\n        owner,\r\n        lastUpdated\r\n    }\r\n};\r\n\r\nexport const deleteDocumentFromDatabaseSucceed = (id) => {\r\n    return {\r\n        type: ActionTypes.DELETE_DOCUMENT_FROM_DATABASE_SUCCEED,\r\n        id\r\n    }\r\n};\r\n\r\nexport const requestFetchDocumentsFromDatabaseSucceed = (documentsList) => {\r\n    return {\r\n        type: ActionTypes.REQUEST_FETCH_DOCUMENTS_FROM_DATABASE_SUCCEED,\r\n        documentsList\r\n    }\r\n};\r\n\r\nexport const fetchDocumentsFromDatabase = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        const url = '/documents.json' + queryParams;\r\n        axios.get(url)\r\n            .then(response => {\r\n                dispatch(requestFetchDocumentsFromDatabaseSucceed(response.data));\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const deleteDocumentFromDatabase = (id) => {\r\n    return dispatch => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n        const url = '/documents/' + id + '.json';\r\n        axios.delete(url)\r\n            .then (response => {\r\n                // query geom by \"id\"\r\n                const queryParams = '?orderBy=\"id\"&equalTo=\"' + id + '\"';\r\n                const url = '/geom.json' + queryParams;\r\n                return axios.get(url)\r\n            })\r\n            .then (response => {\r\n                const geomId = Object.keys(response.data)[0];\r\n                return axios.delete(`/geom/${geomId}.json`)\r\n            })\r\n            .then(response => {\r\n                dispatch(deleteDocumentFromDatabaseSucceed(id));\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const fetchDocumentFromDatabase = (stage, id) => {\r\n    return dispatch => {\r\n        dispatch(layerActions.deleteAllLayers());\r\n        dispatch(appActions.asyncOperationStarted());\r\n        let name = \"\";\r\n        let lastUpdated = undefined;\r\n        let owner = \"Alex Bol\";\r\n        let firstLayer = undefined;\r\n\r\n        const docUrl = '/documents/' + id + '.json';\r\n        const queryParams = '?orderBy=\"id\"&equalTo=\"' + id + '\"';\r\n        const geomUrl = '/geom.json' + queryParams;\r\n        Promise.all([axios.get(docUrl),axios.get(geomUrl)])\r\n            .then( responses => {\r\n                name = responses[0].data.name;\r\n                lastUpdated = responses[0].data.lastUpdated;\r\n\r\n                for (let layerData of Object.values(responses[1].data)[0].layers) {\r\n                    let layer = new Layer();\r\n                    layer.shapes = parseJSON(layerData.shapes);\r\n                    layer.name = layerData.name;\r\n\r\n                    if (!firstLayer) firstLayer = layer;\r\n                    dispatch(layerActions.addNewLayer(layer));\r\n                    dispatch(layerActions.toggleDisplayLayer(layer));\r\n                }\r\n                dispatch(requestFetchDocumentFromDatabaseSucceed(id, name, owner, lastUpdated));\r\n                dispatch(appActions.setHomeView(stage, firstLayer));\r\n                // dispatch(layerActions.toggleDisplayLayer(firstLayer));\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const addDocumentToDatabase = (payload, layers, history) => {\r\n    return dispatch => {\r\n        let id = undefined;\r\n        dispatch(appActions.asyncOperationStarted());\r\n        axios.post('/documents.json', payload)\r\n            .then(response => {\r\n                id = response.data.name;\r\n                let layersJSON = Layers.toJSON(layers);\r\n                let geomPayload = {\r\n                    id: id,\r\n                    layers: layersJSON\r\n                };\r\n                return axios.post('/geom.json', geomPayload)\r\n            })\r\n            .then(response => {\r\n                dispatch(registerDocumentAddedToDatabase(id, Date.now()));\r\n                dispatch(appActions.asyncOperationEnded());\r\n\r\n                // update url\r\n                history.push('/documents/' + id);\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\nexport const updateDocumentInDatabase = (id, payload, layers) => {\r\n    return dispatch => {\r\n        dispatch(appActions.asyncOperationStarted());\r\n        // update documents header\r\n        axios.put(`/documents/${id}.json`, payload)\r\n            .then(response => {\r\n                dispatch(updateDocumentTimeStamp(Date.now()));\r\n                // dispatch(appActions.asyncOperationEnded());\r\n\r\n                // query geom by \"id\"\r\n                const queryParams = '?orderBy=\"id\"&equalTo=\"' + id + '\"';\r\n                const url = '/geom.json' + queryParams;\r\n                return axios.get(url)\r\n            })\r\n            .then( response => {\r\n                let layersJSON = Layers.toJSON(layers);\r\n                let geomPayload = {\r\n                    id: id,\r\n                    layers: layersJSON\r\n                };\r\n                let geomId = Object.keys(response.data)[0];  // response.data.name;\r\n                return axios.put(`/geom/${geomId}.json`, geomPayload)\r\n            })\r\n            .then( reponse => {\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n                dispatch(appActions.asyncOperationEnded());\r\n            })\r\n    }\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst button = (props) => {\r\n    let iconStyle;\r\n    switch (props.type) {\r\n        case \"trigger\":\r\n            iconStyle = classes.IconTrigger;\r\n            break;\r\n        case \"mode\":\r\n            iconStyle = props.active ? classes.IconModeActive : classes.IconModeNotActive;\r\n            break;\r\n        default:\r\n            iconStyle = classes.IconTrigger;\r\n            break;\r\n    }\r\n    // eslint-disable-next-line\r\n    let buttonStyle = props.mobileOnly ? classes[\"Button\",\"DrawerButton\"] : classes[\"Button\"];\r\n    return (\r\n        <button title={props.title} onClick={props.onClick} className={buttonStyle}>\r\n            <FontAwesome\r\n                name={props.iconName}\r\n                size='2x'\r\n                className={iconStyle}\r\n            />\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default button;","import React from 'react';\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport classes from \"./ButtonSeparator.module.css\";\r\n\r\nconst buttonSeparator = () => {\r\n    return (\r\n        <div className={classes.ButtonSeparator}>\r\n            <FontAwesome\r\n                name='ellipsis-v'\r\n                size='2x'\r\n                className={classes.IconSeparator}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default buttonSeparator;","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Separator from '../../../components/UI/ButtonSeparator/ButtonSeparator';\r\n\r\nimport classes from './ToolbarComponent.module.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\nclass ToolbarComponent extends Component {\r\n    openJobButtonClicked = () => this.refs.browseFiles.click();\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes[\"App-toolbar\"]}>\r\n                {/*<h4>Toolbar</h4>*/}\r\n                <Button type=\"trigger\" title=\"Upload files\" iconName='folder-open'\r\n                        onClick={this.openJobButtonClicked}\r\n                />\r\n\r\n                <input style={{fontSize: 16, marginTop: 5, marginBottom: 5, display: \"none\"}}\r\n                       type=\"file\" id=\"browseFiles\" ref=\"browseFiles\" name=\"files[]\" multiple\r\n                       onChange={this.props.onFileSelected}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Show/hide layers\" iconName='layer-group' onClick={this.props.onLayerListButtonClicked} />\r\n\r\n                    {/*<Button type=\"trigger\" title=\"Save document on cloud\" iconName='save'*/}\r\n                        {/*onClick={this.props.onSaveDocumentButtonClicked}*/}\r\n                {/*/>*/}\r\n\r\n                <Button type=\"trigger\" title=\"Delete all layers\" iconName='broom'\r\n                        onClick={this.props.onClearAllButtonClicked}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Download layers\" iconName='file-download'\r\n                        onClick={this.props.onShowDownloadPopupPressed}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"trigger\" title=\"Zoom and pan to home view\" iconName='home'\r\n                        onClick={this.props.onHomeButtonPressed}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"mode\" title=\"Pan by drag\" iconName='arrows-alt'\r\n                        active={!this.props.measurePointsActive}\r\n                        onClick={this.props.onPanByDragPressed}\r\n                />\r\n\r\n                <Button type=\"mode\" title=\"Measure distance between points\" iconName='drafting-compass'\r\n                        active={this.props.measurePointsActive}\r\n                        onClick={this.props.onMeasurePointsButtonPressed}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"trigger\" title=\"Measure distance between selected shapes\" iconName='ruler'\r\n                        onClick={this.props.onMeasureBetweenShapesButtonPressed}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Display solid or wire\" iconName='fill-drip'\r\n                        onClick={this.props.onToggleWidthModePressed}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Display vertices on/off\" iconName='draw-polygon'\r\n                        onClick={this.props.onToggleVerticesPressed}\r\n                />\r\n\r\n                <Button type=\"trigger\" title=\"Display labels on/off\" iconName='tag'\r\n                        onClick={this.props.onToggleLabelsPressed}\r\n                />\r\n\r\n                {this.props.showSkeletonRecognitionButton ? (\r\n                    <Button type=\"trigger\" title=\"Skeleton Recognition Demo\" iconName='tree'\r\n                            onClick={this.props.onSkeletonRecognitionButtonPressed}\r\n                    />\r\n                ) : null}\r\n\r\n                <Separator/>\r\n\r\n                <button className={classes[\"App-toolbar-units\"]}\r\n                        onClick={this.props.onUnitClicked}\r\n                >\r\n                    {this.props.units}\r\n                </button>\r\n\r\n                <Separator/>\r\n\r\n                <Button type=\"trigger\" title=\"About\" iconName='info'\r\n                        onClick={this.props.onShowAboutPopupPressed}\r\n                />\r\n\r\n                <Separator/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolbarComponent;\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\nimport {Box} from '@flatten-js/core';\r\nimport { Stage as CreatejsStage, Touch } from \"@createjs/easeljs\";\r\n\r\nclass Stage extends CreatejsStage {\r\n    constructor(canvas) {\r\n        super(canvas);\r\n\r\n        Touch.enable(this);\r\n        this.mouseMoveOutside = false;   // true;\r\n        // this.enableDOMEvents(false);\r\n        this.enableMouseOver(20);\r\n\r\n        if (this.canvas.clientWidth > 0 && this.canvas.clientHeight > 0) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n            // this.updateViewport(this.canvas.width, this.canvas.height);\r\n        }\r\n        this.origin = {x: this.canvas.width / 2, y: this.canvas.height / 2};\r\n        this.resolution = 0.00001;          // MM 2 Pixels when zoomFactor = 1;\r\n        this.zoomFactor = 1.0;\r\n\r\n        this.oldOrigin = {x: undefined, y: undefined};   // used by pan\r\n        // used by zoom by pinch\r\n        this.oldZoomFactor = undefined;\r\n        this.pinchAnchorX = undefined;\r\n        this.pinchAnchorY = undefined;\r\n        this.pinchStarted = false;\r\n    }\r\n\r\n    get box() {\r\n        let minX = this.C2W_X(0);\r\n        let minY = this.C2W_Y(this.canvas.height);\r\n        let maxX = this.C2W_X(this.canvas.width);\r\n        let maxY = this.C2W_Y(0);\r\n\r\n        return ( new Box(minX, minY, maxX, maxY) );\r\n    }\r\n\r\n    clone() {\r\n        let stage = new Stage(this.canvas);\r\n        return Object.assign(stage, this);\r\n    }\r\n\r\n    add(shape) {\r\n        this.addChild(shape);\r\n        return this;\r\n    }\r\n\r\n    scalingFactor() {\r\n        return this.resolution * this.zoomFactor;\r\n    }\r\n\r\n    C2W_Scalar(scalar) {\r\n        return (scalar / this.scalingFactor());\r\n    }\r\n\r\n    W2C_Scalar(scalar) {\r\n        return (this.scalingFactor() * scalar);\r\n    }\r\n\r\n    C2W_X(canvasX) {\r\n        return ((canvasX - this.origin.x) / this.scalingFactor());\r\n    }\r\n\r\n    C2W_Y(canvasY) {\r\n        return ((this.origin.y - canvasY) / this.scalingFactor());\r\n    }\r\n\r\n    W2C_X(worldX) {\r\n        return (this.scalingFactor() * worldX + this.origin.x);\r\n    }\r\n\r\n    W2C_Y(worldY) {\r\n        return (this.origin.y - this.scalingFactor() * worldY);\r\n    }\r\n\r\n    W2C(point) {\r\n        return {x: this.W2C_X(point.x), y: this.W2C_Y(point.y)}\r\n    }\r\n\r\n    panTo(newOrigin) {\r\n        this.origin = {x: newOrigin.x, y: newOrigin.y}\r\n    }\r\n\r\n    panBy(deltaX, deltaY) {\r\n        this.origin = {\r\n            x: this.origin.x + deltaX,\r\n            y: this.origin.y + deltaY\r\n        }\r\n    }\r\n\r\n    // zoom by 10% each time\r\n    zoomIn(ratio) {\r\n        let curRatio = ratio || 1.1;\r\n        this.zoomFactor = Math.min(10000000, curRatio * this.zoomFactor);\r\n    }\r\n\r\n    zoomOut(ratio) {\r\n        let curRatio = ratio || 1.1;\r\n        this.zoomFactor = Math.max(0.001, this.zoomFactor / curRatio);\r\n    }\r\n\r\n    // ZoomIn/Out + \"Focus follows mouse\"\r\n    zoom(focusX, focusY, bIn, ratio) {\r\n        let worldX = this.C2W_X(focusX);    // world coordinate of mouse focus before zoom\r\n        let worldY = this.C2W_Y(focusY);\r\n\r\n        bIn ? this.zoomIn(ratio) : this.zoomOut(ratio);\r\n\r\n        let newFocusX = this.W2C_X(worldX); // canvas coordinate after zoom\r\n        let newFocusY = this.W2C_Y(worldY);\r\n\r\n        this.panBy(focusX - newFocusX, focusY - newFocusY);\r\n\r\n        return [newFocusX, newFocusY];\r\n    }\r\n\r\n    zoomByMouse(focusX, focusY, bIn, ratio) {\r\n        this.zoom(focusX, focusY, bIn, ratio);\r\n    }\r\n\r\n    zoomToLimits(width, height) {\r\n        // prevent zero division in case of single point box\r\n        if (width === 0) width = 400000;\r\n        if (height === 0) height = 400000;\r\n        let resolution = Math.min(this.canvas.width / (1.1*width), this.canvas.height / (1.1*height));\r\n        let zoomFactor = resolution / this.resolution;\r\n        let ratio = zoomFactor / this.zoomFactor;\r\n        let bIn = true; //ratio > 1;\r\n\r\n        let focusX = this.canvas.width/2;\r\n        let focusY = this.canvas.height/2;\r\n        this.zoom(focusX, focusY, bIn, ratio);\r\n    }\r\n\r\n    resize() {\r\n        // this.origin.x = this.canvas.width / 2;\r\n        // this.origin.y = this.canvas.height / 2;\r\n        if (this.canvas.clientWidth > 0 && this.canvas.clientHeight > 0) {\r\n            this.canvas.width = this.canvas.clientWidth;\r\n            this.canvas.height = this.canvas.clientHeight;\r\n        }\r\n    }\r\n\r\n    // drawSomething() {\r\n    //     let shape = new Shape();\r\n    //     shape.graphics.beginFill('red').drawRect(0, 0, 20, 20);\r\n    //     this.addChild(shape);\r\n    //     this.update();\r\n    // }\r\n\r\n    panByMouseStart() {\r\n        this.oldOrigin.x = this.origin.x;\r\n        this.oldOrigin.y = this.origin.y;\r\n        this.zoomByPinchStop();\r\n    }\r\n\r\n    panByMouseMove(dx, dy) {\r\n        if (this.pinchStarted) return;\r\n        if (dx !== undefined && dy !== undefined &&\r\n            this.oldOrigin.x !== undefined && this.oldOrigin.y !== undefined) {\r\n            this.origin = {\r\n                    x: this.oldOrigin.x + dx,\r\n                    y: this.oldOrigin.y + dy\r\n                };\r\n        }\r\n    }\r\n\r\n    panByMouseStop() {\r\n        this.oldOrigin.x = undefined;\r\n        this.oldOrigin.y = undefined;\r\n    }\r\n\r\n    panToCoordinate(x, y) {\r\n        let canvasX = this.W2C_X(x);\r\n        let canvasY = this.W2C_Y(y);\r\n\r\n        let dx = this.canvas.width / 2 - canvasX;\r\n        let dy = this.canvas.height / 2 - canvasY;\r\n        this.panBy(dx, dy);\r\n    }\r\n\r\n    zoomByPinchStart(canvasX, canvasY) {\r\n        this.oldZoomFactor = this.zoomFactor;\r\n        this.pinchAnchorX = this.C2W_X(canvasX);\r\n        this.pinchAnchorY = this.C2W_Y(canvasY);\r\n        this.pinchStarted = true;\r\n        this.panByMouseStop();\r\n    }\r\n\r\n    zoomByPinchMove(canvasX, canvasY, ratio) {\r\n        this.zoomFactor = ratio * this.oldZoomFactor;\r\n        this.origin = {\r\n            x: canvasX - this.scalingFactor() * this.pinchAnchorX,\r\n            y: canvasY + this.scalingFactor() * this.pinchAnchorY\r\n        }\r\n    }\r\n\r\n    zoomByPinchStop() {\r\n        this.oldZoomFactor = undefined;\r\n        this.pinchAnchorX = undefined;\r\n        this.pinchAnchorY = undefined;\r\n        this.pinchStarted = false;\r\n    }\r\n\r\n    clear() {\r\n        this.canvas.getContext('2d').clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n}\r\n\r\nexport default Stage;\r\n","import * as ActionTypes from '../actionTypes';\r\n\r\nexport const registerStage = (stage) => {\r\n    return {\r\n        type: ActionTypes.NEW_STAGE_CREATED,\r\n        stage: stage\r\n    }\r\n};\r\n\r\nexport const handleMouseDown = (stage, x, y) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_DOWN_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y\r\n    }\r\n};\r\n\r\nexport const handleMouseUp = (stage, x, y) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_UP_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y\r\n    }\r\n};\r\n\r\nexport const handleMouseMove = (stage, x, y, dx, dy) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_MOVED_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y,\r\n        dx: dx,\r\n        dy: dy\r\n    }\r\n};\r\n\r\nexport const handleMouseWheelMove = (stage, x, y, delta) => {\r\n    return {\r\n        type: ActionTypes.MOUSE_WHEEL_MOVE_ON_STAGE,\r\n        stage: stage,\r\n        x: x,\r\n        y: y,\r\n        delta: delta\r\n    }\r\n};\r\n\r\nexport const handlePinchDown = (stage, touchPoints) => {\r\n    return {\r\n        type: ActionTypes.PINCH_DOWN_ON_STAGE,\r\n        stage: stage,\r\n        x1: touchPoints[0].x,\r\n        y1: touchPoints[0].y,\r\n        x2: touchPoints[1].x,\r\n        y2: touchPoints[1].y\r\n    }\r\n};\r\n\r\nexport const handlePinchMove = (stage, touchPoints) => {\r\n    return {\r\n        type: ActionTypes.PINCH_MOVED_ON_STAGE,\r\n        stage: stage,\r\n        x1: touchPoints[0].x,\r\n        y1: touchPoints[0].y,\r\n        x2: touchPoints[1].x,\r\n        y2: touchPoints[1].y\r\n    }\r\n};\r\n\r\nexport const handlePinchUp = (stage) => {\r\n    return {\r\n        type: ActionTypes.PINCH_UP_ON_STAGE,\r\n        stage\r\n    }\r\n};\r\n\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport styles from \"./CanvasComponent.module.css\";\r\nimport Stage from '../../../models/stage';\r\nimport { connect } from \"react-redux\";\r\n// import * as ActionTypes from \"../../../store/actionTypes\";\r\nimport * as actions from '../../../store/actions/stageActions';\r\n\r\nclass CanvasComponent extends Component {\r\n    canvasElement = React.createRef();\r\n\r\n    handleMouseMove = (event) => {\r\n        this.props.stage.canvas.focus();\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n            this.props.handleMouseMove(\r\n                this.props.stage,\r\n                event.stageX,\r\n                event.stageY,\r\n                this.props.mouse.startX ? event.stageX - this.props.mouse.startX : undefined,\r\n                this.props.mouse.startY ? event.stageY - this.props.mouse.startY : undefined\r\n            );\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            let touchPoints = [\r\n                {\r\n                    x: event.nativeEvent.touches[0].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[0].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n                {\r\n                    x: event.nativeEvent.touches[1].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[1].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n            ];\r\n            this.props.handlePinchMove(this.props.stage, touchPoints);\r\n        }\r\n\r\n        // if (this.props.stage.pinchStarted) {\r\n        //     this.props.handleSecondTouchMove(this.props.stage, event.stageX, event.stageY);\r\n        // }\r\n        // else {\r\n        //     this.props.handleMouseMove(\r\n        //         this.props.stage,\r\n        //         event.stageX,\r\n        //         event.stageY,\r\n        //         this.props.mouse.startX ? event.stageX - this.props.mouse.startX : undefined,\r\n        //         this.props.mouse.startY ? event.stageY - this.props.mouse.startY : undefined\r\n        //     );\r\n        // }\r\n    };\r\n\r\n    handleMouseDown = (event) => {\r\n        // if (event.pointerID === -1 || event.pointerID === 0) {\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n            this.props.handleMouseDown(this.props.stage, event.stageX, event.stageY);\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            let touchPoints = [\r\n                {\r\n                    x: event.nativeEvent.touches[0].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[0].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n                {\r\n                    x: event.nativeEvent.touches[1].clientX - event.nativeEvent.target.offsetLeft,\r\n                    y: event.nativeEvent.touches[1].clientY - event.nativeEvent.target.offsetTop\r\n                },\r\n            ];\r\n            this.props.handlePinchDown(this.props.stage, touchPoints);\r\n        }\r\n    };\r\n\r\n    handleMouseUp = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (!event.nativeEvent.touches || event.nativeEvent.touches.length === 1) {\r\n            this.props.handleMouseUp(this.props.stage);\r\n        }\r\n        else if (event.nativeEvent.touches && event.nativeEvent.touches.length === 2) {\r\n            this.props.handlePinchUp(this.props.stage);\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = (event) => {   // nothing works except click\r\n        this.props.stage.canvas.blur();\r\n        document.body.focus();\r\n    };\r\n\r\n    handleMouseWheel = (event) => {\r\n        /*event.preventDefault();*/\r\n\r\n        let delta = event.detail || event.wheelDelta;\r\n        if (delta !== 0) {\r\n            this.props.handleMouseWheelMove(this.props.stage, event.offsetX, event.offsetY, delta);\r\n        }\r\n    };\r\n\r\n    handleMouseWheelFox = (event) => {\r\n        /*event.preventDefault();*/\r\n        if (event.detail !== 0) {\r\n            this.props.handleMouseWheelMove(this.props.stage, event.layerX, event.layerY, -event.detail);\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        let stage = new Stage(this.canvasElement.current);\r\n\r\n        // stage.setClearColor(\"#FFFFFF\");\r\n        // stage.update();\r\n\r\n        stage.on(\"stagemousedown\", this.handleMouseDown);\r\n        stage.on(\"stagemousemove\", this.handleMouseMove);\r\n        // stage.on(\"click\", this.handleMouseDown);\r\n        stage.on(\"stagemouseup\", this.handleMouseUp);\r\n        stage.on(\"mouseleave\", this.handleMouseLeave);\r\n        stage.canvas.addEventListener(\"mousewheel\", this.handleMouseWheel, {passive: true});\r\n        stage.canvas.addEventListener(\"DOMMouseScroll\", this.handleMouseWheelFox, {passive: true});\r\n\r\n        this.props.registerStage(stage);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <canvas\r\n                tabIndex=\"1\"\r\n                ref={this.canvasElement}\r\n                id=\"mainCanvas\"\r\n                className={styles[\"App-canvas\"]}\r\n                width=\"100\"\r\n                height=\"100\"\r\n            >\r\n            </canvas>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        stage: state.app.stage,\r\n        mouse: state.mouse\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        registerStage: (stage) => dispatch(actions.registerStage(stage)),\r\n        handleMouseDown: (stage, x, y) => dispatch(actions.handleMouseDown(stage, x, y)),\r\n        handleMouseUp: (stage, x, y) => dispatch(actions.handleMouseUp(stage, x, y)),\r\n        handleMouseMove: (stage, x, y, dx, dy) => dispatch(actions.handleMouseMove(stage, x, y, dx, dy)),\r\n        handleMouseWheelMove: (stage, x, y, delta) => dispatch(actions.handleMouseWheelMove(stage, x, y, delta)),\r\n        handlePinchDown: (stage, touchPoints) => dispatch(actions.handlePinchDown(stage, touchPoints)),\r\n        handlePinchMove: (stage, touchPoints) => dispatch(actions.handlePinchMove(stage, touchPoints)),\r\n        handlePinchUp: (stage) => dispatch(actions.handlePinchUp(stage))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CanvasComponent);\r\n","/**\r\n * Created by alexanderbol on 17/06/2017.\r\n */\r\nimport React from 'react';\r\nimport styles from './StatusComponent.module.css';\r\n\r\nconst StatusComponent = () => {\r\n    return (\r\n        <div className={styles[\"App-status-bar\"]}>\r\n            <div>\r\n                <h5>\r\n                    &nbsp;\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusComponent;","import React, {Component} from 'react';\r\n// import Utils from \"../utils\";\r\n\r\nclass StageComponent extends Component {\r\n    // shouldComponentUpdate useless because always returns \"true\",\r\n    // Don't know why, maybe because of children?\r\n    // ----------------------------------------------------------\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     if (Utils.is_equal(this.props, nextProps)) {\r\n    //         return false;\r\n    //     }\r\n    //     return true;\r\n    // }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.stage.canvas && this.props.stage.canvas.getContext('2d')) {\r\n\r\n            let origin = this.props.stage.origin;\r\n            let zoomFactor = this.props.stage.zoomFactor*this.props.stage.resolution;\r\n            this.props.stage.setTransform(origin.x, origin.y, zoomFactor, -zoomFactor);\r\n\r\n            this.props.stage.update();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onStageUnmounted();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.children}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StageComponent;","import {Point, Segment, Circle, Arc, Polygon, Box} from '@flatten-js/core';\r\nimport {Graphics} from '@createjs/easeljs';\r\n\r\n/* Provide conversion methods from FlattenJS objects to CreateJS Graphics */\r\nexport function graphics(shape, style = undefined) {\r\n    if (shape instanceof Point) {\r\n        return graphics_point(shape, style);\r\n    }\r\n    if (shape instanceof Segment) {\r\n        return graphics_segment(shape, style);\r\n    }\r\n    if (shape instanceof Arc) {\r\n        return graphics_arc(shape, style);\r\n    }\r\n    if (shape instanceof Circle) {\r\n        return graphics_circle(shape, style);\r\n    }\r\n    if (shape instanceof Box) {\r\n        return graphics_box(shape, style);\r\n    }\r\n    if (shape instanceof Polygon) {\r\n        return graphics_polygon(shape, style);\r\n    }\r\n    return null;\r\n}\r\n\r\n// Point.prototype.graphics = function(style) {\r\nfunction graphics_point(point, style) {\r\n    let radius = (style && style.radius) ? style.radius : 3;\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    let graphics = new Graphics();\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n    graphics.circle = graphics.drawCircle(point.x, point.y, radius).command;\r\n    return graphics;\r\n};\r\n\r\n// Segment.prototype.graphics = function(style) {\r\nfunction graphics_segment(segment, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle !== undefined ? style.strokeStyle : 2;\r\n    let ignoreScale = style && style.ignoreScale !== undefined ? style.ignoreScale : true;\r\n    let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    return graphics\r\n        .setStrokeStyle(strokeStyle,1,0,10,ignoreScale)\r\n        .beginStroke(stroke)\r\n        .moveTo(segment.ps.x, segment.ps.y)\r\n        .lineTo(segment.pe.x, segment.pe.y)\r\n        .endStroke();\r\n};\r\n\r\n// Arc.prototype.graphics = function(style) {\r\nfunction graphics_arc(arc, style) {\r\n    // let startAngle = 2 * Math.PI - this.startAngle;\r\n    // let endAngle =  2 * Math.PI - this.endAngle;\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 2;\r\n    let ignoreScale = style && style.ignoreScale !== undefined ? style.ignoreScale : true;\r\n    let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    return graphics\r\n        .setStrokeStyle(strokeStyle,1,0,10,ignoreScale)\r\n        .beginStroke(stroke)\r\n        .arc(arc.pc.x, arc.pc.y, arc.r, arc.startAngle, arc.endAngle, !arc.counterClockwise)\r\n        .endStroke();\r\n};\r\n\r\n// Circle.prototype.graphics = function(style) {\r\nfunction graphics_circle(circle, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    // let stroke = style && style.stroke ? style.stroke : \"black\";\r\n    let stroke = style && style.stroke ? style.stroke : \"#FF0303\";\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    graphics.setStrokeStyle(strokeStyle,0,0,10,true);\r\n    graphics.stroke = graphics.beginStroke(stroke).command;\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n    graphics.drawCircle(circle.pc.x, circle.pc.y, circle.r);\r\n    return graphics;\r\n};\r\n\r\n\r\nfunction graphics_box(box, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    let stroke = style && style.stroke ? style.stroke : \"#FF0303\";\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    graphics.setStrokeStyle(strokeStyle,0,0,10,true);\r\n    graphics.stroke = graphics.beginStroke(stroke).command;\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n    graphics.drawRect(box.xmin, box.ymin, box.xmax-box.xmin, box.ymax-box.ymin);\r\n    return graphics;\r\n};\r\n\r\nfunction setGraphicsEdgeSegment(graphics, segment) {\r\n    graphics.lineTo(segment.pe.x, segment.pe.y);\r\n}\r\n\r\nfunction setGraphicsEdgeArc(graphics, arc) {\r\n    // let startAngle = 2 * Math.PI - arc.startAngle;\r\n    // let endAngle = 2 * Math.PI - arc.endAngle;\r\n    graphics.arc(arc.pc.x, arc.pc.y, arc.r, arc.startAngle, arc.endAngle, !arc.counterClockwise);\r\n}\r\n\r\nfunction setGraphicsEdge(graphics, edge) {\r\n    if (edge.shape instanceof Segment) {\r\n        setGraphicsEdgeSegment(graphics, edge.shape);\r\n    }\r\n    else if (edge.shape instanceof Arc) {\r\n        setGraphicsEdgeArc(graphics, edge.shape);\r\n    }\r\n}\r\n\r\nfunction setGraphicsFace(graphics, face) {\r\n    let ps = face.first.start;\r\n    graphics.moveTo(ps.x, ps.y);\r\n\r\n    for (let edge of face) {\r\n        setGraphicsEdge(graphics, edge);\r\n    }\r\n}\r\n\r\n// Polygon.prototype.graphics = function(style) {\r\nfunction graphics_polygon(polygon, style) {\r\n    let graphics = new Graphics();\r\n    let strokeStyle = style && style.strokeStyle ? style.strokeStyle : 1;\r\n    let stroke = style && style.stroke ? style.stroke : \"#FF0303\";\r\n    let fill = style && style.fill ? style.fill : \"#FF0303\";\r\n    graphics.setStrokeStyle(strokeStyle,0,0,10,true);\r\n    graphics.stroke = graphics.beginStroke(stroke).command;\r\n    graphics.fill = graphics.beginFill(fill).command;\r\n\r\n    for (let face of polygon.faces) {\r\n        setGraphicsFace(graphics, face);\r\n    }\r\n\r\n    graphics.endStroke();\r\n    return graphics;\r\n};\r\n\r\n","const Utils = {\r\n    is_equal: (obj1, obj2) => {\r\n        let equal = true;\r\n        for (let key of Object.keys(obj2)) {\r\n            if (obj2[key] !== obj1[key]) {\r\n                equal = false;\r\n                break;\r\n            }\r\n        }\r\n        return equal;\r\n    }\r\n};\r\n\r\nexport default Utils;","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Shape} from '@createjs/easeljs';\r\nimport {graphics} from '../../../../models/graphics';\r\nimport Utils from '../../../../models/utils';\r\n\r\nexport class ShapeComponent extends Component {\r\n    constructor(params) {\r\n        super();\r\n\r\n        this.shape = new Shape();\r\n        params.stage.addChild(this.shape);\r\n\r\n        this.vertexShapes = [];\r\n\r\n        if (params.model.geom.vertices) {\r\n            for (let vertex of params.model.geom.vertices) {\r\n                let vertexShape = new Shape();\r\n                vertexShape.geom = vertex;   // augment Shape with geom struct\r\n                vertexShape.mouseEnabled = false;\r\n                params.stage.addChild(vertexShape);\r\n                this.vertexShapes.push(vertexShape);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleMouseOver = (event) => {\r\n        this.props.onMouseOver(this.props.model);\r\n    };\r\n\r\n    handleMouseOut = (event) => {\r\n        this.props.onMouseOut();\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        this.props.onClick(this.props.model, this.props.layer);\r\n    };\r\n\r\n    redrawVertices(stroke, fill, alpha) {\r\n        let stage = this.props.stage;\r\n\r\n        for (let vertexShape of this.vertexShapes) {\r\n            let vertex = vertexShape.geom;\r\n            if (vertexShape.graphics.isEmpty()) {\r\n                vertexShape.graphics = graphics(vertex,   // vertex.graphics({\r\n                    {\r\n                        stroke: stroke,     // this.props.color,\r\n                        fill: fill,\r\n                        radius: 3. / (stage.zoomFactor * stage.resolution)\r\n                    });\r\n            }\r\n            else {\r\n                vertexShape.graphics.circle.radius = 3. / (stage.zoomFactor * stage.resolution);\r\n                vertexShape.graphics.fill.style = fill;\r\n            }\r\n            vertexShape.alpha = alpha;\r\n        }\r\n    }\r\n\r\n    redraw() {\r\n        // Draw shape\r\n        let stage = this.props.stage;\r\n        let color = (this.props.hovered || this.props.selected) ? \"black\" : this.props.color;\r\n        let alpha = (this.props.hovered || this.props.selected) ? 1.0 : 0.6;\r\n        let widthOn = this.props.widthOn;\r\n\r\n        let strokeStyle = this.props.model.geom.aperture ? this.props.model.geom.aperture : undefined;\r\n        let fill = (widthOn && !this.props.displayVertices) ? this.props.color : \"white\";\r\n\r\n        if (this.shape.graphics.isEmpty()) {\r\n            this.shape.graphics = graphics(this.props.model.geom,{\r\n                strokeStyle: strokeStyle,\r\n                ignoreScale: true,\r\n                stroke: color,\r\n                fill: fill,\r\n                radius: 3. / (stage.zoomFactor * stage.resolution)\r\n            });\r\n\r\n            // this.skeletonShape = new Shape();\r\n            // this.skeletonShape.graphics = this.props.model.geom.graphics({\r\n            //     strokeStyle: 1,\r\n            //     ignoreScale: true,\r\n            //     stroke: color,\r\n            //     fill: fill,\r\n            //     radius: 3. / (stage.zoomFactor * stage.resolution)\r\n            // });\r\n            // this.skeletonShape.alpha = 1;\r\n            // this.props.stage.addChild(this.skeletonShape);\r\n        }\r\n        else {\r\n            if (this.shape.graphics.stroke) this.shape.graphics.stroke.style = color;\r\n            if (this.shape.graphics.fill) this.shape.graphics.fill.style = fill;\r\n            if (this.shape.graphics.circle) this.shape.graphics.circle.radius =\r\n                3. / (stage.zoomFactor * stage.resolution);\r\n        }\r\n        this.shape.alpha = this.props.displayed ? alpha : 0.0;\r\n\r\n        // let box = this.props.model.geom.box;\r\n        // this.shape.cache(box.xmin, box.ymin, box.xmax - box.xmin, box.ymax - box.ymin);\r\n\r\n        // Draw vertices\r\n        alpha = this.props.displayed && this.props.displayVertices ? 1.0 : 0.0;\r\n        this.redrawVertices(color, color, alpha);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.shape.on(\"mouseover\", this.handleMouseOver);\r\n        this.shape.on(\"mouseout\", this.handleMouseOut);\r\n        this.shape.on(\"click\", this.handleClick);\r\n\r\n        // this.shape.mouseEnabled = false;\r\n\r\n        this.redraw();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (Utils.is_equal(this.props, nextProps)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.redraw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.shape.off(\"mouseover\", this.handleMouseOver);\r\n        this.shape.off(\"mouseout\", this.handleMouseOut);\r\n        this.shape.off(\"click\", this.handleClick);\r\n        this.props.stage.removeChild(this.shape);\r\n        this.shape.graphics.clear();\r\n        for (let vertexShape of this.vertexShapes) {\r\n            this.props.stage.removeChild(vertexShape);\r\n        }\r\n        this.vertexShapes = [];\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n","/**\r\n * Created by alexanderbol on 19/06/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Bitmap} from '@createjs/easeljs';\r\nimport '../../../../models/graphics';\r\nimport Utils from '../../../../models/utils';\r\n// import storage from '../../../../firebase-storage';\r\n\r\nexport class ImageComponent extends Component {\r\n    handleMouseOver = (event) => {\r\n        this.props.onMouseOver(this.props.model);\r\n    };\r\n\r\n    handleMouseOut = (event) => {\r\n        this.props.onMouseOut();\r\n    };\r\n\r\n    handleClick = (event) => {\r\n        this.props.onClick(this.props.model, this.props.layer);\r\n    };\r\n\r\n    redraw() {\r\n        if (!this.bitmap) return;\r\n        // Draw shape\r\n        let alpha = 1; // (this.props.hovered || this.props.selected) ? 1.0 : 0.6;\r\n        this.bitmap.alpha = this.props.displayed ? alpha : 0.0;\r\n\r\n        let width = this.props.model.geom.width;\r\n        let ratio = this.bitmap.image.naturalWidth/this.bitmap.image.naturalHeight;\r\n        this.props.model.geom.height = this.props.model.geom.width / ratio;\r\n        let scaleX = width/this.bitmap.image.naturalWidth; // 1. / (stage.zoomFactor * stage.resolution);\r\n        let scaleY = width/(this.bitmap.image.naturalHeight*ratio);\r\n        let tx = this.props.model.geom.center.x; // stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n        let ty = this.props.model.geom.center.y; // -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n\r\n        this.bitmap.setTransform(tx, ty, scaleX, -scaleY);\r\n\r\n        this.bitmap.regX = this.bitmap.image.naturalWidth/2;\r\n        this.bitmap.regY = this.bitmap.image.naturalHeight/2;\r\n\r\n        // let box = this.state.polygon.geom.box;\r\n        // this.shape.cache(box.xmin, box.ymin, box.xmax - box.xmin, box.ymax - box.ymin);\r\n    }\r\n\r\n    loadImage() {\r\n        const img = new Image();\r\n\r\n        img.onload = () => {\r\n            // img.crossOrigin=\"Anonymous\";\r\n            this.bitmap = new Bitmap(img);\r\n            this.props.stage.addChild(this.bitmap);\r\n\r\n            // this.bitmap.on(\"mouseover\", this.handleMouseOver);\r\n            // this.bitmap.on(\"mouseout\", this.handleMouseOut);\r\n            // this.bitmap.on(\"click\", this.handleClick);\r\n\r\n            // this.shape.mouseEnabled = false;\r\n            this.redraw();\r\n\r\n            this.props.onImageLoaded(this.props.model, this.props.layer, img);\r\n        };\r\n        img.setAttribute('crossOrigin', 'anonymous'); // works for me\r\n\r\n        // Create a reference from a Google Cloud Storage URI\r\n        //const ref = storage.refFromURL(this.props.model.geom.uri);\r\n\r\n        // ref.getDownloadURL()\r\n        //    .then( url => {\r\n        //\r\n        //         img.src = url;\r\n        //     })\r\n        //     .catch( error => console.log(error))\r\n\r\n        img.src = this.props.model.geom.uri;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadImage()\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (Utils.is_equal(this.props, nextProps)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.redraw();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // this.bitmap.off(\"mouseover\", this.handleMouseOver);\r\n        // this.bitmap.off(\"mouseout\", this.handleMouseOut);\r\n        // this.bitmap.off(\"click\", this.handleClick);\r\n\r\n        this.props.stage.removeChild(this.bitmap);\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {ShapeComponent} from './graphics/shapeComponent';\r\nimport {ImageComponent} from \"./graphics/imageComponent\";\r\n\r\nexport class LayerComponent extends Component {\r\n    render() {\r\n        return (\r\n            this.props.layer.shapes.map((shape, index) => {\r\n                return shape.geom.uri ? (\r\n                    <ImageComponent\r\n                        key={index}\r\n                        stage={this.props.stage}\r\n                        layer={this.props.layer}\r\n                        model={shape}\r\n                        displayed={this.props.layer.displayed}\r\n                        hovered={shape === this.props.hoveredShape}\r\n                        selected={\r\n                            shape === this.props.firstMeasuredShape ||\r\n                            shape === this.props.secondMeasuredShape\r\n                        }\r\n                        color={this.props.layer.color}\r\n                        widthOn={this.props.widthOn}\r\n                        displayLabels={this.props.displayLabels}\r\n                        zoomFactor={this.props.zoomFactor}\r\n                        onMouseOver={this.props.onMouseOver}\r\n                        onMouseOut={this.props.onMouseOut}\r\n                        onClick={this.props.onClick}\r\n                        onImageLoaded={this.props.onImageLoaded}\r\n                    />\r\n                    ) : (\r\n                    <ShapeComponent\r\n                        key={index}\r\n                        stage={this.props.stage}\r\n                        layer={this.props.layer}\r\n                        model={shape}\r\n                        displayed={this.props.layer.displayed}\r\n                        hovered={shape === this.props.hoveredShape}\r\n                        selected={\r\n                            shape === this.props.firstMeasuredShape ||\r\n                            shape === this.props.secondMeasuredShape\r\n                        }\r\n                        color={this.props.layer.color}\r\n                        widthOn={this.props.widthOn}\r\n                        displayVertices={this.props.displayVertices}\r\n                        zoomFactor={this.props.zoomFactor}\r\n                        onMouseOver={this.props.onMouseOver}\r\n                        onMouseOut={this.props.onMouseOut}\r\n                        onClick={this.props.onClick}\r\n                    /> )\r\n                }\r\n            )\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport classes from '../LabelsLayerComponent/labelsLayer.module.css';\r\n\r\nconst labelComponent = ( {stage, shape} ) => {\r\n    let center = shape.geom.center || shape.geom;  // Point has no method center\r\n    let left = stage.canvas.offsetLeft + stage.W2C_X(center.x) + 6;\r\n    let top = stage.canvas.offsetTop + stage.W2C_Y(center.y) - 4;\r\n    let inside = left > stage.canvas.offsetLeft && left < stage.canvas.offsetLeft + stage.canvas.width &&\r\n        top > stage.canvas.offsetTop && top < stage.canvas.offsetTop + stage.canvas.height;\r\n\r\n    return inside ? (\r\n        <div style={{position:\"absolute\", left:left+\"px\", top: top+\"px\"}} className={classes.LabelComponent}>\r\n            <h5>{shape.label}</h5>\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default labelComponent;","import React from 'react';\r\nimport LabelComponent from '../domelements/labelComponent';\r\n\r\nconst labelsLayerComponent = ({stage, layer, displayLabels}) => {\r\n    return (layer.displayed && displayLabels) ? (\r\n        layer.shapes.map((shape, index) => {\r\n                return (shape.label && shape.label.trim() !== \"\") ? (\r\n                    <LabelComponent\r\n                        key={index}\r\n                        stage={stage}\r\n                        shape={shape}\r\n                    />) : null;\r\n            }\r\n        )\r\n    ) : null;\r\n};\r\n\r\nexport default labelsLayerComponent;","import React, {Component} from 'react';\r\nimport {LayerComponent} from \"./layerComponent\";\r\nimport LabelsLayerComponent from \"./LabelsLayerComponent/labelsLayerComponent\";\r\nimport Layers from \"../../../models/layers\";\r\n\r\nclass LayersComponent extends Component {\r\n    componentDidMount() {\r\n        if (this.props.layers.length > 0 && this.props.stage) {\r\n            let affectedLayer = Layers.getAffected(this.props.layers);\r\n            if (affectedLayer) {\r\n                this.props.setHomeView(this.props.stage, affectedLayer);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return this.props.layers.map((layer) =>\r\n            <React.Fragment key={layer.name}>\r\n                <LayerComponent\r\n                    stage={this.props.stage}\r\n                    layer={layer}\r\n                    color={layer.color}\r\n                    displayed={layer.displayed}\r\n                    displayVertices={this.props.displayVertices}\r\n                    displayLabels={this.props.displayLabels}\r\n                    widthOn={this.props.widthOn}\r\n                    hoveredShape={this.props.hoveredShape}\r\n                    firstMeasuredShape={this.props.firstMeasuredShape}\r\n                    secondMeasuredShape={this.props.secondMeasuredShape}\r\n                    zoomFactor={this.props.zoomFactor}\r\n                    onMouseOver={this.props.onMouseOver}\r\n                    onMouseOut={this.props.onMouseOut}\r\n                    onClick={this.props.onClick}\r\n                    onImageLoaded={this.props.onImageLoaded}\r\n                />\r\n                <LabelsLayerComponent\r\n                    stage={this.props.stage}\r\n                    layer={layer}\r\n                    displayed={layer.displayed}\r\n                    displayLabels={this.props.displayLabels}\r\n\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LayersComponent;\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Stage from \"../models/stage\";\r\nimport * as actions from '../store/actions/stageActions';\r\n\r\nclass MeasurePointsTool extends Component {\r\n    measureCanvas = React.createRef();\r\n    measureStage = null;\r\n\r\n    state = {\r\n        startX: undefined,\r\n        startY: undefined,\r\n        endX: undefined,\r\n        endY: undefined,\r\n        measureStarted: false\r\n    };\r\n\r\n    handleMouseDown = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.measureStage.clear();\r\n\r\n        if (this.state.measureStarted) {   // second click - clear measurement\r\n            this.setState({\r\n                startX: undefined,\r\n                startY: undefined,\r\n                endX: undefined,\r\n                endY: undefined,\r\n                measureStarted: false\r\n            });\r\n            this.measureStage.canvas.style.cursor = \"auto\";\r\n        }\r\n        else {                       // first click - start measurment\r\n            this.setState({\r\n                startX: this.measureStage.C2W_X(event.stageX),\r\n                startY: this.measureStage.C2W_Y(event.stageY),\r\n                measureStarted: true\r\n            });\r\n            this.measureStage.canvas.style.cursor = \"crosshair\";\r\n        }\r\n    };\r\n\r\n    handleMouseMove = (event) => {\r\n        if (this.state.measureStarted) {\r\n            this.setState({\r\n                endX: this.measureStage.C2W_X(event.stageX),\r\n                endY: this.measureStage.C2W_Y(event.stageY)\r\n            })\r\n        }\r\n    };\r\n\r\n    handleMouseUp = (event) => {\r\n    }\r\n\r\n    handleMouseWheel = (event) => {\r\n        event.preventDefault();\r\n\r\n        let delta = event.detail || event.wheelDelta;\r\n        if (delta !== 0) {\r\n            // this.props.onMouseWheelMove(event.offsetX, event.offsetY, delta);\r\n            this.props.handleMouseWheelMove(this.props.stage, event.offsetX, event.offsetY, delta);\r\n\r\n            this.draw();\r\n        }\r\n    };\r\n\r\n    handleMouseWheelFox = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (event.detail !== 0) {\r\n            // this.props.onMousewheelMove(event.layerX, event.layerY, -event.detail);\r\n            this.props.handleMouseWheelMove(this.props.stage, event.layerX, event.layerY, -event.detail);\r\n\r\n            this.draw();\r\n        }\r\n    };\r\n\r\n    draw() {\r\n        // let canvas = this.measureCanvas.current;\r\n        let stage = this.measureStage; // this.props.stage;\r\n        let canvas = stage.canvas;\r\n        let context = canvas.getContext('2d');\r\n\r\n        this.measureStage.origin = this.props.stage.origin;\r\n        this.measureStage.resolution = this.props.stage.resolution;\r\n        this.measureStage.zoomFactor = this.props.stage.zoomFactor;\r\n\r\n        this.measureStage.clear();\r\n\r\n        // Draw rectangle\r\n        let pllX = Math.min(stage.W2C_X(this.state.startX), stage.W2C_X(this.state.endX));\r\n        let pllY = Math.min(stage.W2C_Y(this.state.startY), stage.W2C_Y(this.state.endY));\r\n        let width = Math.abs(stage.W2C_Scalar(this.state.startX - this.state.endX));\r\n        let height = Math.abs(stage.W2C_Scalar(this.state.startY - this.state.endY));\r\n\r\n        context.beginPath();\r\n        context.rect(pllX, pllY, width, height);\r\n\r\n        // Draw segment\r\n        context.moveTo(stage.W2C_X(this.state.startX), stage.W2C_Y(this.state.startY));\r\n        context.lineTo(stage.W2C_X(this.state.endX), stage.W2C_Y(this.state.endY));\r\n\r\n        context.lineWidth = 1;\r\n        context.strokeStyle = 'black';\r\n        context.stroke();\r\n\r\n        // Draw text\r\n        let textX, textY, textHeight, textWidth;\r\n        let backX, backY;                      // background rectangle\r\n        let text = this.measurement();\r\n\r\n        context.font = \"12pt Arial\";\r\n\r\n        textHeight = 12;\r\n        /* font size*/\r\n        textWidth = context.measureText(text).width;\r\n\r\n        // Rectangle to the right of current point, text aligned left\r\n        if (Math.abs(stage.W2C_X(this.state.endX) - pllX) <= 2) {\r\n            context.textAlign = \"left\";\r\n            textX = pllX + 3;\r\n            backX = pllX;\r\n        }\r\n        // Rectangle to the left of current point, text aligned right\r\n        else {\r\n            context.textAlign = \"right\";\r\n            textX = pllX + width - 3;\r\n            backX = textX - textWidth - 3;\r\n        }\r\n\r\n        if (Math.abs(stage.W2C_Y(this.state.endY) - pllY) <= 2) {\r\n            textY = pllY - 3;\r\n        }\r\n        else {\r\n            textY = pllY + height + textHeight + 3;\r\n        }\r\n        backY = textY - textHeight - 3;\r\n\r\n        context.fillStyle = 'white';\r\n        context.globalAlpha = 0.4;\r\n        context.fillRect(backX, backY, textWidth + 6, textHeight + 6);\r\n\r\n        context.fillStyle = \"black\";\r\n        context.globalAlpha = 1;\r\n        context.fillText(this.measurement(), textX, textY);\r\n    }\r\n\r\n    measurement() {\r\n        let dx = this.state.endX - this.state.startX;\r\n        let dy = this.state.endY - this.state.startY;\r\n        let dist = Math.sqrt(dx * dx + dy * dy);\r\n        let message = \"DX=\" + this.format(dx) + \",DY=\" + this.format(dy) + \",D=\" + this.format(dist);\r\n        return message;\r\n    }\r\n\r\n    format(num) {\r\n        return (num / this.props.divisor).toFixed(this.props.decimals);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // let canvas = this.measureCanvas.current;\r\n        this.measureStage = new Stage(this.measureCanvas.current);\r\n        this.measureStage.origin = this.props.stage.origin;\r\n        this.measureStage.resolution = this.props.stage.resolution;\r\n        this.measureStage.zoomFactor = this.props.stage.zoomFactor;\r\n\r\n        this.measureStage.on(\"stagemousedown\", this.handleMouseDown);\r\n        this.measureStage.on(\"stagemousemove\", this.handleMouseMove);\r\n        this.measureStage.on(\"stagemouseup\", this.handleMouseUp);\r\n\r\n        this.measureStage.canvas.addEventListener(\"mousewheel\", this.handleMouseWheel);\r\n        this.measureStage.canvas.addEventListener(\"DOMMouseScroll\", this.handleMouseWheelFox);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.measureStarted) {\r\n            this.draw();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.measureStage.clear();\r\n        this.measureStage.removeAllChildren();\r\n        this.measureStage.removeAllEventListeners();\r\n    }\r\n\r\n    render() {\r\n        let mainCanvas = this.props.stage.canvas;\r\n        let width = mainCanvas.width;\r\n        let height = mainCanvas.height;\r\n        let top = mainCanvas.offsetTop;\r\n        let left = mainCanvas.offsetLeft;\r\n        return (\r\n            <canvas tabIndex=\"1\" ref={this.measureCanvas}\r\n                    width={width}\r\n                    height={height}\r\n                    style={{position: 'absolute', top: top, left: left}}\r\n            >\r\n            </canvas>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({app}) => {\r\n    return {\r\n        stage: app.stage,\r\n        divisor: app.divisor,\r\n        decimals: app.decimals\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleMouseWheelMove: (stage, x, y, delta) => dispatch(actions.handleMouseWheelMove(stage, x, y, delta))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MeasurePointsTool);\r\n","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\n\r\nimport {Component} from 'react';\r\nimport {Shape, Text} from '@createjs/easeljs';\r\nimport {graphics} from '../models/graphics';\r\n\r\nclass MeasureShapesTool extends Component {\r\n    constructor(params) {\r\n        super();\r\n        this.segment = new Shape();\r\n        params.stage.addChild(this.segment);\r\n\r\n        this.labelShape = new Text();\r\n        this.labelShape.x = 0;\r\n        this.labelShape.y = 0;\r\n        params.stage.addChild(this.labelShape);\r\n\r\n        // var html = document.createElement('div');\r\n        // html.innerText = \"\"; // params.model.label;\r\n        // html.style.position = \"absolute\";\r\n        // html.style.top = 0;\r\n        // html.style.left = 0;\r\n        //\r\n        // document.body.appendChild(html);\r\n        // this.labelShape = new createjs.DOMElement(html);\r\n        // params.stage.addChild(this.labelShape);\r\n    }\r\n\r\n    // redrawLabel() {\r\n    //     if (!this.labelShape) return;\r\n    //\r\n    //     let stage = this.props.stage;\r\n    //\r\n    //     this.labelShape.htmlElement.style.display = \"block\";\r\n    //\r\n    //     let box = this.props.shortestSegment.box;\r\n    //     let point = {x: (box.xmin + box.xmax) / 2, y: (box.ymin + box.ymax) / 2};\r\n    //     let dx = 6. / (stage.zoomFactor * stage.resolution);\r\n    //     let dy = 4. / (stage.zoomFactor * stage.resolution);\r\n    //\r\n    //     this.labelShape.htmlElement.style.font = \"16px Arial\";\r\n    //     this.labelShape.htmlElement.innerText = this.props.shortestSegment.length;\r\n    //\r\n    //     let unscale = 1. / (stage.zoomFactor * stage.resolution);\r\n    //     let tx = stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n    //     let ty = -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n    //     this.labelShape.setTransform(tx, ty, unscale, -unscale);\r\n    // }\r\n\r\n    format(num) {\r\n        return (num/this.props.divisor).toFixed(this.props.decimals);\r\n    }\r\n\r\n    redrawLabel() {\r\n        if (!this.labelShape) return;\r\n\r\n        let stage = this.props.stage;\r\n\r\n        let box = this.props.shortestSegment.box;\r\n        let point = {x: (box.xmin + box.xmax) / 2, y: (box.ymin + box.ymax) / 2};\r\n        let dx = 6. / (stage.zoomFactor * stage.resolution);\r\n        let dy = 4. / (stage.zoomFactor * stage.resolution);\r\n\r\n        if (box.ymin === box.ymax) {\r\n            dx = 0;\r\n            dy = -dy;\r\n        }\r\n\r\n        // this.labelShape.htmlElement.style.display = \"block\";\r\n        // this.labelShape.htmlElement.style.font = \"16px Arial\";\r\n        // this.labelShape.htmlElement.innerText = this.props.shortestSegment.length;\r\n\r\n        this.labelShape.text = this.format(this.props.shortestSegment.length);\r\n\r\n        let fontSize = 14.; // / (stage.zoomFactor * stage.resolution);\r\n        this.labelShape.font = `${fontSize}px Arial`;\r\n\r\n        let unscale = 1. / (stage.zoomFactor * stage.resolution);\r\n        // let tx = stage.canvas.offsetLeft / (stage.zoomFactor * stage.resolution) + point.x + dx;\r\n        // let ty = -stage.canvas.offsetTop / (stage.zoomFactor * stage.resolution) + point.y + dy;\r\n        let tx = point.x + dx;\r\n        let ty = point.y + dy;\r\n        this.labelShape.setTransform(tx, ty, unscale, -unscale);\r\n    }\r\n\r\n    draw() {\r\n        if (this.props.shortestSegment) {\r\n            this.segment.graphics = graphics(this.props.shortestSegment);\r\n            this.redrawLabel();\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.draw();\r\n    }\r\n    componentDidUpdate() {\r\n        this.segment.graphics.clear();\r\n        if (this.props.firstMeasuredShape && this.props.secondMeasuredShape &&\r\n            this.props.firstMeasuredLayer.displayed &&\r\n            this.props.secondMeasuredLayer.displayed) {\r\n\r\n            this.draw();\r\n            this.redrawLabel();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.stage.removeChild(this.segment);\r\n        this.segment.graphics.clear();\r\n        this.props.stage.removeChild(this.labelShape);\r\n        this.labelShape.text = \"\";\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default MeasureShapesTool;","/**\r\n * Created by alexanderbol on 21/04/2017.\r\n */\r\nimport React from 'react';\r\nconst DisplayCoordsTool = ({stage, coordX, coordY, divisor, decimals}) => {\r\n    const format = (num) => {\r\n        return (num/divisor).toFixed(decimals);\r\n    };\r\n\r\n    let mainCanvas = stage.canvas;\r\n    let top = mainCanvas.offsetTop + 10;\r\n    let left = mainCanvas.width - 200; //  mainCanvas.offsetLeft + 10;\r\n    let x = stage.C2W_X(coordX);\r\n    let y = stage.C2W_Y(coordY);\r\n    return (\r\n        <div style={{position: 'absolute', top: top, left: left}}>\r\n            <h5 style={{margin: 0, padding: 3}}>\r\n                X: {format(x)} Y: {format(y)}\r\n            </h5>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DisplayCoordsTool;\r\n","import {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\n// A Modal component that is an abstraction around the portal API.\r\nclass Modal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Create a div that we'll render the modal into. Because each\r\n        // Modal component has its own element, we can render multiple\r\n        // modal components into the modal container.\r\n        this.el = document.createElement('div');\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Append the element into the DOM on mount. We'll render\r\n        // into the modal container element (see the HTML tab).\r\n        modalRoot.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // Remove the element from the DOM when we unmount\r\n        modalRoot.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        // Use a portal to render the children into the element\r\n        return ReactDOM.createPortal(\r\n            // Any valid React child: JSX, strings, arrays, etc.\r\n            this.props.children,\r\n            // A DOM element\r\n            this.el,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, {Component} from 'react';\r\nimport Modal from '../Modal';\r\nimport classes from './ModalPopup.module.css';\r\n\r\nclass ModalPopup extends Component {\r\n    offsetX;\r\n    offsetY;\r\n    dragX;\r\n    dragY;\r\n\r\n    onBackDropClicked = (ev) => {\r\n        if (ev.target.id === \"backDrop\") {\r\n            this.props.closePopup();\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (ev) => {\r\n        if (ev.code === \"Escape\") {\r\n            this.props.closePopup();\r\n        }\r\n    };\r\n\r\n    elementDrag = (ev) => {\r\n        ev = ev || window.event;\r\n        // calculate the new cursor position:\r\n        this.offsetX = this.dragX - ev.clientX;\r\n        this.offsetY = this.dragY - ev.clientY;\r\n        this.dragX = ev.clientX;\r\n        this.dragY = ev.clientY;\r\n        // set the element's new position:\r\n        let element = ev.target;\r\n        element.style.top = (element.offsetTop - this.offsetY) + \"px\";\r\n        element.style.left = (element.offsetLeft - this.offsetX) + \"px\";\r\n    };\r\n\r\n    closeDragElement = (ev) => {\r\n        /* stop moving when mouse button is released:*/\r\n        ev.target.onmouseup = null;\r\n        ev.target.onmousemove = null;\r\n    };\r\n\r\n    dragMouseDown = (ev) => {\r\n        ev = ev || window.event;\r\n        // get the mouse cursor position at startup:\r\n        this.dragX = ev.clientX;\r\n        this.dragY = ev.clientY;\r\n        ev.target.onmouseup = this.closeDragElement;\r\n        // call a function whenever the cursor moves:\r\n        ev.target.onmousemove = this.elementDrag;\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    render() {\r\n        return this.props.showPopup ? (\r\n            <Modal>\r\n                <div\r\n                    id=\"backDrop\"\r\n                    className={classes.BackDrop}\r\n                    onClick={this.onBackDropClicked}\r\n                >\r\n                    <div className={classes.ModalPopup}\r\n                         onMouseDown={this.dragMouseDown}\r\n                    >\r\n                        <header>{this.props.header}</header>\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default ModalPopup;\r\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\n\r\nimport React from 'react';\r\nimport classes from './AboutPopup.module.css';\r\nimport ModalPopup from \"../UI/ModalPopup/ModalPopup\";\r\n\r\nconst AboutPopup = (props) => {\r\n    return (\r\n        <ModalPopup\r\n            showPopup={props.showAboutPopup}\r\n            closePopup={props.toggleAboutPopup}\r\n            header=\"Info\"\r\n        >\r\n            <div className={classes.AboutPopup}>\r\n                <h2>{props.title} v{props.version}</h2>\r\n\r\n                <label>{`Build date: `}</label>\r\n                <span>April 2019</span>\r\n                <br/>\r\n\r\n                <label>{`Github depository: `}</label>\r\n                <a href=\"https://github.com/alexbol99/debug-viewer1\" >\r\n                    https://github.com/alexbol99/debug-viewer1\r\n                </a>\r\n                <br/>\r\n\r\n                <label>{`3d party graphics library: `}</label>\r\n                <a href=\"https://github.com/CreateJS/EaselJS/tree/2.0\" >\r\n                    https://github.com/CreateJS/EaselJS/tree/2.0\r\n                </a>\r\n                <br/>\r\n\r\n            </div>\r\n        </ModalPopup>\r\n\r\n    )\r\n};\r\n\r\nexport default AboutPopup;\r\n","import {Point, Segment, Arc, Circle, Box, Polygon} from \"@flatten-js/core\";\r\nimport {CW, ORIENTATION} from \"@flatten-js/core\";\r\n\r\nimport XMLWriter from \"xml-writer\";\r\n\r\nfunction pointToXMLString(xw, shape) {\r\n    xw.startElement('point');\r\n        xw.writeAttribute('x', shape.geom.x);\r\n        xw.writeAttribute('y', shape.geom.y);\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction segmentToXMLString(xw, shape) {\r\n    xw.startElement('segment');\r\n        xw.writeAttribute('xs', shape.geom.ps.x);\r\n        xw.writeAttribute('ys', shape.geom.ps.y);\r\n        xw.writeAttribute('xe', shape.geom.pe.x);\r\n        xw.writeAttribute('ye', shape.geom.pe.y);\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction arcToXMLString(xw, shape) {\r\n    xw.startElement('arc');\r\n        xw.writeAttribute('xs', Math.round(shape.geom.start.x));\r\n        xw.writeAttribute('ys', Math.round(shape.geom.start.y));\r\n        xw.writeAttribute('xe', Math.round(shape.geom.end.x));\r\n        xw.writeAttribute('ye', Math.round(shape.geom.end.y));\r\n        xw.writeAttribute('xc', shape.geom.center.x);\r\n        xw.writeAttribute('yc', shape.geom.center.y);\r\n        xw.writeAttribute('cw', shape.geom.counterClockwise === CW ? \"yes\" : \"no\");\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction circleToXMLString(xw, shape) {\r\n    xw.startElement('circle');\r\n        xw.writeAttribute('xc', shape.geom.center.x);\r\n        xw.writeAttribute('yc', shape.geom.center.y);\r\n        xw.writeAttribute('label', shape.label);\r\n    xw.endElement();\r\n}\r\n\r\nfunction boxToXMLString(xw, shape) {\r\n\r\n}\r\n\r\nfunction polygonToXMlString(xw, polygon) {\r\n    xw.startElement('profile');\r\n\r\n    for (let face of polygon.faces) {\r\n        if (face.orientation() === ORIENTATION.CW) {\r\n            xw.startElement('island');\r\n        }\r\n        else {\r\n            xw.startElement('hole');\r\n        }\r\n\r\n        xw.writeAttribute('n_edges', `${face.size}`);\r\n\r\n        for (let edge of face) {\r\n            xw.startElement('edge');\r\n            let shape = edge.shape;\r\n            if (shape instanceof Segment) {\r\n                xw.writeAttribute('type', 'segment');\r\n                xw.writeAttribute('xs', shape.ps.x);\r\n                xw.writeAttribute('ys', shape.ps.y);\r\n                xw.writeAttribute('xe', shape.pe.x);\r\n                xw.writeAttribute('ye', shape.pe.y);\r\n            } else if (edge.shape instanceof Arc) {\r\n                xw.writeAttribute('type', 'curve');\r\n                xw.writeAttribute('xs', Math.round(shape.start.x));\r\n                xw.writeAttribute('ys', Math.round(shape.start.y));\r\n                xw.writeAttribute('xe', Math.round(shape.end.x));\r\n                xw.writeAttribute('ye', Math.round(shape.end.y));\r\n                xw.writeAttribute('xc', shape.center.x);\r\n                xw.writeAttribute('yc', shape.center.y);\r\n                xw.writeAttribute('cw', shape.counterClockwise === CW ? \"yes\" : \"no\");\r\n            } else {\r\n                xw.writeAttribute('type', 'unknown');\r\n            }\r\n            xw.endElement();\r\n        }\r\n\r\n        xw.endElement();  // island or hole\r\n    }\r\n\r\n    xw.endElement();     // profile\r\n}\r\n\r\nexport function createXMLString(shapes) {\r\n    let xw = new XMLWriter(true);\r\n    xw.startDocument('1.0', 'UTF-8');\r\n\r\n    xw.startElement('shapes');\r\n    xw.startElement('title').text('test polygon in xml format').endElement();\r\n\r\n    for (let shape of shapes) {\r\n        if (shape.geom instanceof Point) {\r\n            pointToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Segment) {\r\n            segmentToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Arc) {\r\n            arcToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Circle) {\r\n            circleToXMLString(xw, shape);\r\n        }\r\n        else if (shape.geom instanceof Box) {\r\n            boxToXMLString(xw, shape)\r\n        }\r\n        else if (shape.geom instanceof Polygon) {\r\n            polygonToXMlString(xw, shape.geom);\r\n        }\r\n    }\r\n\r\n    xw.endDocument();\r\n    return xw.toString();\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport ModalPopup from \"../UI/ModalPopup/ModalPopup\";\r\nimport {createXMLString} from \"../../dataParsers/createXML\";\r\n\r\nimport classes from \"./DownloadPopup.module.css\";\r\n\r\nclass DownloadPopup extends Component {\r\n    render() {\r\n        let downloadData = this.props.showPopup ?\r\n            this.props.layers.map( layer => {\r\n            return layer.displayed ? {\r\n                filename: `${layer.name}.xml`,\r\n                xmlString: createXMLString(layer.shapes)\r\n            } : null\r\n        }) : [];\r\n        return this.props.showPopup && this.props.layers.length > 0 ? (\r\n            <ModalPopup\r\n                showPopup={this.props.showPopup}\r\n                closePopup={this.props.closePopup}\r\n                header=\"Download files\"\r\n            >\r\n                <div className={classes.DownloadPopup}>\r\n                    <h5>Click to the following links to start download</h5>\r\n                    <ul>\r\n\r\n                        {downloadData.map(data =>\r\n                            data === null ? null :\r\n                            <li key={data.filename}>\r\n                                <a href={'data:text/json;charset=utf-8,' + encodeURIComponent(data.xmlString)}\r\n                                   download={data.filename}>\r\n                                    {data.filename}\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n\r\n                    </ul>\r\n                </div>\r\n            </ModalPopup>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default DownloadPopup;\r\n","import /*React,*/ {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as cloudActions from '../../store/actions/cloudStorageActions';\r\n\r\nclass CloudDocument extends Component {\r\n    state={\r\n        done:false\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.stage && !this.state.done) {\r\n            this.props.fetchDocumentFromDatabase(this.props.stage, this.props.match.params.id);\r\n            this.setState({done:true});\r\n        }\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({app}) => {\r\n    return {\r\n        stage: app.stage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchDocumentFromDatabase: (stage, id) => dispatch(cloudActions.fetchDocumentFromDatabase(stage, id)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CloudDocument);\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ToolbarComponent from '../../components/MainComponent/ToolbarComponent/ToolbarComponent';\r\nimport CanvasComponent from '../../components/MainComponent/CanvasComponent/CanvasComponent';\r\nimport StatusComponent from '../../components/Layout/StatusComponent/StatusComponent';\r\n\r\nimport StageComponent from \"../../components/MainComponent/GraphicsComponent/stageComponent\";\r\nimport LayersComponent from '../../components/MainComponent/GraphicsComponent/layersComponent';\r\n\r\nimport * as actions from '../../store/actions/appActions';\r\nimport * as layerActions from \"../../store/actions/layersActions\";\r\nimport * as cloudActions from '../../store/actions/cloudStorageActions';\r\n\r\nimport Layers from '../../models/layers';\r\nimport MeasurePointsTool from '../../tools/measurePointsTool';\r\nimport MeasureShapesTool from \"../../tools/measureShapesTool\";\r\nimport DisplayCoordsTool from \"../../tools/displayCoordsTool\";\r\n\r\nimport AboutPopup from \"../../components/AboutPopup/AboutPopup\";\r\nimport DownloadPopup from \"../../components/DownloadPopup/DownloadPopup\";\r\n\r\nimport CloudDocument from '../../components/Constructions/CloudDocument';\r\n\r\nimport styles from './MainComponent.module.css';\r\n\r\nclass MainComponent extends Component {\r\n    handleFileSelect = (event) => {\r\n        if (!(File && FileReader && FileList)) return;\r\n        let files = event.target.files; // FileList object\r\n        this.props.handleFileSelect(files, this.props.stage, this.props.layers);\r\n    };\r\n\r\n    setHomeView = () => {\r\n        let layer = Layers.getAffected(this.props.layers);\r\n        if (!layer) return;\r\n        this.props.setHomeView(this.props.stage, layer);\r\n        this.forceUpdate();       // ??? unclear why on Home button click not updated\r\n    };\r\n\r\n    onSaveDocumentButtonClicked = () => {\r\n        if (this.props.layers.length === 0) return;   // nothing to save\r\n        // this.props.stage.img.crossOrigin=\"anonymous\";\r\n        let dataURL = null;\r\n        try {\r\n            dataURL = this.props.stage.toDataURL();\r\n        }\r\n        catch(e) {\r\n            console.log(e)\r\n        }\r\n        let payload = {\r\n            name: this.props.document.name === \"\" ?\r\n                cloudActions.getNewName(this.props.documentsList) : this.props.document.name,\r\n            dataURL: dataURL,\r\n            lastUpdated: new Date().toLocaleDateString() + \" \" + new Date().toLocaleTimeString(),\r\n            // token: this.props.token,\r\n            userId: this.props.userId\r\n        };\r\n\r\n        if (this.props.document.id) {\r\n            this.props.updateDocumentInDatabase(this.props.document.id, payload, this.props.layers);\r\n        }\r\n        else {\r\n            this.props.addDocumentToDatabase(payload, this.props.layers, this.props.history);\r\n        }\r\n    };\r\n\r\n    clearCurrentDocument = () => {\r\n        this.props.clearCurrentDocument();\r\n        this.props.clearAllLayers();\r\n        this.props.history.push(\"/\");\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        // let ctrl = e.ctrlKey;\r\n        if (e.target.id !== \"mainCanvas\")\r\n            return;\r\n        switch (e.code) {\r\n            case \"KeyH\":\r\n                this.setHomeView();\r\n                break;\r\n\r\n            case \"KeyW\":\r\n                this.props.toggleWidthMode();     // toggle width On/Off in graphics model\r\n                break;\r\n\r\n            case \"KeyE\":\r\n                this.props.toggleDisplayVertices();  // toggle vertices On/Off\r\n                break;\r\n\r\n            case \"ArrowRight\":\r\n                break;\r\n\r\n            case \"ArrowLeft\":\r\n                break;\r\n            case \"ArrowUp\":\r\n                break;\r\n            case \"ArrowDown\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onImageLoaded = (model, layer, image) => {\r\n        this.props.setHomeView(this.props.stage, layer);\r\n        this.forceUpdate();       // ??? unclear why on Home button click not updated\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onresize = this.props.resizeStage;\r\n        // Keyboard event\r\n        // var _keydown = _.throttle(this.keydown, 100);\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n        // var _keyup = _.throttle(this.keyup, 500);\r\n        document.addEventListener('keyup', this.handleKeyUp);\r\n\r\n        // if (this.props.document.id === undefined) {\r\n        //     this.props.history.push(\"/\");\r\n        // }\r\n        // if (this.props.document.id !== undefined) {\r\n        //     this.props.history.push(\"/documents/\" + this.props.document.id)\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        let displayCoordsTool = this.props.stage ? (\r\n            <DisplayCoordsTool\r\n                key=\"displayCoordinatedTool\"\r\n                stage={this.props.stage}\r\n                units={this.props.units}\r\n                divisor={this.props.divisor}\r\n                decimals={this.props.decimals}\r\n                coordX={this.props.mouse.x}\r\n                coordY={this.props.mouse.y}\r\n            />\r\n        ) : null;\r\n\r\n        let measurePointsTool = this.props.measurePointsActive ? <MeasurePointsTool /> : null;\r\n\r\n        let measuredLayersDisplayed = this.props.measureShapesTool.firstMeasuredShape &&\r\n            this.props.measureShapesTool.secondMeasuredShape &&\r\n            this.props.measureShapesTool.firstMeasuredLayer.displayed &&\r\n            this.props.measureShapesTool.secondMeasuredLayer.displayed;\r\n\r\n        let measureShapesTool = this.props.measureShapesTool.distance &&\r\n        this.props.measureShapesTool.shortestSegment && measuredLayersDisplayed ? (\r\n            <MeasureShapesTool\r\n                key=\"MeasureShapesTool\"\r\n                stage={this.props.stage}\r\n                firstMeasuredShape={this.props.measureShapesTool.firstMeasuredShape}\r\n                secondMeasuredShape={this.props.measureShapesTool.secondMeasuredShape}\r\n                firstMeasuredLayer={this.props.measureShapesTool.firstMeasuredLayer}\r\n                secondMeasuredLayer={this.props.measureShapesTool.secondMeasuredLayer}\r\n                distance={this.props.measureShapesTool.distance}\r\n                shortestSegment={this.props.measureShapesTool.shortestSegment}\r\n                divisor={this.props.divisor}\r\n                decimals={this.props.decimals}\r\n            />\r\n        ) : null;\r\n\r\n        return (\r\n            <main className={styles[\"Main-content\"]}>\r\n                <ToolbarComponent\r\n                    measurePointsActive={this.props.measurePointsActive}\r\n                    units={this.props.units}\r\n                    showSkeletonRecognitionButton={this.props.showSkeletonRecognitionButton}\r\n                    onFileSelected={this.handleFileSelect}\r\n                    onHomeButtonPressed={this.setHomeView}\r\n                    onPanByDragPressed={this.props.togglePanByDrag}\r\n                    onMeasurePointsButtonPressed={this.props.toggleMeasureBetweenPoints}\r\n                    onMeasureBetweenShapesButtonPressed={this.props.toggleMeasureBetweenShapes}\r\n                    onToggleWidthModePressed={this.props.toggleWidthMode}\r\n                    onToggleVerticesPressed={this.props.toggleDisplayVertices}\r\n                    onToggleLabelsPressed={this.props.toggleDisplayLabels}\r\n                    onShowAboutPopupPressed={this.props.toggleAboutPopup}\r\n                    onSkeletonRecognitionButtonPressed={this.props.applySkeletonRecognition}\r\n                    onUnitClicked={this.props.toggleUnits}\r\n                    onSaveDocumentButtonClicked={this.onSaveDocumentButtonClicked}\r\n                    onClearAllButtonClicked={this.clearCurrentDocument}\r\n                    onLayerListButtonClicked={this.props.toggleLayerList}\r\n                    onShowDownloadPopupPressed={this.props.toggleDownloadPopup}\r\n                />\r\n\r\n                <CanvasComponent />\r\n\r\n                { this.props.stage ? (\r\n                <StageComponent\r\n                    stage={this.props.stage}\r\n                    onStageUnmounted={this.props.destroyStage}\r\n                >\r\n                    <LayersComponent\r\n                        stage={this.props.stage}\r\n                        layers={this.props.layers}\r\n                        displayVertices={this.props.displayVertices}\r\n                        displayLabels={this.props.displayLabels}\r\n                        widthOn={this.props.widthOn}\r\n                        zoomFactor={this.props.zoomFactor}\r\n                        hoveredShape={this.props.measureShapesTool.hoveredShape}\r\n                        firstMeasuredShape={this.props.measureShapesTool.firstMeasuredShape}\r\n                        secondMeasuredShape={this.props.measureShapesTool.secondMeasuredShape}\r\n                        onMouseOver={this.props.handleMouseRollOverShape}\r\n                        onMouseOut={this.props.handleMouseRollOutShape}\r\n                        onClick={this.props.handleClickOnShape}\r\n                        setHomeView={this.props.setHomeView}\r\n                        onImageLoaded={this.onImageLoaded}\r\n                    />\r\n                    {displayCoordsTool}\r\n                    {measurePointsTool}\r\n                    {measureShapesTool}\r\n                </StageComponent> ) : null }\r\n\r\n                <StatusComponent />\r\n\r\n                <AboutPopup\r\n                    showAboutPopup={this.props.showAboutPopup}\r\n                    toggleAboutPopup={this.props.toggleAboutPopup}\r\n                    title={this.props.title}\r\n                    version={this.props.version}\r\n                    build={this.props.build}\r\n                />\r\n\r\n                <DownloadPopup\r\n                    showPopup={this.props.showDownloadPopup}\r\n                    closePopup={this.props.toggleDownloadPopup}\r\n                    title=\"Download document\"\r\n                    layers={this.props.layers}\r\n                />\r\n\r\n                <Route path=\"/documents/:id\" component={CloudDocument}/>\r\n\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stage: state.app.stage,\r\n        title: state.app.title,\r\n        version: state.app.version,\r\n        build: state.app.build,\r\n        displayVertices: state.app.displayVertices,\r\n        displayLabels: state.app.displayLabels,\r\n        widthOn: state.app.widthOn,\r\n        zoomFactor: state.app.zoomFactor,\r\n        units: state.app.units,\r\n        showSkeletonRecognitionButton: state.app.showSkeletonRecognitionButton,\r\n        divisor: state.app.divisor,\r\n        decimals: state.app.decimals,\r\n        measurePointsActive: state.app.measurePointsActive,\r\n        showAboutPopup: state.app.showAboutPopup,\r\n        showDownloadPopup: state.app.showDownloadPopup,\r\n        layers: state.layers,\r\n        mouse: state.mouse,\r\n        measureShapesTool: state.measureShapesTool,\r\n\r\n        document: state.cloudStorage.document,\r\n        documentsList: state.cloudStorage.documentsList,\r\n        // onManageCloudStorageButtonClicked: ownProps.onManageCloudStorageButtonClicked\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        resizeStage: () => dispatch(actions.resizeStage()),\r\n        destroyStage: () => dispatch(actions.destroyStage()),\r\n        handleFileSelect: (files, stage, layers) => dispatch(actions.handleFileSelect(files, stage, layers)),\r\n        setHomeView: (stage, shape) => dispatch(actions.setHomeView(stage, shape)),\r\n        toggleUnits: () => dispatch(actions.toggleUnits()),\r\n        toggleWidthMode: () => dispatch(actions.toggleWidthMode()),\r\n        toggleDisplayVertices: () => dispatch(actions.toggleDisplayVertices()),\r\n        toggleDisplayLabels: () => dispatch(actions.toggleDisplayLabels()),\r\n        toggleAboutPopup: () => dispatch(actions.toggleAboutPopup()),\r\n        toggleMeasureBetweenPoints: () => dispatch(actions.toggleMeasureBetweenPoints()),\r\n        toggleMeasureBetweenShapes: () => dispatch(actions.toggleMeasureBetweenShapes()),\r\n        togglePanByDrag: () => dispatch(actions.togglePanByDrag()),\r\n        toggleLayerList: () => dispatch(actions.toggleLayerList()),\r\n        toggleDownloadPopup: () => dispatch(actions.toggleDownloadPopup()),\r\n        applySkeletonRecognition: () => dispatch(actions.applySkeletonRecognition()),\r\n        handleMouseRollOverShape: (shape) => dispatch(actions.handleMouseRollOverShape(shape)),\r\n        handleMouseRollOutShape: () => dispatch(actions.handleMouseRollOutShape()),\r\n        handleClickOnShape: (shape, layer) => dispatch(actions.handleClickOnShape(shape, layer)),\r\n\r\n        clearAllLayers: () => dispatch(layerActions.deleteAllLayers()),\r\n\r\n        addDocumentToDatabase: (payload, layers, history) => dispatch(cloudActions.addDocumentToDatabase(payload, layers, history)),\r\n        updateDocumentInDatabase: (id, payload, layers) => dispatch(cloudActions.updateDocumentInDatabase(id, payload, layers)),\r\n        clearCurrentDocument: () => dispatch(cloudActions.clearCurrentDocument())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent);\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\nimport React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nimport styles from './LayerListToolbar.module.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n\r\nconst LayerListToolbar = (props) => {\r\n    return (\r\n        <div className={styles[\"Layer-list-toolbar\"]}>\r\n            <button title=\"Add layer\" onClick={props.onAddLayerButtonClicked}>\r\n                <FontAwesome\r\n                    name='plus'\r\n                    size='2x'\r\n                    style={{color: \"grey\"}}\r\n                />\r\n            </button>\r\n            <button title=\"Edit selected layer's name and info\" onClick={props.onEditLayerButtonClicked}>\r\n                <FontAwesome\r\n                    name='pencil-alt'\r\n                    size='2x'\r\n                    style={{color: \"grey\"}}\r\n                />\r\n            </button>\r\n            <button title=\"Delete selected layer\" onClick={props.onDeleteLayerButtonClicked}>\r\n                <FontAwesome\r\n                    name='trash-alt'\r\n                    size='2x'\r\n                    style={{color: \"grey\"}}\r\n                />\r\n            </button>\r\n            <button title=\"Sort layer list\" onClick={props.onSortLayersButtonClicked}>\r\n                <FontAwesome\r\n                    name='sort-alpha-down'\r\n                    size='2x'\r\n                    style={{color: \"grey\"}}\r\n                />\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LayerListToolbar;\r\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './LayerEditForm.module.css';\r\n\r\nconst LayerEditForm = (props) => {\r\n    let onSubmitLayerEditForm = (ev) => {\r\n        if (!ev)\r\n            return false;\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n        let name = ev.currentTarget[0].value;\r\n        let title = ev.currentTarget[1].value;\r\n        let newLayer = Object.assign({}, props.layer, {\r\n            name: name,\r\n            title: title\r\n        });\r\n        props.onSubmitLayerEditForm(newLayer);\r\n        return false;\r\n    };\r\n\r\n    let setFocus = (ev) => {\r\n        ev.stopPropagation();\r\n        ev.target.focus();\r\n    };\r\n\r\n    let onCancelLayerEditForm = (ev) => {\r\n        props.onEscapeLayerEditForm();\r\n    };\r\n\r\n    let onMouseMoveHandler = (ev) => {\r\n        ev.stopPropagation();\r\n    };\r\n\r\n    return (\r\n        <form className={styles[\"Layer-edit-form\"]}\r\n              id=\"layerEditForm\"\r\n              action=\"\"\r\n              onSubmit={onSubmitLayerEditForm}\r\n              onMouseMove={onMouseMoveHandler}\r\n        >\r\n            <article>\r\n            <label>Name:</label>\r\n            <input type=\"text\" id=\"layer-name\" name=\"layerName\" defaultValue={props.layer.name}\r\n                   onClick={setFocus}  />\r\n            </article>\r\n            <article>\r\n            <label>Description:</label>\r\n            <textarea id=\"layer-title\" name=\"layerTitle\" cols=\"70\" rows=\"3\" defaultValue={props.layer.title}\r\n                      onClick={setFocus}>\r\n            </textarea>\r\n            </article>\r\n            <input type=\"submit\" style={{display:\"none\"}}/>\r\n            <button onClick={onCancelLayerEditForm}>Cancel</button>\r\n            <button onClick={(ev) => onSubmitLayerEditForm(ev.target.parent)}>OK</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default LayerEditForm;\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport ModalPopup from \"../../UI/ModalPopup/ModalPopup\";\r\nimport LayerEditForm from \"../LayerEditForm/LayerEditForm\";\r\nimport styles from './LayerListElement.module.css';\r\n\r\nclass LayerListElement extends Component {\r\n    componentDidUpdate() {\r\n        if (document.activeElement.nodeName === \"CANVAS\")\r\n            return;\r\n        let elem = this.refs.layerName;\r\n        if (this.props.layer.affected) {\r\n            elem.focus();\r\n        }\r\n    }\r\n\r\n    rgba(hex, opacity) {\r\n        let r, g, b, percent;\r\n        if (hex) {\r\n            hex = hex.replace('#', '');\r\n            r = parseInt(hex.substring(0, 2), 16);\r\n            g = parseInt(hex.substring(2, 4), 16);\r\n            b = parseInt(hex.substring(4, 6), 16);\r\n            percent = opacity;\r\n        }\r\n        else {\r\n            r = 147;\r\n            g = 128;\r\n            b = 108;\r\n            percent = 0;\r\n        }\r\n        let result = `rgba(${r},${g},${b},${percent / 100})`;\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        // let style = this.props.layer.displayed ?\r\n        //     styleSheet.displayed : styleSheet.undisplayed;\r\n\r\n        let displayed = this.props.layer.displayed ? \"Layer-displayed\" : \"Layer-undisplayed\";\r\n        let color = displayed ? this.rgba(this.props.layer.color, 100) : this.rgba();\r\n        let bgcolor = displayed ? this.rgba(this.props.layer.color, 30) : this.rgba();\r\n        let alpha = this.props.layer.affected ? 1 : 0;\r\n        let layerNameOpacity = this.props.layer.shapes.length === 0 ? 0.6 : 1.0;\r\n        return [\r\n            <li key={1}\r\n                className={styles.Layer}\r\n                onClick={this.props.onLayerClicked}\r\n                onDoubleClick={this.props.onLayerDoubleClicked}>\r\n\r\n                <div className={styles.LayerSelectionBox}\r\n                     onClick={this.props.onAffectedBoxClicked}\r\n                >\r\n                    <h4 className={styles.LayerSelectionMark}\r\n                        style={{opacity: alpha, color: color}}>\r\n                        ✓\r\n                    </h4>\r\n                </div>\r\n\r\n                <div className={styles.LayerNameBox}\r\n                     style={{backgroundColor: bgcolor, opacity: layerNameOpacity}}>\r\n                    <h4 ref=\"layerName\"\r\n                        title={this.props.layer.name}\r\n                        tabIndex='1'\r\n                    >\r\n                        {this.props.layer.name}\r\n                    </h4>\r\n                </div>\r\n\r\n            </li>,\r\n\r\n            <ModalPopup\r\n                key={2}\r\n                showPopup={this.props.layer.edited}\r\n                closePopup={this.props.onEscapeLayerEditForm}\r\n                header=\"Layer properties\"\r\n            >\r\n                <LayerEditForm\r\n                    layer={this.props.layer}\r\n                    onSubmitLayerEditForm={this.props.onSubmitLayerEditForm}\r\n                    onEscapeLayerEditForm={this.props.onEscapeLayerEditForm}\r\n                />\r\n            </ModalPopup>\r\n        ]\r\n    }\r\n}\r\n\r\nexport default LayerListElement;\r\n","/**\r\n * Created by alexanderbol on 17/04/2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport LayerListToolbar from \"../../components/LayersList/LayerListToolbar/LayerListToolbar\";\r\nimport LayerListElement from '../../components/LayersList/LayerListElement/LayerListElement';\r\nimport * as actions from '../../store/actions/layersActions';\r\nimport { connect } from 'react-redux';\r\nimport styles from './LayersList.module.css';\r\n\r\nclass LayersList extends Component {\r\n    height = 0;\r\n\r\n    handleKeyDown = (e) => {\r\n        // e.stopPropagation();\r\n        // e.preventDefault();\r\n\r\n        if (e.target.parentElement.parentElement &&\r\n            e.target.parentElement.parentElement.parentElement &&\r\n            e.target.parentElement.parentElement.parentElement.id &&\r\n            e.target.parentElement.parentElement.parentElement.id === \"layersList\") {\r\n\r\n\r\n            switch (e.code) {\r\n                case \"ArrowRight\":\r\n                case \"ArrowDown\":\r\n                    this.props.setAffectedNextLayer();\r\n                    break;\r\n                case \"ArrowLeft\":\r\n                case \"ArrowUp\":\r\n                    this.props.setAffectedPrevLayer();\r\n                    break;\r\n                /* tab does not work properly\r\n            case \"Tab\":\r\n                if (e.shiftKey) {\r\n                    this.dispatch({\r\n                        type: ActionTypes.LAYERS_LIST_ARROW_UP_PRESSED\r\n                    });\r\n                }\r\n                else {\r\n                    this.dispatch({\r\n                        type: ActionTypes.LAYERS_LIST_ARROW_DOWN_PRESSED\r\n                    });\r\n                }\r\n                break;\r\n                */\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    onLayerListClicked = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Keyboard event\r\n        // var _keydown = _.throttle(this.keydown, 100);\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n        // var _keyup = _.throttle(this.keyup, 500);\r\n        // document.addEventListener('keyup', this.handleKeyUp);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.height = this.refs.layersComponent.clientHeight;\r\n    }\r\n\r\n    render() {\r\n        const style = this.props.showLayerList ? styles[\"App-layers-displayed\"] : styles[\"App-layers\"];\r\n        return (\r\n            <div className={style}\r\n                 ref=\"layersComponent\"\r\n                 onClick={this.onLayerListClicked}\r\n            >\r\n                {/*<h5>Layers</h5>*/}\r\n                <LayerListToolbar\r\n                    onAddLayerButtonClicked={() => this.props.onAddLayerButtonClicked(this.props.stage)}\r\n                    onEditLayerButtonClicked={this.props.onEditLayerButtonClicked}\r\n                    onDeleteLayerButtonClicked={this.props.onDeleteLayerButtonClicked}\r\n                    onSortLayersButtonClicked={this.props.onSortLayersButtonClicked}\r\n                />\r\n                <ul id=\"layersList\"\r\n                    style={{maxHeight:0.82*(this.height-40)}}>\r\n                { this.props.layers.map((layer) =>\r\n                    <LayerListElement\r\n                        key={layer.name}\r\n                        layer={layer}\r\n                        onLayerClicked={() => this.props.onLayerClicked(layer)}\r\n                        onAffectedBoxClicked={(event) => this.props.onAffectedBoxClicked(event, layer)}\r\n                        onSubmitLayerEditForm={this.props.onSubmitLayerEditForm}\r\n                        onEscapeLayerEditForm={this.props.onEscapeLayerEditForm}\r\n                    />)\r\n                }\r\n                </ul>\r\n                {/*{addLayer}*/}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage,\r\n        showLayerList: state.app.showLayerList         // on mobile device\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddLayerButtonClicked: (stage) => dispatch(actions.addEmptyLayer(stage)),\r\n        onEditLayerButtonClicked: () => dispatch(actions.openAffectedLayerEditForm()),\r\n        onDeleteLayerButtonClicked: () => dispatch(actions.deleteAffectedLayer()),\r\n        onSortLayersButtonClicked: () => dispatch(actions.sortLayers()),\r\n        onLayerClicked: (layer) => dispatch(actions.toggleDisplayLayer(layer)),\r\n        onAffectedBoxClicked: (event, layer) => dispatch(actions.toggleAffectedLayer(event, layer)),\r\n        onSubmitLayerEditForm: (newLayer) => dispatch(actions.updateLayer(newLayer)),\r\n        onEscapeLayerEditForm: () => dispatch(actions.closeEditLayerForm()),\r\n        setAffectedNextLayer: () => dispatch(actions.setAffectedNextLayer()),\r\n        setAffectedPrevLayer: () => dispatch(actions.setAffectedPrevLayer())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LayersList);\r\n\r\n// export default LayersList;","/**\r\n * Created by alexanderbol on 06/05/2017.\r\n */\r\n\r\nimport React from 'react';\r\nimport styles from './AsideComponent.module.css';\r\n\r\nconst AsideComponent = () => {\r\n    return (\r\n        <aside className={styles[\"App-aside\"]}>\r\n            <h5>&nbsp;</h5>\r\n        </aside>\r\n    )\r\n};\r\n\r\nexport default AsideComponent;\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as ActionTypes from \"./store/actionTypes\";\r\nimport * as cloudActions from \"./store/actions/cloudStorageActions\";\r\nimport MainComponent from \"./containers/MainComponent/MainComponent\";\r\nimport LayersList from \"./containers/LayerList/LayersList\";\r\nimport AsideComponent from \"./components/Layout/AsideComponent/AsideComponent\";\r\n// import DocumentName from \"./components/MainComponent/DocumentName/DocumentName\";\r\n\r\nconst appBody = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            {/*<DocumentName name={props.document.name}*/}\r\n                          {/*username={props.username}*/}\r\n                          {/*updateDocumentName={props.updateDocumentName} />*/}\r\n            <div className=\"App-body\" onPaste={props.pasteDataFromBuffer}>\r\n                <MainComponent history={props.history}\r\n                               onManageCloudStorageButtonClicked={props.onManageCloudStorageButtonClicked}\r\n                />\r\n                <LayersList/>\r\n                <AsideComponent/>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({cloudStorage, auth}) => {\r\n    return {\r\n        document: cloudStorage.document,\r\n        username: auth.username\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        pasteDataFromBuffer: (event) => dispatch({\r\n            type: ActionTypes.DATA_FROM_BUFFER_PASTED,\r\n            data: event.clipboardData\r\n        }),\r\n        updateDocumentName: (name) => dispatch(cloudActions.updateDocumentName(name))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(appBody);\r\n","/**\r\n * Created by alexanderbol on 13/04/2017.\r\n */\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classes from './HeaderComponent.module.css';\r\n// import Logo from './Logo/Logo';\r\n// import Navigation from './Navigation/Navigation';\r\n\r\nconst HeaderComponent = (props) => {\r\n    const style = props.location.pathname === \"/documents\" ?\r\n        classes[\"App-header-documents-page\"] :\r\n        classes[\"App-header\"];\r\n    return (\r\n        <header className={style}>\r\n            <h2>Debug Viewer</h2>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default withRouter(HeaderComponent);\r\n\r\n/*\r\n<header className={style}>\r\n    <Logo />\r\n    <Navigation isAuthenticated={props.isAuthenticated} />\r\n    {props.isAuthenticated ? <span>Hello {props.username}</span> : null}\r\n    {props.location.pathname === \"/documents\" ? <hr/> : null}\r\n</header>\r\n*/","import /*React,*/ {Component} from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport Layers from \"../../models/layers\";\r\nimport {parseODB} from \"../../dataParsers/parserODB\";\r\nimport Model from \"../../models/model\";\r\nimport * as ActionTypes from \"../../store/actionTypes\";\r\nimport * as actions from '../../store/actions/appActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Demo extends Component {\r\n    state={\r\n        done:false\r\n    };\r\n    componentDidUpdate() {\r\n        if (this.props.stage && !this.state.done) {\r\n            let stage = this.props.stage;\r\n            let layers = this.props.layers;\r\n\r\n            let layer = Layers.newLayer(stage, layers);\r\n            layer.color = Layers.getNextColor(layers);\r\n            layer.name = \"features\";\r\n            layer.title = \"features\";\r\n            layer.affected = true;\r\n            layer.displayed = true;\r\n\r\n            axios(\"https://gist.githubusercontent.com/alexbol99/825fdf2dd508467cc852eb22aa36183d/raw/d10e853338afd8294eeb3ffdebe3bc380477a978/features\")\r\n                .then( (resp) => {\r\n                    let job = parseODB(\"features\", resp.data);\r\n\r\n                    for (let shape of job.shapes) {\r\n                        let model = new Model(shape, undefined, shape.label);\r\n                        layer.add(model);\r\n                    }\r\n\r\n                    this.props.panAndZoomToShape(stage, layer);\r\n                    this.props.addNewLayer(layer);\r\n                    this.props.asyncOperationEnded();\r\n                });\r\n            this.setState({done:true});\r\n            this.props.asyncOperationStarted();\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        panAndZoomToShape: (stage, layer) => dispatch({\r\n            type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n            stage: stage,\r\n            shape: layer\r\n        }),\r\n        addNewLayer: (layer) => dispatch({\r\n            type: ActionTypes.ADD_NEW_LAYER,\r\n            layer: layer\r\n        }),\r\n        asyncOperationStarted: () => dispatch(actions.asyncOperationStarted()),\r\n        asyncOperationEnded: () => dispatch(actions.asyncOperationEnded())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Demo);\r\n","import /*React,*/ {Component} from 'react';\r\nimport * as ActionTypes from \"../../store/actionTypes\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass SkeletonRecognition extends Component {\r\n    componentDidMount() {\r\n        this.props.applySkeletonRecognition();\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        applySkeletonRecognition: () => dispatch({type: ActionTypes.SKELETON_RECOGNITION_URI})\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SkeletonRecognition);\r\n","import Flatten from \"@flatten-js/core\";\r\nimport {Vector, Segment, Arc, Line, Box, Polygon} from \"@flatten-js/core\";\r\n// let Flatten = require('flatten-js');\r\n\r\n// let {Vector, Segment, Arc, Line, Box, Polygon} = Flatten;\r\n\r\nclass CollisionDistance {\r\n    static apply(polygon1, polygon2) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        for (let edge of [...polygon2.edges]) {\r\n            let distance = CollisionDistance.edge2polygon(edge, polygon1);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static edge2polygon(edge2, polygon1) {\r\n        let shapeBox = edge2.shape.box;\r\n        let box = new Box(\r\n            Number.NEGATIVE_INFINITY,\r\n            shapeBox.ymin,\r\n            Number.POSITIVE_INFINITY,\r\n            shapeBox.ymax\r\n        );\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        let resp_edges =  polygon1.edges.search(box);\r\n        for (let edge1 of resp_edges) {\r\n            let distance;\r\n            if (edge1.shape instanceof Segment && edge2.shape instanceof Segment) {\r\n                distance = CollisionDistance.segment2segment(edge1.shape, edge2.shape);\r\n            }\r\n            else if (edge1.shape instanceof Arc && edge2.shape instanceof Segment) {\r\n                distance = CollisionDistance.segment2arc(edge2.shape, edge1.shape);\r\n            }\r\n            else if (edge1.shape instanceof Segment && edge2.shape instanceof Arc) {\r\n                distance = CollisionDistance.segment2arc(edge1.shape, edge2.shape);\r\n            }\r\n            else if (edge1.shape instanceof Arc && edge2.shape instanceof Arc) {\r\n                distance = CollisionDistance.arc2arc(edge1.shape, edge2.shape);\r\n            }\r\n\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static point2shape(point, shape) {\r\n        let line = new Line(point, new Vector(0,1));\r\n        let intersections = line.intersect(shape);          // segment or arc\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        for (let ip of intersections) {\r\n            // eslint-disable-next-line\r\n            let [distance, shortest_segment] = point.distanceTo(ip);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static segment2segment(segment1, segment2) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        for (let point of segment1.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, segment2);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        for (let point of segment2.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, segment1);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static segment2arc(segment, arc) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        let v_s = new Vector(segment.start, segment.end);\r\n        v_s = v_s.normalize();\r\n\r\n        let v_n = [v_s.rotate90CCW().multiply(arc.r), v_s.rotate90CW().multiply(arc.r)];\r\n        let distance;\r\n\r\n        // Distance between tangent point and segment\r\n        for (let v of v_n) {\r\n            let tangent_point = arc.center.translate(v);  // tangent point in direction of the normal vector\r\n            if (tangent_point.on(arc)) {\r\n                distance = CollisionDistance.point2shape(tangent_point, segment);\r\n                if (distance < collision_distance) {\r\n                    collision_distance = distance;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let point of arc.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, segment);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        for (let point of segment.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, arc);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static arc2arc(arc1, arc2) {\r\n        let collision_distance = Number.POSITIVE_INFINITY;\r\n        let distance;\r\n\r\n        // test translation of arc2.center to arc1 enlarged by r2\r\n        let arc_enlarged = arc1.clone();\r\n        arc_enlarged.r += arc2.r;\r\n        distance = CollisionDistance.point2shape(arc2.center, arc_enlarged);\r\n        if (distance < collision_distance) {\r\n            // additional check that transformed arc actually touching\r\n            // eslint-disable-next-line\r\n            let [dist_tmp, shortest_segment_tmp] =\r\n                arc1.distanceTo( CollisionDistance.translateArc(arc2, new Vector(-distance,0)));\r\n            if (Flatten.Utils.EQ_0(dist_tmp)) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n\r\n        // test translation of arc2.center to arc1 reduced by r2\r\n        if (Flatten.Utils.GE(arc1.r, arc2.r)) {\r\n            let arc_reduced = arc1.clone();\r\n            arc_reduced.r -= arc2.r;\r\n            distance = CollisionDistance.point2shape(arc2.center, arc_reduced);\r\n            if (distance < collision_distance) {\r\n                // additional check that transformed arc actually touching\r\n                // eslint-disable-next-line\r\n                let [dist_tmp, shortest_segment_tmp] =\r\n                    arc1.distanceTo( CollisionDistance.translateArc(arc2, new Vector(-distance,0)));\r\n                if (Flatten.Utils.EQ_0(dist_tmp)) {\r\n                    collision_distance = distance;\r\n                }\r\n            }\r\n        }\r\n\r\n        // test translation of arc1.center to arc2 reduced by r1\r\n        if (Flatten.Utils.LT(arc1.r, arc2.r)) {\r\n            let arc_reduced = arc2.clone();\r\n            arc_reduced.r -= arc1.r;\r\n            distance = CollisionDistance.point2shape(arc1.center, arc_reduced);\r\n            if (distance < collision_distance) {\r\n                // additional check that transformed arc actually touching\r\n                // eslint-disable-next-line\r\n                let [dist_tmp, shortest_segment_tmp] =\r\n                    arc1.distanceTo( CollisionDistance.translateArc(arc2, new Vector(-distance,0)));\r\n                if (Flatten.Utils.EQ_0(dist_tmp)) {\r\n                    collision_distance = distance;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let point of arc1.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, arc2);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        for (let point of arc2.vertices) {\r\n            let distance = CollisionDistance.point2shape(point, arc1);\r\n            if (distance < collision_distance) {\r\n                collision_distance = distance;\r\n            }\r\n        }\r\n        return collision_distance;\r\n    }\r\n\r\n    static translateArc(arc, vec) {\r\n        let arc_tmp = arc.clone();\r\n        arc_tmp.pc = arc_tmp.pc.translate(vec);\r\n        return arc_tmp;\r\n    }\r\n\r\n    static translate(polygon, vec) {\r\n        let newPolygon = new Polygon();\r\n        for (let face of polygon.faces) {\r\n            let shapes = [];\r\n            for (let edge of face) {\r\n                if (edge.shape instanceof Segment) {\r\n                    shapes.push(\r\n                        new Segment(edge.shape.ps.translate(vec), edge.shape.pe.translate(vec))\r\n                    )\r\n                }\r\n                else if (edge.shape instanceof  Arc) {\r\n                    let arc_trans = edge.shape.clone();\r\n                    arc_trans.pc = edge.shape.pc.translate(vec);\r\n                    shapes.push(arc_trans);\r\n                }\r\n            }\r\n            newPolygon.addFace(shapes);\r\n        }\r\n        return newPolygon;\r\n    }\r\n\r\n};\r\n\r\nCollisionDistance.Flatten = Flatten;\r\n\r\nexport default CollisionDistance;\r\n","import /*React,*/ {Component} from 'react';\r\nimport Flatten from '@flatten-js/core';\r\nimport CollisionDistance from \"../../models/collisionDistance\";\r\nimport axios from \"axios\";\r\nimport Layers from \"../../models/layers\";\r\n// import {Model} from \"../../models/model\";\r\nimport * as ActionTypes from \"../../store/actionTypes\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/appActions\";\r\n\r\nlet {vector} = Flatten;\r\n\r\nclass CollisionDemo extends Component {\r\n    state={\r\n        done:false,\r\n        data:[]\r\n    };\r\n    componentDidUpdate() {\r\n        if (this.props.stage && !this.state.done) {\r\n            let stage = this.props.stage;\r\n            let layers = this.props.layers;\r\n\r\n            let layer = Layers.newLayer(stage, layers);\r\n            layer.color = Layers.getNextColor(layers);\r\n            layer.name = \"collision_demo\";\r\n            layer.title = \"collision_demo\";\r\n            layer.affected = true;\r\n            layer.displayed = true;\r\n\r\n            axios(\"https://gist.githubusercontent.com/alexbol99/81893d40ec5eaa00d0336c35e069dd73/raw/b9328a4c6d7d6a44f375c68b4ec207690f40fd19/Block_53388_2parts_Cont.txt\")\r\n                .then( (resp) => {\r\n                    let parser = this.props.parser;\r\n                    let polygon1 = parser.parseToPolygon(resp.data);\r\n                    layer.add(polygon1);\r\n\r\n                    let vec = vector( 2*(polygon1.box.xmax - polygon1.box.xmin), 0 );\r\n                    let polygon2 = polygon1.translate(vec);\r\n                    layer.add(polygon2);\r\n\r\n                    let collision = CollisionDistance.apply(polygon2, polygon1);\r\n                    let polygon3 = polygon2.translate(vector(-collision, 0));\r\n                    layer.add(polygon3);\r\n\r\n                    // layers.push(layer);\r\n\r\n                    this.props.panAndZoomToShape(stage, layer);\r\n                    this.props.addNewLayer(layer);\r\n                    this.props.applyCollisionDemo();\r\n                    this.props.asyncOperationEnded();\r\n                });\r\n            this.setState({done:true});\r\n            this.props.asyncOperationStarted();\r\n        }\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layers: state.layers,\r\n        stage: state.app.stage,\r\n        parser: state.app.parser\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        panAndZoomToShape: (stage, layer) => dispatch({\r\n            type: ActionTypes.PAN_AND_ZOOM_TO_SHAPE,\r\n            stage: stage,\r\n            shape: layer\r\n        }),\r\n        addNewLayer: (layer) => dispatch({\r\n            type: ActionTypes.ADD_NEW_LAYER,\r\n            layer: layer\r\n        }),\r\n        applyCollisionDemo: () => dispatch({\r\n            type: ActionTypes.COLLISION_DEMO_URI\r\n        }),\r\n        asyncOperationStarted: () => dispatch(actions.asyncOperationStarted()),\r\n        asyncOperationEnded: () => dispatch(actions.asyncOperationEnded())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CollisionDemo);\r\n","import React from 'react';\r\nimport Modal from '../Modal';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <Modal>\r\n            <div className={classes.BackDrop} >\r\n                <div className={classes.Loader}>Loading ...</div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default spinner;","import * as actionTypes from '../actionTypes';\r\nimport axios from 'axios';\r\n\r\nconst apiKey = \"AIzaSyDMUAcjgolAlapdpFmPEz8SaId1DZw7MpQ\";\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_STARTED\r\n    }\r\n};\r\n\r\nexport const authSucceed = (token, userId, username=null) => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_SUCCEED,\r\n        token,\r\n        userId,\r\n        username\r\n    }\r\n};\r\n\r\nexport const authFailed = (error) => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_FAILED,\r\n        error\r\n    }\r\n};\r\n\r\nexport const authSetUsername = (username) => {\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_SET_USERNAME,\r\n        username\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTHENTICATION_LOGOUT\r\n    }\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            const email = localStorage.getItem('email');\r\n            const password = localStorage.getItem('password');\r\n            if (email && password) {\r\n                dispatch(logIn(email, password))\r\n            }\r\n            else {\r\n                dispatch(logout())\r\n            }\r\n        }, expirationTime * 1000)\r\n    }\r\n};\r\n\r\nexport const logIn = (email, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        };\r\n        localStorage.setItem('email', email);\r\n        localStorage.setItem('password', password);\r\n        const url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=\" + apiKey;\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n\r\n                dispatch(authSucceed(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n                const queryParams = '?auth=' + response.data.idToken + '&orderBy=\"userId\"&equalTo=\"' + response.data.localId + '\"';\r\n                return axios.get(\"https://debug-viewer.firebaseio.com/users.json\" + queryParams);\r\n            })\r\n            .then(response => {\r\n                if (Object.values(response.data.length > 0)) {\r\n                    const username = Object.values(response.data)[0].username;\r\n                    localStorage.setItem('username', username);\r\n                    dispatch(authSetUsername(Object.values(response.data)[0].username))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(authFailed(error.response.data.error))\r\n            })\r\n    }\r\n};\r\n\r\nexport const signUp = (username, email, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        };\r\n        const url = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=\" + apiKey;\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                localStorage.setItem('username', username);\r\n\r\n                dispatch(authSucceed(response.data.idToken, response.data.localId, username));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n\r\n                const user = {\r\n                    userId: response.data.localId,\r\n                    username: username\r\n                };\r\n                return axios.post(\"https://debug-viewer.firebaseio.com/users.json\", user);\r\n            })\r\n            .then(response => {\r\n                // do nothing\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response.data.error);\r\n                dispatch(authFailed(error.response.data.error))\r\n            })\r\n    }\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        }\r\n        else {\r\n            const userId = localStorage.getItem('userId');\r\n            const username = localStorage.getItem('username');\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate > new Date()) {\r\n                const timeLeft = expirationDate.getTime() - new Date().getTime()\r\n                dispatch(authSucceed(token, userId, username));\r\n                dispatch(checkAuthTimeout(timeLeft / 1000));\r\n            }\r\n            else {\r\n                dispatch(logout());\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\n\r\nimport AppBody from './AppBody';\r\nimport HeaderComponent from './components/Layout/HeaderComponent/HeaderComponent';\r\n// import Signup from './containers/Auth/SignUp/Signup';\r\n// import Login from './containers/Auth/Login/Login';\r\n// import Logout from './containers/Auth/Logout';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './App.css';\r\n\r\n// import CloudDocument from './components/Constructions/CloudDocument';\r\nimport Demo from './components/Constructions/Demo';\r\n// import BooleanTest from './components/Constructions/BooleanTest';\r\nimport SkeletonRecognition from './components/Constructions/SkeletonRecognition';\r\nimport CollisionDemo from \"./components/Constructions/CollisionDemo\";\r\nimport Spinner from \"./components/UI/Spinner/Spinner\";\r\n// import DocumentsComponent from \"./containers/DocumentsComponent/DocumentsComponent\";\r\nimport * as authActions from \"./store/actions/auth\";\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.authCheckState();\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.location.pathname === '/' && this.props.document.id !== undefined) {\r\n            this.props.history.push(\"/documents/\" + this.props.document.id)\r\n        }\r\n\r\n        // if (this.props.location.pathname.split('/').length > 2 &&\r\n        //     this.props.location.pathname.split('/')[2].length > 0 &&\r\n        //     this.props.document.id === undefined) {\r\n        //     this.props.history.push(\"/\");\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <HeaderComponent\r\n                    title={this.props.title}\r\n                    version={this.props.version}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                    username={this.props.username}\r\n                />\r\n\r\n                <Switch>\r\n                    {/*<Route path=\"/documents\" exact component={DocumentsComponent}/>*/}\r\n                    {/*<Route path=\"/signup\" component={Signup} />*/}\r\n                    {/*<Route path=\"/login\" component={Login} />*/}\r\n                    {/*<Route path=\"/logout\" component={Logout} />*/}\r\n\r\n                    <Route path=\"/\" component={AppBody}/>\r\n\r\n                    {/*<Route path=\"/documents/:id\" component={CloudDocument}/>*/}\r\n\r\n                    <Route path=\"/demo\" component={Demo}/>\r\n                    <Route path=\"/skeleton\" component={SkeletonRecognition}/>\r\n                    <Route path=\"/collision-distance\" component={CollisionDemo}/>\r\n\r\n                </Switch>\r\n\r\n                {this.props.showSpinner ? <Spinner/> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({auth, app, cloudStorage}) => {\r\n    return {\r\n        title: app.title,\r\n        version: app.version,\r\n        showSpinner: app.showSpinner,\r\n        document: cloudStorage.document,\r\n        isAuthenticated: auth.token !== null,\r\n        username: auth.username\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authCheckState: () => dispatch(authActions.authCheckState())\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n\r\n/*\r\n                    <Route path=\"/boolean-test\" component={BooleanTest}/>\r\n */","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport reducer from './store/reducer';\r\nimport log from './middleware/log';\r\nimport readFiles from './middleware/readFiles';\r\nimport pasteData from './middleware/pasteData';\r\nimport stageController from './middleware/stageController';\r\nimport skeleton_recognition from './middleware/skeleton_recognition';\r\nimport App from \"./App\";\r\n\r\nimport './index.css';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer,\r\n    composeEnhancers(\r\n        applyMiddleware(log, readFiles, pasteData, skeleton_recognition, stageController, thunk)\r\n    )\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1wEe_\",\"IconTrigger\":\"Button_IconTrigger__2UBJg\",\"IconModeActive\":\"Button_IconModeActive__3BB17\",\"IconModeNotActive\":\"Button_IconModeNotActive__ekYF8\",\"DrawerButton\":\"Button_DrawerButton__3mmir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer\":\"LayerListElement_Layer__TTm6c\",\"LayerSelectionBox\":\"LayerListElement_LayerSelectionBox__2y2BJ\",\"LayerSelectionMark\":\"LayerListElement_LayerSelectionMark__1YNk5\",\"LayerNameBox\":\"LayerListElement_LayerNameBox__rdxbt\",\"Layer-displayed\":\"LayerListElement_Layer-displayed__2ITp_\",\"Layer-undisplayed\":\"LayerListElement_Layer-undisplayed__v_ey_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonSeparator\":\"ButtonSeparator_ButtonSeparator__1v1YA\",\"IconSeparator\":\"ButtonSeparator_IconSeparator__1F-6s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-toolbar\":\"ToolbarComponent_App-toolbar__384Ol\",\"App-toolbar-units\":\"ToolbarComponent_App-toolbar-units__2xvim\",\"DrawerButton\":\"ToolbarComponent_DrawerButton__2XrL2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"ModalPopup_BackDrop__38gqK\",\"ModalPopup\":\"ModalPopup_ModalPopup__tiHI3\",\"fadeIn\":\"ModalPopup_fadeIn__1kcV2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-layers\":\"LayersList_App-layers__W6LER\",\"App-layers-displayed\":\"LayersList_App-layers-displayed__vbZrT\",\"fadeIn\":\"LayersList_fadeIn__1Noko\",\"Open\":\"LayersList_Open__23nbo\",\"Close\":\"LayersList_Close__2pLj6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-header\":\"HeaderComponent_App-header__3BtxE\",\"App-header-documents-page\":\"HeaderComponent_App-header-documents-page__cbwKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"Spinner_BackDrop__aToxg\",\"Loader\":\"Spinner_Loader__1wKrs\",\"load2\":\"Spinner_load2__o7gmt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-canvas\":\"CanvasComponent_App-canvas__1SRjy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-status-bar\":\"StatusComponent_App-status-bar__3yjbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LabelsLayer\":\"labelsLayer_LabelsLayer__13jtP\",\"LabelComponent\":\"labelsLayer_LabelComponent__1n-i4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutPopup\":\"AboutPopup_AboutPopup__3A-Ey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DownloadPopup\":\"DownloadPopup_DownloadPopup__3y--T\",\"fadeIn\":\"DownloadPopup_fadeIn__2guy3\",\"Open\":\"DownloadPopup_Open__1W2qy\",\"Close\":\"DownloadPopup_Close__2VKZE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main-content\":\"MainComponent_Main-content__1huDY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer-list-toolbar\":\"LayerListToolbar_Layer-list-toolbar__3h7SF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layer-edit-form\":\"LayerEditForm_Layer-edit-form__3PKfb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App-aside\":\"AsideComponent_App-aside__3lf4P\"};"],"sourceRoot":""}